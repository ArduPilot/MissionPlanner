<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACMgg8AjIIPAIyC
        DwCMgg8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIyC
        DwCMgg8QjIIPJoyCDwOMgg8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAjIIPAIyCDyCMgg+GjIIPIoyCDwCMgg8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACMgg8AjIIPJIyCD8OMgg99jIIPCIyCDwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAjIIPAIyCDwCMgg8kjIIPz4yCD96Mgg9AjIIPAIyCDwAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACMgg8AjIIPAIyCDyeMgg/TjIIP/4yCD6uMgg8ejIIPAIyC
        DwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        AAAAAAAAAAAAAAAAAACMgg8AjIIPBYyCDzGMgg88jIIPX4yCD66Mgg/sjIIP/oyCD/+Mgg//jIIP/4yC
        D/+Mgg//jIIP/4yCD/6Mgg+6jIIPJIyCDwCMgg8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACMgg8AjIIPAIyCDxeMgg9kjIIPx4yCD8qMgg+CjIIPTIyCD2eMgg+6jIIP8oyC
        D/+Mgg//jIIP/4yCD/+Mgg//jIIP/4yCD/iMgg+FjIIPCIyCDwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACMgg8AjIIPAIyCDwWMgg8sjIIPnoyCD/GMgg//jIIP/4yCD/iMgg/PjIIPg4yC
        D0yMgg9vjIIPv4yCD/OMgg//jIIP/4yCD/+Mgg//jIIP/4yCD9yMgg9HjIIPAIyCDwAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAjIIPAIyCDwOMgg85jIIPkIyCD8mMgg/4jIIP/4yCD/+Mgg//jIIP/4yC
        D/+Mgg/4jIIPxoyCD3iMgg9NjIIPboyCD76Mgg/2jIIP/4yCD/+Mgg//jIIP/4yCD6uMgg8YjIIPAIyC
        DwAAAAAAAAAAAAAAAAAAAAAAjIIPAIyCDwCMgg8MjIIPS4yCD8CMgg/8jIIP/4yCD/+Mgg//jIIP/4yC
        D/+Mgg//jIIP/4yCD/+Mgg//jIIP9IyCD8KMgg9vjIIPSIyCD4KMgg/OjIIP94yCD/+Mgg//jIIP8oyC
        D3GMgg8FjIIPAAAAAAAAAAAAjIIPAIyCDwCMgg8JjIIPL4yCD42Mgg/ljIIP/oyCD/+Mgg//jIIP/4yC
        D/+Mgg//jIIP/4yCD/+Mgg//jIIP/4yCD/+Mgg//jIIP/4yCD/SMgg++jIIPaIyCD0qMgg9+jIIPzoyC
        D/qMgg//jIIPz4yCDzWMgg8AjIIPAIyCDwCMgg8CjIIPKYyCD4WMgg/MjIIP84yCD/+Mgg//jIIP/4yC
        D/+Mgg//jIIP/4yCD/+Mgg//jIIP/4yCD/+Mgg//jIIP/4yCD/+Mgg//jIIP/4yCD/6Mgg/tjIIPtIyC
        D2mMgg9RjIIPjIyCD9aMgg/2jIIPo4yCDxiMgg8AjIIPBoyCDzyMgg+2jIIP+oyCD/+Mgg//jIIP/4yC
        D/+Mgg//jIIP/4yCD/+Mgg//jIIP/4yCD/+Mgg//jIIP/4yCD/+Mgg//jIIP/4yCD/+Mgg//jIIP/4yC
        D/+Mgg//jIIP74yCD7SMgg9cjIIPTYyCD5CMgg/NjIIPcIyCDweMgg9BjIIPiIyCD6+Mgg+yjIIPwoyC
        D9KMgg/RjIIP0YyCD9iMgg/ojIIP6IyCD+eMgg/pjIIP9IyCD/WMgg/zjIIP84yCD/mMgg/8jIIP+4yC
        D/uMgg/9jIIP/4yCD/+Mgg//jIIP/oyCD+iMgg+pjIIPYIyCD1KMgg9ujIIPIoh+DxSKgA8bjIIPGYyC
        DxaMgg8hjIIPLoyCDy2Mgg8rjIIPNIyCD0qMgg9KjIIPSIyCD0uMgg9njIIPaoyCD2eMgg9mjIIPgoyC
        D42Mgg+LjIIPi4yCD52Mgg+vjIIPr4yCD7KMgg+7jIIPy4yCD82Mgg+5jIIPe4yCDzKMgg8OAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACMgg8AjIIPAIyCDwKMgg8BjIIPAYyC
        DwCMgg8EjIIPBoyCDwaMgg8GjIIPCoyCDw6Mgg8PjIIPEIyCDxKMgg8WjIIPGIyCDxuMgg8ajIIPC4yC
        DwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA///////4////+P////h////4f///+D////gf///4H///+A////gH///4
        B///+AP///gB///4Af//+AD///gAf//4AH//+AA///gAH//gAB//wAAP/wAAD/wAAAf4AAAD4AAAA4AA
        AAEAAAAAAAAAAAAAAAD/+IAB//////////8=
</value>
  </data>
</root>