name: DotNet Build
on: [push, workflow_dispatch, pull_request]

jobs:
  build:
    name: Build Release
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
          fetch-depth: 10

      - name: Build
        shell: pwsh
        run: |
          $msbuildPath = Split-Path (& "${env:ProgramFiles(x86)}\Microsoft Visual Studio\Installer\vswhere.exe" -latest -requires Microsoft.Component.MSBuild -find MSBuild\Current\Bin\amd64\MSBuild.exe | Select-Object -First 1) -Parent
          $env:PATH = $msbuildPath + ';' + $env:PATH
          nuget locals all -clear
          msbuild -v:m -restore -t:Build -p:Configuration=Release MissionPlanner.sln

      - name: Cleanup
        shell: pwsh
        run: |
          cd bin\Release\net461
          gci plugins | ForEach-Object {                 if (Test-Path $_.Name -PathType Leaf)                {                    Write-Host "Remove" $_.FullName   ;                 Remove-Item $_.FullName                            } else {                    Write-Host $_.Name                }            }

          copy version.txt ..\..\..\
          7z a -tzip ..\..\..\MissionPlannerBeta.zip *
          cd ..
          .\md5sum.exe net461 > ..\..\checksums.txt
          
      - uses: actions/upload-artifact@v1
        with:
          name: MissionPlannerBeta
          path: bin\Release\net461
          
      - uses: "marvinpinto/action-automatic-releases@v1.2.1"
        if: ${{ github.ref == 'refs/tags/beta' }}
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "betarelease"
          prerelease: true
          title: "Beta Build"
          files: |
            MissionPlannerBeta.zip
            checksums.txt
            version.txt
            ChangeLog.txt


  buildDebug:
    name: Build Debug
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
          fetch-depth: 10

      - name: Cache multiple paths
        uses: actions/cache@v2
        with:
          path: |
            **/obj/**
          key: ${{ runner.os }}-buildDebug

      - name: Build
        shell: pwsh
        run: |
          $msbuildPath = Split-Path (& "${env:ProgramFiles(x86)}\Microsoft Visual Studio\Installer\vswhere.exe" -latest -requires Microsoft.Component.MSBuild -find MSBuild\Current\Bin\amd64\MSBuild.exe | Select-Object -First 1) -Parent
          $env:PATH = $msbuildPath + ';' + $env:PATH
          nuget locals all -clear
          msbuild -v:m -restore -t:Build -p:Configuration=Debug MissionPlanner.sln

      - name: Cleanup
        shell: pwsh
        run: |
          cd bin\Debug\net461
          gci plugins | ForEach-Object {                 if (Test-Path $_.Name -PathType Leaf)                {                    Write-Host "Remove" $_.FullName   ;                 Remove-Item $_.FullName                            } else {                    Write-Host $_.Name                }            }
