<?xml version="1.0"?>
<doc>
    <assembly>
        <name>GMap.NET.Core</name>
    </assembly>
    <members>
        <member name="T:GMap.NET.Projections.MapyCZProjection">
            <summary>
            GEOGCS[\"WGS 84\",DATUM[\"WGS_1984\",SPHEROID[\"WGS 84\",6378137,298.257223563,AUTHORITY[\"EPSG\",\"7030\"]],AUTHORITY[\"EPSG\",\"6326\"]],PRIMEM[\"Greenwich\",0,AUTHORITY[\"EPSG\",\"8901\"]],UNIT[\"degree\",0.01745329251994328,AUTHORITY[\"EPSG\",\"9122\"]],AUTHORITY[\"EPSG\",\"4326\"]]
            PROJCS["Mapy.cz",GEOGCS["GCS_WGS_1984",DATUM["D_WGS_1984",SPHEROID["WGS_1984",6378137,298.257223563]],PRIMEM["Greenwich",0],UNIT["Degree",0.017453292519943295]],PROJECTION["Transverse_Mercator"],PARAMETER["latitude_of_origin",0],PARAMETER["central_meridian",15],PARAMETER["scale_factor",0.9996],PARAMETER["false_easting",134400000],PARAMETER["false_northing",-41600000],UNIT["1/32meter",0.03125]]
            </summary>
        </member>
        <member name="T:GMap.NET.PureProjection">
            <summary>
            defines projection
            </summary>
        </member>
        <member name="F:GMap.NET.PureProjection.MAX_VAL">
            <summary>
            MAX_VAL
            </summary>
        </member>
        <member name="M:GMap.NET.PureProjection.FromLatLngToPixel(System.Double,System.Double,System.Int32)">
            <summary>
            get pixel coordinates from lat/lng
            </summary>
            <param name="lat"></param>
            <param name="lng"></param>
            <param name="zoom"></param>
            <returns></returns>
        </member>
        <member name="M:GMap.NET.PureProjection.FromPixelToLatLng(System.Int64,System.Int64,System.Int32)">
            <summary>
            gets lat/lng coordinates from pixel coordinates
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="zoom"></param>
            <returns></returns>
        </member>
        <member name="M:GMap.NET.PureProjection.FromLatLngToPixel(GMap.NET.PointLatLng,System.Int32,System.Boolean)">
            <summary>
            get pixel coordinates from lat/lng
            </summary>
            <param name="p"></param>
            <param name="zoom"></param>
            <returns></returns>
        </member>
        <member name="M:GMap.NET.PureProjection.FromPixelToLatLng(GMap.NET.GPoint,System.Int32,System.Boolean)">
            <summary>
            gets lat/lng coordinates from pixel coordinates
            </summary>
            <param name="p"></param>
            <param name="zoom"></param>
            <returns></returns>
        </member>
        <member name="M:GMap.NET.PureProjection.FromPixelToTileXY(GMap.NET.GPoint)">
            <summary>
            gets tile coorddinate from pixel coordinates
            </summary>
            <param name="p"></param>
            <returns></returns>
        </member>
        <member name="M:GMap.NET.PureProjection.FromTileXYToPixel(GMap.NET.GPoint)">
            <summary>
            gets pixel coordinate from tile coordinate
            </summary>
            <param name="p"></param>
            <returns></returns>
        </member>
        <member name="M:GMap.NET.PureProjection.GetTileMatrixMinXY(System.Int32)">
            <summary>
            min. tile in tiles at custom zoom level
            </summary>
            <param name="zoom"></param>
            <returns></returns>
        </member>
        <member name="M:GMap.NET.PureProjection.GetTileMatrixMaxXY(System.Int32)">
            <summary>
            max. tile in tiles at custom zoom level
            </summary>
            <param name="zoom"></param>
            <returns></returns>
        </member>
        <member name="M:GMap.NET.PureProjection.GetTileMatrixSizeXY(System.Int32)">
            <summary>
            gets matrix size in tiles
            </summary>
            <param name="zoom"></param>
            <returns></returns>
        </member>
        <member name="M:GMap.NET.PureProjection.GetTileMatrixItemCount(System.Int32)">
            <summary>
            tile matrix size in pixels at custom zoom level
            </summary>
            <param name="zoom"></param>
            <returns></returns>
        </member>
        <member name="M:GMap.NET.PureProjection.GetTileMatrixSizePixel(System.Int32)">
            <summary>
            gets matrix size in pixels
            </summary>
            <param name="zoom"></param>
            <returns></returns>
        </member>
        <member name="M:GMap.NET.PureProjection.GetAreaTileList(GMap.NET.RectLatLng,System.Int32,System.Int32)">
            <summary>
            gets all tiles in rect at specific zoom
            </summary>
        </member>
        <member name="M:GMap.NET.PureProjection.GetGroundResolution(System.Int32,System.Double)">
            <summary>
            The ground resolution indicates the distance (in meters) on the ground that’s represented by a single pixel in the map.
            For example, at a ground resolution of 10 meters/pixel, each pixel represents a ground distance of 10 meters.
            </summary>
            <param name="zoom"></param>
            <param name="latitude"></param>
            <returns></returns>
        </member>
        <member name="F:GMap.NET.PureProjection.PI">
            <summary>
            PI
            </summary>
        </member>
        <member name="F:GMap.NET.PureProjection.HALF_PI">
            <summary>
            Half of PI
            </summary>
        </member>
        <member name="F:GMap.NET.PureProjection.TWO_PI">
            <summary>
            PI * 2
            </summary>
        </member>
        <member name="F:GMap.NET.PureProjection.EPSLoN">
            <summary>
            EPSLoN
            </summary>
        </member>
        <member name="F:GMap.NET.PureProjection.MAXLONG">
            <summary>
            MAXLONG
            </summary>
        </member>
        <member name="F:GMap.NET.PureProjection.DBLLONG">
            <summary>
            DBLLONG
            </summary>
        </member>
        <member name="M:GMap.NET.PureProjection.Sign(System.Double)">
            <summary>
             return the sign of an argument 
            </summary>
        </member>
        <member name="M:GMap.NET.PureProjection.SinCos(System.Double,System.Double@,System.Double@)">
            <summary>
            calculates the sine and cosine
            </summary>
        </member>
        <member name="M:GMap.NET.PureProjection.e0fn(System.Double)">
            <summary>
            computes the constants e0, e1, e2, and e3 which are used
            in a series for calculating the distance along a meridian.
            </summary>
            <param name="x">represents the eccentricity squared</param>
            <returns></returns>
        </member>
        <member name="M:GMap.NET.PureProjection.mlfn(System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            computes the value of M which is the distance along a meridian
            from the Equator to latitude phi.
            </summary>
        </member>
        <member name="M:GMap.NET.PureProjection.GetUTMzone(System.Double)">
            <summary>
            calculates UTM zone number
            </summary>
            <param name="lon">Longitude in degrees</param>
            <returns></returns>
        </member>
        <member name="M:GMap.NET.PureProjection.Clip(System.Double,System.Double,System.Double)">
            <summary>
            Clips a number to the specified minimum and maximum values.
            </summary>
            <param name="n">The number to clip.</param>
            <param name="minValue">Minimum allowable value.</param>
            <param name="maxValue">Maximum allowable value.</param>
            <returns>The clipped value.</returns>
        </member>
        <member name="M:GMap.NET.PureProjection.GetDistance(GMap.NET.PointLatLng,GMap.NET.PointLatLng)">
            <summary>
            distance (in km) between two points specified by latitude/longitude
            The Haversine formula, http://www.movable-type.co.uk/scripts/latlong.html
            </summary>
            <param name="p1"></param>
            <param name="p2"></param>
            <returns></returns>
        </member>
        <member name="M:GMap.NET.PureProjection.GetBearing(GMap.NET.PointLatLng,GMap.NET.PointLatLng)">
            <summary>
            Accepts two coordinates in degrees.
            </summary>
            <returns>A double value in degrees. From 0 to 360.</returns>
        </member>
        <member name="M:GMap.NET.PureProjection.FromGeodeticToCartesian(System.Double,System.Double,System.Double,System.Double@,System.Double@,System.Double@)">
            <summary>
            Conversion from cartesian earth-sentered coordinates to geodetic coordinates in the given datum
            </summary>
            <param name="Lat"></param>
            <param name="Lon"></param>
            <param name="Height">Height above ellipsoid [m]</param>
            <param name="X"></param>
            <param name="Y"></param>
            <param name="Z"></param>
        </member>
        <member name="M:GMap.NET.PureProjection.FromCartesianTGeodetic(System.Double,System.Double,System.Double,System.Double@,System.Double@)">
            <summary>
            Conversion from cartesian earth-sentered coordinates to geodetic coordinates in the given datum
            </summary>
            <param name="X"></param>
            <param name="Y"></param>
            <param name="Z"></param>
            <param name="Lat"></param>
            <param name="Lon"></param>
        </member>
        <member name="P:GMap.NET.PureProjection.TileSize">
            <summary>
            size of tile
            </summary>
        </member>
        <member name="P:GMap.NET.PureProjection.Axis">
            <summary>
            Semi-major axis of ellipsoid, in meters
            </summary>
        </member>
        <member name="P:GMap.NET.PureProjection.Flattening">
            <summary>
            Flattening of ellipsoid
            </summary>
        </member>
        <member name="P:GMap.NET.PureProjection.Bounds">
            <summary>
            gets boundaries
            </summary>
        </member>
        <member name="T:GMap.NET.Internals.RawTile">
            <summary>
            struct for raw tile
            </summary>
        </member>
        <member name="T:GMap.NET.MapProviders.GoogleChinaSatelliteMapProvider">
            <summary>
            GoogleChinaSatelliteMap provider
            </summary>
        </member>
        <member name="T:GMap.NET.MapProviders.GMapProvider">
            <summary>
            base class for each map provider
            </summary>
        </member>
        <member name="M:GMap.NET.MapProviders.GMapProvider.GetTileImage(GMap.NET.GPoint,System.Int32)">
            <summary>
            gets tile image using implmented provider
            </summary>
            <param name="pos"></param>
            <param name="zoom"></param>
            <returns></returns>
        </member>
        <member name="M:GMap.NET.MapProviders.GMapProvider.OnInitialized">
            <summary>
            called before first use
            </summary>
        </member>
        <member name="F:GMap.NET.MapProviders.GMapProvider.DbId">
            <summary>
            id for database, a hash of provider guid
            </summary>
        </member>
        <member name="F:GMap.NET.MapProviders.GMapProvider.Area">
            <summary>
            area of map
            </summary>
        </member>
        <member name="F:GMap.NET.MapProviders.GMapProvider.MinZoom">
            <summary>
            minimum level of zoom
            </summary>
        </member>
        <member name="F:GMap.NET.MapProviders.GMapProvider.MaxZoom">
            <summary>
            maximum level of zoom
            </summary>
        </member>
        <member name="F:GMap.NET.MapProviders.GMapProvider.WebProxy">
            <summary>
            proxy for net access
            </summary>
        </member>
        <member name="F:GMap.NET.MapProviders.GMapProvider.IsSocksProxy">
            <summary>
            Connect trough a SOCKS 4/5 proxy server
            </summary>
        </member>
        <member name="F:GMap.NET.MapProviders.GMapProvider.Credential">
            <summary>
            NetworkCredential for tile http access
            </summary>
        </member>
        <member name="F:GMap.NET.MapProviders.GMapProvider.UserAgent">
            <summary>
            Gets or sets the value of the User-agent HTTP header.
            It's pseudo-randomized to avoid blockages...
            </summary>                  
        </member>
        <member name="F:GMap.NET.MapProviders.GMapProvider.TimeoutMs">
            <summary>
            timeout for provider connections
            </summary>
        </member>
        <member name="F:GMap.NET.MapProviders.GMapProvider.RefererUrl">
            <summary>
            Gets or sets the value of the Referer HTTP header.
            </summary>
        </member>
        <member name="F:GMap.NET.MapProviders.GMapProvider.InvertedAxisY">
            <summary>
            true if tile origin at BottomLeft, WMS-C
            </summary>
        </member>
        <member name="F:GMap.NET.MapProviders.GMapProvider.BypassCache">
            <summary>
            to bypass the cache, set to true
            </summary>
        </member>
        <member name="F:GMap.NET.MapProviders.GMapProvider.TileImageProxy">
            <summary>
            internal proxy for image managment
            </summary>
        </member>
        <member name="P:GMap.NET.MapProviders.GMapProvider.Id">
            <summary>
            unique provider id
            </summary>
        </member>
        <member name="P:GMap.NET.MapProviders.GMapProvider.Name">
            <summary>
            provider name
            </summary>
        </member>
        <member name="P:GMap.NET.MapProviders.GMapProvider.Projection">
            <summary>
            provider projection
            </summary>
        </member>
        <member name="P:GMap.NET.MapProviders.GMapProvider.Overlays">
            <summary>
            provider overlays
            </summary>
        </member>
        <member name="P:GMap.NET.MapProviders.GMapProvider.IsInitialized">
            <summary>
            was provider initialized
            </summary>
        </member>
        <member name="P:GMap.NET.MapProviders.GMapProvider.Language">
            <summary>
            map language
            </summary>
        </member>
        <member name="T:GMap.NET.RoutingProvider">
            <summary>
            routing interface
            </summary>
        </member>
        <member name="M:GMap.NET.RoutingProvider.GetRoute(GMap.NET.PointLatLng,GMap.NET.PointLatLng,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            get route between two points
            </summary>
        </member>
        <member name="M:GMap.NET.RoutingProvider.GetRoute(System.String,System.String,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            get route between two points
            </summary>
        </member>
        <member name="T:GMap.NET.GeocodingProvider">
            <summary>
            geocoding interface
            </summary>
        </member>
        <member name="T:GMap.NET.DirectionsProvider">
            <summary>
            directions interface
            </summary>
        </member>
        <member name="M:GMap.NET.DirectionsProvider.GetDirections(GMap.NET.DirectionsStatusCode@,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            service may provide more than one route alternative in the response
            </summary>
            <param name="status"></param>
            <param name="start"></param>
            <param name="end"></param>
            <param name="avoidHighways"></param>
            <param name="avoidTolls"></param>
            <param name="walkingMode"></param>
            <param name="sensor"></param>
            <param name="metric"></param>
            <returns></returns>
        </member>
        <member name="M:GMap.NET.DirectionsProvider.GetDirections(GMap.NET.DirectionsStatusCode@,GMap.NET.PointLatLng,GMap.NET.PointLatLng,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            service may provide more than one route alternative in the response
            </summary>
            <param name="status"></param>
            <param name="start"></param>
            <param name="end"></param>
            <param name="avoidHighways"></param>
            <param name="avoidTolls"></param>
            <param name="walkingMode"></param>
            <param name="sensor"></param>
            <param name="metric"></param>
            <returns></returns>
        </member>
        <member name="M:GMap.NET.MapProviders.GoogleMapProviderBase.GetPoints(GMap.NET.Placemark,System.Collections.Generic.List{GMap.NET.PointLatLng}@)">
            <summary>
            NotImplemented
            </summary>
            <param name="placemark"></param>
            <param name="pointList"></param>
            <returns></returns>
        </member>
        <member name="M:GMap.NET.MapProviders.GoogleMapProviderBase.GetPoint(GMap.NET.Placemark,GMap.NET.GeoCoderStatusCode@)">
            <summary>
            NotImplemented
            </summary>
            <param name="placemark"></param>
            <param name="status"></param>
            <returns></returns>
        </member>
        <member name="M:GMap.NET.MapProviders.GoogleMapProviderBase.GetDirections(GMap.NET.DirectionsStatusCode@,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            NotImplemented
            </summary>
            <param name="status"></param>
            <param name="start"></param>
            <param name="end"></param>
            <param name="avoidHighways"></param>
            <param name="avoidTolls"></param>
            <param name="walkingMode"></param>
            <param name="sensor"></param>
            <param name="metric"></param>
            <returns></returns>
        </member>
        <member name="M:GMap.NET.MapProviders.GoogleMapProviderBase.GetDirections(GMap.NET.DirectionsStatusCode@,GMap.NET.PointLatLng,GMap.NET.PointLatLng,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            NotImplemented
            </summary>
            <param name="status"></param>
            <param name="start"></param>
            <param name="end"></param>
            <param name="avoidHighways"></param>
            <param name="avoidTolls"></param>
            <param name="walkingMode"></param>
            <param name="sensor"></param>
            <param name="metric"></param>
            <returns></returns>
        </member>
        <member name="P:GMap.NET.MapProviders.GoogleMapProviderBase.Id">
            <summary>
            API generated using http://greatmaps.codeplex.com/
            from http://tinyurl.com/3q6zhcw
            </summary>
        </member>
        <member name="T:GMap.NET.MapProviders.OpenStreetMapQuestSatteliteProvider">
            <summary>
            OpenStreetMapQuestSattelite provider - http://wiki.openstreetmap.org/wiki/MapQuest
            </summary>
        </member>
        <member name="M:GMap.NET.MapProviders.OpenStreetMapProviderBase.GetRoute(System.String,System.String,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            NotImplemented
            </summary>
            <param name="start"></param>
            <param name="end"></param>
            <param name="avoidHighways"></param>
            <param name="walkingMode"></param>
            <param name="Zoom"></param>
            <returns></returns>
        </member>
        <member name="T:GMap.NET.MapProviders.LithuaniaHybridOldMapProvider">
            <summary>
            LithuaniaHybridNewMap, from 2005 data, provider
            </summary>
        </member>
        <member name="T:GMap.NET.MapProviders.CzechMapProvider">
            <summary>
            CzechMap provider, http://www.mapy.cz/
            </summary>
        </member>
        <member name="T:GMap.NET.MapProviders.ArcGIS_World_Terrain_Base_MapProvider">
            <summary>
            ArcGIS_World_Terrain_Base_Map provider, http://server.arcgisonline.com
            </summary>
        </member>
        <member name="T:Org.Mentalis.Network.ProxySocket.ProxyTypes">
            <summary>
            Specifies the type of proxy servers that an instance of the ProxySocket class can use.
            </summary>
        </member>
        <member name="F:Org.Mentalis.Network.ProxySocket.ProxyTypes.None">
            <summary>No proxy server; the ProxySocket object behaves exactly like an ordinary Socket object.</summary>
        </member>
        <member name="F:Org.Mentalis.Network.ProxySocket.ProxyTypes.Socks4">
            <summary>A SOCKS4[A] proxy server.</summary>
        </member>
        <member name="F:Org.Mentalis.Network.ProxySocket.ProxyTypes.Socks5">
            <summary>A SOCKS5 proxy server.</summary>
        </member>
        <member name="T:Org.Mentalis.Network.ProxySocket.ProxySocket">
            <summary>
            Implements a Socket class that can connect trough a SOCKS proxy server.
            </summary>
            <remarks>This class implements SOCKS4[A] and SOCKS5.<br>It does not, however, implement the BIND commands, so you cannot .</br></remarks>
        </member>
        <member name="M:Org.Mentalis.Network.ProxySocket.ProxySocket.#ctor(System.Net.Sockets.AddressFamily,System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType)">
            <summary>
            Initializes a new instance of the ProxySocket class.
            </summary>
            <param name="addressFamily">One of the AddressFamily values.</param>
            <param name="socketType">One of the SocketType values.</param>
            <param name="protocolType">One of the ProtocolType values.</param>
            <exception cref="T:System.Net.Sockets.SocketException">The combination of addressFamily, socketType, and protocolType results in an invalid socket.</exception>
        </member>
        <member name="M:Org.Mentalis.Network.ProxySocket.ProxySocket.#ctor(System.Net.Sockets.AddressFamily,System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType,System.String)">
            <summary>
            Initializes a new instance of the ProxySocket class.
            </summary>
            <param name="addressFamily">One of the AddressFamily values.</param>
            <param name="socketType">One of the SocketType values.</param>
            <param name="protocolType">One of the ProtocolType values.</param>
            <param name="proxyUsername">The username to use when authenticating with the proxy server.</param>
            <exception cref="T:System.Net.Sockets.SocketException">The combination of addressFamily, socketType, and protocolType results in an invalid socket.</exception>
            <exception cref="T:System.ArgumentNullException"><c>proxyUsername</c> is null.</exception>
        </member>
        <member name="M:Org.Mentalis.Network.ProxySocket.ProxySocket.#ctor(System.Net.Sockets.AddressFamily,System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType,System.String,System.String)">
            <summary>
            Initializes a new instance of the ProxySocket class.
            </summary>
            <param name="addressFamily">One of the AddressFamily values.</param>
            <param name="socketType">One of the SocketType values.</param>
            <param name="protocolType">One of the ProtocolType values.</param>
            <param name="proxyUsername">The username to use when authenticating with the proxy server.</param>
            <param name="proxyPassword">The password to use when authenticating with the proxy server.</param>
            <exception cref="T:System.Net.Sockets.SocketException">The combination of addressFamily, socketType, and protocolType results in an invalid socket.</exception>
            <exception cref="T:System.ArgumentNullException"><c>proxyUsername</c> -or- <c>proxyPassword</c> is null.</exception>
        </member>
        <member name="M:Org.Mentalis.Network.ProxySocket.ProxySocket.Connect(System.Net.EndPoint)">
            <summary>
            Establishes a connection to a remote device.
            </summary>
            <param name="remoteEP">An EndPoint that represents the remote device.</param>
            <exception cref="T:System.ArgumentNullException">The remoteEP parameter is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.Net.Sockets.SocketException">An operating system error occurs while accessing the Socket.</exception>
            <exception cref="T:System.ObjectDisposedException">The Socket has been closed.</exception>
            <exception cref="T:Org.Mentalis.Network.ProxySocket.ProxyException">An error occured while talking to the proxy server.</exception>
        </member>
        <member name="M:Org.Mentalis.Network.ProxySocket.ProxySocket.Connect(System.String,System.Int32)">
            <summary>
            Establishes a connection to a remote device.
            </summary>
            <param name="host">The remote host to connect to.</param>
            <param name="port">The remote port to connect to.</param>
            <exception cref="T:System.ArgumentNullException">The host parameter is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentException">The port parameter is invalid.</exception>
            <exception cref="T:System.Net.Sockets.SocketException">An operating system error occurs while accessing the Socket.</exception>
            <exception cref="T:System.ObjectDisposedException">The Socket has been closed.</exception>
            <exception cref="T:Org.Mentalis.Network.ProxySocket.ProxyException">An error occured while talking to the proxy server.</exception>
            <remarks>If you use this method with a SOCKS4 server, it will let the server resolve the hostname. Not all SOCKS4 servers support this 'remote DNS' though.</remarks>
        </member>
        <member name="M:Org.Mentalis.Network.ProxySocket.ProxySocket.BeginConnect(System.Net.EndPoint,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous request for a connection to a network device.
            </summary>
            <param name="remoteEP">An EndPoint that represents the remote device.</param>
            <param name="callback">The AsyncCallback delegate.</param>
            <param name="state">An object that contains state information for this request.</param>
            <returns>An IAsyncResult that references the asynchronous connection.</returns>
            <exception cref="T:System.ArgumentNullException">The remoteEP parameter is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.Net.Sockets.SocketException">An operating system error occurs while creating the Socket.</exception>
            <exception cref="T:System.ObjectDisposedException">The Socket has been closed.</exception>
        </member>
        <member name="M:Org.Mentalis.Network.ProxySocket.ProxySocket.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous request for a connection to a network device.
            </summary>
            <param name="host">The host to connect to.</param>
            <param name="port">The port on the remote host to connect to.</param>
            <param name="callback">The AsyncCallback delegate.</param>
            <param name="state">An object that contains state information for this request.</param>
            <returns>An IAsyncResult that references the asynchronous connection.</returns>
            <exception cref="T:System.ArgumentNullException">The host parameter is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentException">The port parameter is invalid.</exception>
            <exception cref="T:System.Net.Sockets.SocketException">An operating system error occurs while creating the Socket.</exception>
            <exception cref="T:System.ObjectDisposedException">The Socket has been closed.</exception>
        </member>
        <member name="M:Org.Mentalis.Network.ProxySocket.ProxySocket.EndConnect(System.IAsyncResult)">
            <summary>
            Ends a pending asynchronous connection request.
            </summary>
            <param name="asyncResult">Stores state information for this asynchronous operation as well as any user-defined data.</param>
            <exception cref="T:System.ArgumentNullException">The asyncResult parameter is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentException">The asyncResult parameter was not returned by a call to the BeginConnect method.</exception>
            <exception cref="T:System.Net.Sockets.SocketException">An operating system error occurs while accessing the Socket.</exception>
            <exception cref="T:System.ObjectDisposedException">The Socket has been closed.</exception>
            <exception cref="T:System.InvalidOperationException">EndConnect was previously called for the asynchronous connection.</exception>
            <exception cref="T:Org.Mentalis.Network.ProxySocket.ProxyException">The proxy server refused the connection.</exception>
        </member>
        <member name="M:Org.Mentalis.Network.ProxySocket.ProxySocket.BeginDns(System.String,Org.Mentalis.Network.ProxySocket.HandShakeComplete)">
            <summary>
            Begins an asynchronous request to resolve a DNS host name or IP address in dotted-quad notation to an IPAddress instance.
            </summary>
            <param name="host">The host to resolve.</param>
            <param name="callback">The method to call when the hostname has been resolved.</param>
            <returns>An IAsyncResult instance that references the asynchronous request.</returns>
            <exception cref="T:System.Net.Sockets.SocketException">There was an error while trying to resolve the host.</exception>
        </member>
        <member name="M:Org.Mentalis.Network.ProxySocket.ProxySocket.OnResolved(System.IAsyncResult)">
            <summary>
            Called when the specified hostname has been resolved.
            </summary>
            <param name="asyncResult">The result of the asynchronous operation.</param>
        </member>
        <member name="M:Org.Mentalis.Network.ProxySocket.ProxySocket.OnConnect(System.IAsyncResult)">
            <summary>
            Called when the Socket is connected to the remote host.
            </summary>
            <param name="asyncResult">The result of the asynchronous operation.</param>
        </member>
        <member name="M:Org.Mentalis.Network.ProxySocket.ProxySocket.OnHandShakeComplete(System.Exception)">
            <summary>
            Called when the Socket has finished talking to the proxy server and is ready to relay data.
            </summary>
            <param name="error">The error to throw when the EndConnect method is called.</param>
        </member>
        <member name="F:Org.Mentalis.Network.ProxySocket.ProxySocket.m_State">
            <summary>Holds the value of the State property.</summary>
        </member>
        <member name="F:Org.Mentalis.Network.ProxySocket.ProxySocket.m_ProxyEndPoint">
            <summary>Holds the value of the ProxyEndPoint property.</summary>
        </member>
        <member name="F:Org.Mentalis.Network.ProxySocket.ProxySocket.m_ProxyType">
            <summary>Holds the value of the ProxyType property.</summary>
        </member>
        <member name="F:Org.Mentalis.Network.ProxySocket.ProxySocket.m_ProxyUser">
            <summary>Holds the value of the ProxyUser property.</summary>
        </member>
        <member name="F:Org.Mentalis.Network.ProxySocket.ProxySocket.m_ProxyPass">
            <summary>Holds the value of the ProxyPass property.</summary>
        </member>
        <member name="F:Org.Mentalis.Network.ProxySocket.ProxySocket.CallBack">
            <summary>Holds a pointer to the method that should be called when the Socket is connected to the remote device.</summary>
        </member>
        <member name="F:Org.Mentalis.Network.ProxySocket.ProxySocket.m_AsyncResult">
            <summary>Holds the value of the AsyncResult property.</summary>
        </member>
        <member name="F:Org.Mentalis.Network.ProxySocket.ProxySocket.m_ToThrow">
            <summary>Holds the value of the ToThrow property.</summary>
        </member>
        <member name="F:Org.Mentalis.Network.ProxySocket.ProxySocket.m_RemotePort">
            <summary>Holds the value of the RemotePort property.</summary>
        </member>
        <member name="P:Org.Mentalis.Network.ProxySocket.ProxySocket.ProxyEndPoint">
            <summary>
            Gets or sets the EndPoint of the proxy server.
            </summary>
            <value>An IPEndPoint object that holds the IP address and the port of the proxy server.</value>
        </member>
        <member name="P:Org.Mentalis.Network.ProxySocket.ProxySocket.ProxyType">
            <summary>
            Gets or sets the type of proxy server to use.
            </summary>
            <value>One of the ProxyTypes values.</value>
        </member>
        <member name="P:Org.Mentalis.Network.ProxySocket.ProxySocket.State">
            <summary>
            Gets or sets a user-defined object.
            </summary>
            <value>The user-defined object.</value>
        </member>
        <member name="P:Org.Mentalis.Network.ProxySocket.ProxySocket.ProxyUser">
            <summary>
            Gets or sets the username to use when authenticating with the proxy.
            </summary>
            <value>A string that holds the username that's used when authenticating with the proxy.</value>
            <exception cref="T:System.ArgumentNullException">The specified value is null.</exception>
        </member>
        <member name="P:Org.Mentalis.Network.ProxySocket.ProxySocket.ProxyPass">
            <summary>
            Gets or sets the password to use when authenticating with the proxy.
            </summary>
            <value>A string that holds the password that's used when authenticating with the proxy.</value>
            <exception cref="T:System.ArgumentNullException">The specified value is null.</exception>
        </member>
        <member name="P:Org.Mentalis.Network.ProxySocket.ProxySocket.AsyncResult">
            <summary>
            Gets or sets the asynchronous result object.
            </summary>
            <value>An instance of the IAsyncProxyResult class.</value>
        </member>
        <member name="P:Org.Mentalis.Network.ProxySocket.ProxySocket.ToThrow">
            <summary>
            Gets or sets the exception to throw when the EndConnect method is called.
            </summary>
            <value>An instance of the Exception class (or subclasses of Exception).</value>
        </member>
        <member name="P:Org.Mentalis.Network.ProxySocket.ProxySocket.RemotePort">
            <summary>
            Gets or sets the remote port the user wants to connect to.
            </summary>
            <value>An integer that specifies the port the user wants to connect to.</value>
        </member>
        <member name="P:GMap.NET.CacheProviders.MemoryCache.Capacity">
            <summary>
            the amount of tiles in MB to keep in memmory, default: 22MB, if each ~100Kb it's ~222 tiles
            </summary>
        </member>
        <member name="P:GMap.NET.CacheProviders.MemoryCache.Size">
            <summary>
            current memmory cache size in MB
            </summary>
        </member>
        <member name="T:GMap.NET.CacheProviders.MsSQLPureImageCache">
            <summary>
            image cache for ms sql server
            optimized by mmurfinsimmons@gmail.com
            </summary>
        </member>
        <member name="T:GMap.NET.PureImageCache">
            <summary>
            pure abstraction for image cache
            </summary>
        </member>
        <member name="M:GMap.NET.PureImageCache.PutImageToCache(System.Byte[],System.Int32,GMap.NET.GPoint,System.Int32)">
            <summary>
            puts image to db
            </summary>
            <param name="tile"></param>
            <param name="type"></param>
            <param name="pos"></param>
            <param name="zoom"></param>
            <returns></returns>
        </member>
        <member name="M:GMap.NET.PureImageCache.GetImageFromCache(System.Int32,GMap.NET.GPoint,System.Int32)">
            <summary>
            gets image from db
            </summary>
            <param name="type"></param>
            <param name="pos"></param>
            <param name="zoom"></param>
            <returns></returns>
        </member>
        <member name="M:GMap.NET.PureImageCache.DeleteOlderThan(System.DateTime,System.Nullable{System.Int32})">
            <summary>
            delete old tiles beyond a supplied date
            </summary>
            <param name="date">Tiles older than this will be deleted.</param>
            <param name="type">provider dbid or null to use all providers</param>
            <returns>The number of deleted tiles.</returns>
        </member>
        <member name="M:GMap.NET.CacheProviders.MsSQLPureImageCache.Initialize">
            <summary>
            inits connection to server
            </summary>
            <returns></returns>
        </member>
        <member name="M:GMap.NET.CacheProviders.MsSQLPureImageCache.GMap#NET#PureImageCache#DeleteOlderThan(System.DateTime,System.Nullable{System.Int32})">
            <summary>
            NotImplemented
            </summary>
            <param name="date"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="P:GMap.NET.CacheProviders.MsSQLPureImageCache.Initialized">
            <summary>
            is cache initialized
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:GMap.NET.LanguageType" -->
        <member name="T:GMap.NET.Internals.KiberTileCache">
            <summary>
            kiber speed memory cache for tiles with history support ;}
            </summary>
        </member>
        <member name="F:GMap.NET.Internals.KiberTileCache.MemoryCacheCapacity">
            <summary>
            the amount of tiles in MB to keep in memmory, default: 22MB, if each ~100Kb it's ~222 tiles
            </summary>
        </member>
        <member name="P:GMap.NET.Internals.KiberTileCache.MemoryCacheSize">
            <summary>
            current memmory cache size in MB
            </summary>
        </member>
        <member name="T:GMap.NET.MapProviders.NearMapProvider">
            <summary>
            NearMap provider - http://www.nearmap.com/
            </summary>
        </member>
        <member name="T:GMap.NET.MapProviders.LithuaniaHybridMapProvider">
            <summary>
            LithuaniaHybridMap provider
            </summary>
        </member>
        <member name="T:GMap.NET.MapProviders.SpainMapProvider">
            <summary>
            SpainMap provider, http://sigpac.mapa.es/fega/visor/
            </summary>
        </member>
        <member name="T:GMap.NET.MapProviders.TurkeyMapProvider">
            <summary>
            TurkeyMap provider, http://maps.pergo.com.tr/
            </summary>
        </member>
        <member name="T:GMap.NET.MapProviders.ArcGIS_Topo_US_2D_MapProvider">
            <summary>
            ArcGIS_Topo_US_2D_Map provider, http://server.arcgisonline.com
            </summary>
        </member>
        <member name="T:Org.Mentalis.Network.ProxySocket.ProxyException">
            <summary>
            The exception that is thrown when a proxy error occurs.
            </summary>
        </member>
        <member name="M:Org.Mentalis.Network.ProxySocket.ProxyException.#ctor">
            <summary>
            Initializes a new instance of the ProxyException class.
            </summary>
        </member>
        <member name="M:Org.Mentalis.Network.ProxySocket.ProxyException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ProxyException class.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:Org.Mentalis.Network.ProxySocket.ProxyException.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the ProxyException class.
            </summary>
            <param name="socks5Error">The error number returned by a SOCKS5 server.</param>
        </member>
        <member name="M:Org.Mentalis.Network.ProxySocket.ProxyException.Socks5ToString(System.Int32)">
            <summary>
            Converts a SOCKS5 error number to a human readable string.
            </summary>
            <param name="socks5Error">The error number returned by a SOCKS5 server.</param>
            <returns>A string representation of the specified SOCKS5 error number.</returns>
        </member>
        <member name="T:GMap.NET.SizeLatLng">
            <summary>
            the size of coordinates
            </summary>
        </member>
        <member name="T:GMap.NET.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:GMap.NET.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:GMap.NET.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:GMap.NET.Properties.Resources.CreateTileDb">
             <summary>
               Looks up a localized string similar to CREATE TABLE IF NOT EXISTS Tiles (id INTEGER NOT NULL PRIMARY KEY, X INTEGER NOT NULL, Y INTEGER NOT NULL, Zoom INTEGER NOT NULL, Type UNSIGNED INTEGER  NOT NULL, CacheTime DATETIME);
            CREATE INDEX IF NOT EXISTS IndexOfTiles ON Tiles (X, Y, Zoom, Type);
            
            CREATE TABLE IF NOT EXISTS TilesData (id INTEGER NOT NULL PRIMARY KEY CONSTRAINT fk_Tiles_id REFERENCES Tiles(id) ON DELETE CASCADE, Tile BLOB NULL);
            
            -- Foreign Key Preventing insert
            CREATE TRIGGER fki_TilesData_id_Tiles_id
            BEFORE INSERT ON [TilesDat [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="T:GMap.NET.GPoint">
            <summary>
            the point ;}
            </summary>
        </member>
        <member name="T:GMap.NET.PureImageProxy">
            <summary>
            image abstraction proxy
            </summary>
        </member>
        <member name="T:GMap.NET.PureImage">
            <summary>
            image abstraction
            </summary>
        </member>
        <member name="T:GMap.NET.Internals.Core">
            <summary>
            internal map control core
            </summary>
        </member>
        <member name="F:GMap.NET.Internals.Core.IsDragging">
            <summary>
            is user dragging map
            </summary>
        </member>
        <member name="M:GMap.NET.Internals.Core.SetZoomToFitRect(GMap.NET.RectLatLng)">
            <summary>
            sets zoom to max to fit rect
            </summary>
            <param name="rect"></param>
            <returns></returns>
        </member>
        <member name="F:GMap.NET.Internals.Core.PolygonsEnabled">
            <summary>
            is polygons enabled
            </summary>
        </member>
        <member name="F:GMap.NET.Internals.Core.RoutesEnabled">
            <summary>
            is routes enabled
            </summary>
        </member>
        <member name="F:GMap.NET.Internals.Core.MarkersEnabled">
            <summary>
            is markers enabled
            </summary>
        </member>
        <member name="F:GMap.NET.Internals.Core.CanDragMap">
            <summary>
            can user drag map
            </summary>
        </member>
        <member name="F:GMap.NET.Internals.Core.RetryLoadTile">
            <summary>
            retry count to get tile 
            </summary>
        </member>
        <member name="F:GMap.NET.Internals.Core.LevelsKeepInMemmory">
            <summary>
            how many levels of tiles are staying decompresed in memory
            </summary>
        </member>
        <member name="F:GMap.NET.Internals.Core.RenderMode">
            <summary>
            map render mode
            </summary>
        </member>
        <member name="M:GMap.NET.Internals.Core.FromLocalToLatLng(System.Int64,System.Int64)">
            <summary>
            gets lat/lng from local control coordinates
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:GMap.NET.Internals.Core.FromLatLngToLocal(GMap.NET.PointLatLng)">
            <summary>
            return local coordinates from lat/lng
            </summary>
            <param name="latlng"></param>
            <returns></returns>
        </member>
        <member name="M:GMap.NET.Internals.Core.GetMaxZoomToFitRect(GMap.NET.RectLatLng)">
            <summary>
            gets max zoom level to fit rectangle
            </summary>
            <param name="rect"></param>
            <returns></returns>
        </member>
        <member name="M:GMap.NET.Internals.Core.BeginDrag(GMap.NET.GPoint)">
            <summary>
            initiates map dragging
            </summary>
            <param name="pt"></param>
        </member>
        <member name="M:GMap.NET.Internals.Core.EndDrag">
            <summary>
            ends map dragging
            </summary>
        </member>
        <member name="M:GMap.NET.Internals.Core.ReloadMap">
            <summary>
            reloads map
            </summary>
        </member>
        <member name="M:GMap.NET.Internals.Core.GoToCurrentPosition">
            <summary>
            moves current position into map center
            </summary>
        </member>
        <member name="M:GMap.NET.Internals.Core.GoToCurrentPositionOnZoom">
            <summary>
            moves current position into map center
            </summary>
        </member>
        <member name="M:GMap.NET.Internals.Core.DragOffset(GMap.NET.GPoint)">
            <summary>
            darg map by offset in pixels
            </summary>
            <param name="offset"></param>
        </member>
        <member name="M:GMap.NET.Internals.Core.Drag(GMap.NET.GPoint)">
            <summary>
            drag map
            </summary>
            <param name="pt"></param>
        </member>
        <member name="M:GMap.NET.Internals.Core.CancelAsyncTasks">
            <summary>
            cancels tile loaders and bounds checker
            </summary>
        </member>
        <member name="M:GMap.NET.Internals.Core.UpdateBounds">
            <summary>
            updates map bounds
            </summary>
        </member>
        <member name="M:GMap.NET.Internals.Core.UpdateGroundResolution">
            <summary>
            updates ground resolution info
            </summary>
        </member>
        <member name="P:GMap.NET.Internals.Core.Zoom">
            <summary>
            map zoom
            </summary>
        </member>
        <member name="P:GMap.NET.Internals.Core.PositionPixel">
            <summary>
            current marker position in pixel coordinates
            </summary>
        </member>
        <member name="P:GMap.NET.Internals.Core.Position">
            <summary>
            current marker position
            </summary>
        </member>
        <member name="E:GMap.NET.Internals.Core.OnCurrentPositionChanged">
            <summary>
            occurs when current position is changed
            </summary>
        </member>
        <member name="E:GMap.NET.Internals.Core.OnTileLoadComplete">
            <summary>
            occurs when tile set load is complete
            </summary>
        </member>
        <member name="E:GMap.NET.Internals.Core.OnTileLoadStart">
            <summary>
            occurs when tile set is starting to load
            </summary>
        </member>
        <member name="E:GMap.NET.Internals.Core.OnEmptyTileError">
            <summary>
            occurs on empty tile displayed
            </summary>
        </member>
        <member name="E:GMap.NET.Internals.Core.OnMapDrag">
            <summary>
            occurs on map drag
            </summary>
        </member>
        <member name="E:GMap.NET.Internals.Core.OnMapZoomChanged">
            <summary>
            occurs on map zoom changed
            </summary>
        </member>
        <member name="E:GMap.NET.Internals.Core.OnMapTypeChanged">
            <summary>
            occurs on map type changed
            </summary>
        </member>
        <member name="P:GMap.NET.Internals.Core.ViewArea">
            <summary>
            gets current map view top/left coordinate, width in Lng, height in Lat
            </summary>
            <returns></returns>
        </member>
        <member name="T:GMap.NET.Singleton`1">
            <summary>
            generic for singletons
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:GMap.NET.Projections.MercatorProjection">
            <summary>
            The Mercator projection
            PROJCS["World_Mercator",GEOGCS["GCS_WGS_1984",DATUM["D_WGS_1984",SPHEROID["WGS_1984",6378137,298.257223563]],PRIMEM["Greenwich",0],UNIT["Degree",0.017453292519943295]],PROJECTION["Mercator"],PARAMETER["False_Easting",0],PARAMETER["False_Northing",0],PARAMETER["Central_Meridian",0],PARAMETER["standard_parallel_1",0],UNIT["Meter",1]]
            </summary>
        </member>
        <member name="T:GMap.NET.MapProviders.OpenStreetMapProvider">
            <summary>
            OpenStreetMap provider - http://www.openstreetmap.org/
            </summary>
        </member>
        <member name="T:GMap.NET.MapProviders.GoogleChinaTerrainMapProvider">
            <summary>
            GoogleChinaTerrainMap provider
            </summary>
        </member>
        <member name="T:GMap.NET.MapProviders.OpenCycleTransportMapProvider">
            <summary>
            OpenCycleMap Transport provider - http://www.opencyclemap.org
            </summary>
        </member>
        <member name="T:GMap.NET.MapProviders.OpenStreetMapQuestHybridProvider">
            <summary>
            OpenStreetMapQuestHybrid provider - http://wiki.openstreetmap.org/wiki/MapQuest
            </summary>
        </member>
        <member name="T:GMap.NET.PointLatLng">
            <summary>
            the point of coordinates
            </summary>
        </member>
        <member name="P:GMap.NET.PointLatLng.IsEmpty">
            <summary>
            returns true if coordinates wasn't assigned
            </summary>
        </member>
        <member name="T:GMap.NET.gpxType">
            <remarks/>
        </member>
        <member name="P:GMap.NET.gpxType.metadata">
            <remarks/>
        </member>
        <member name="P:GMap.NET.gpxType.wpt">
            <remarks/>
        </member>
        <member name="P:GMap.NET.gpxType.rte">
            <remarks/>
        </member>
        <member name="P:GMap.NET.gpxType.trk">
            <remarks/>
        </member>
        <member name="P:GMap.NET.gpxType.extensions">
            <remarks/>
        </member>
        <member name="P:GMap.NET.gpxType.version">
            <remarks/>
        </member>
        <member name="P:GMap.NET.gpxType.creator">
            <remarks/>
        </member>
        <member name="T:GMap.NET.metadataType">
            <remarks/>
        </member>
        <member name="P:GMap.NET.metadataType.name">
            <remarks/>
        </member>
        <member name="P:GMap.NET.metadataType.desc">
            <remarks/>
        </member>
        <member name="P:GMap.NET.metadataType.author">
            <remarks/>
        </member>
        <member name="P:GMap.NET.metadataType.copyright">
            <remarks/>
        </member>
        <member name="P:GMap.NET.metadataType.link">
            <remarks/>
        </member>
        <member name="P:GMap.NET.metadataType.time">
            <remarks/>
        </member>
        <member name="P:GMap.NET.metadataType.timeSpecified">
            <remarks/>
        </member>
        <member name="P:GMap.NET.metadataType.keywords">
            <remarks/>
        </member>
        <member name="P:GMap.NET.metadataType.bounds">
            <remarks/>
        </member>
        <member name="P:GMap.NET.metadataType.extensions">
            <remarks/>
        </member>
        <member name="T:GMap.NET.personType">
            <remarks/>
        </member>
        <member name="P:GMap.NET.personType.name">
            <remarks/>
        </member>
        <member name="P:GMap.NET.personType.email">
            <remarks/>
        </member>
        <member name="P:GMap.NET.personType.link">
            <remarks/>
        </member>
        <member name="T:GMap.NET.emailType">
            <remarks/>
        </member>
        <member name="P:GMap.NET.emailType.id">
            <remarks/>
        </member>
        <member name="P:GMap.NET.emailType.domain">
            <remarks/>
        </member>
        <member name="T:GMap.NET.trksegType">
            <remarks/>
        </member>
        <member name="P:GMap.NET.trksegType.trkpt">
            <remarks/>
        </member>
        <member name="P:GMap.NET.trksegType.extensions">
            <remarks/>
        </member>
        <member name="T:GMap.NET.wptType">
            <remarks/>
        </member>
        <member name="P:GMap.NET.wptType.ele">
            <remarks/>
        </member>
        <member name="P:GMap.NET.wptType.eleSpecified">
            <remarks/>
        </member>
        <member name="P:GMap.NET.wptType.time">
            <remarks/>
        </member>
        <member name="P:GMap.NET.wptType.timeSpecified">
            <remarks/>
        </member>
        <member name="P:GMap.NET.wptType.magvar">
            <remarks/>
        </member>
        <member name="P:GMap.NET.wptType.magvarSpecified">
            <remarks/>
        </member>
        <member name="P:GMap.NET.wptType.geoidheight">
            <remarks/>
        </member>
        <member name="P:GMap.NET.wptType.geoidheightSpecified">
            <remarks/>
        </member>
        <member name="P:GMap.NET.wptType.name">
            <remarks/>
        </member>
        <member name="P:GMap.NET.wptType.cmt">
            <remarks/>
        </member>
        <member name="P:GMap.NET.wptType.desc">
            <remarks/>
        </member>
        <member name="P:GMap.NET.wptType.src">
            <remarks/>
        </member>
        <member name="P:GMap.NET.wptType.link">
            <remarks/>
        </member>
        <member name="P:GMap.NET.wptType.sym">
            <remarks/>
        </member>
        <member name="P:GMap.NET.wptType.type">
            <remarks/>
        </member>
        <member name="P:GMap.NET.wptType.fix">
            <remarks/>
        </member>
        <member name="P:GMap.NET.wptType.fixSpecified">
            <remarks/>
        </member>
        <member name="P:GMap.NET.wptType.sat">
            <remarks/>
        </member>
        <member name="P:GMap.NET.wptType.hdop">
            <remarks/>
        </member>
        <member name="P:GMap.NET.wptType.hdopSpecified">
            <remarks/>
        </member>
        <member name="P:GMap.NET.wptType.vdop">
            <remarks/>
        </member>
        <member name="P:GMap.NET.wptType.vdopSpecified">
            <remarks/>
        </member>
        <member name="P:GMap.NET.wptType.pdop">
            <remarks/>
        </member>
        <member name="P:GMap.NET.wptType.pdopSpecified">
            <remarks/>
        </member>
        <member name="P:GMap.NET.wptType.ageofdgpsdata">
            <remarks/>
        </member>
        <member name="P:GMap.NET.wptType.ageofdgpsdataSpecified">
            <remarks/>
        </member>
        <member name="P:GMap.NET.wptType.dgpsid">
            <remarks/>
        </member>
        <member name="P:GMap.NET.wptType.extensions">
            <remarks/>
        </member>
        <member name="P:GMap.NET.wptType.lat">
            <remarks/>
        </member>
        <member name="P:GMap.NET.wptType.lon">
            <remarks/>
        </member>
        <member name="T:GMap.NET.linkType">
            <remarks/>
        </member>
        <member name="P:GMap.NET.linkType.text">
            <remarks/>
        </member>
        <member name="P:GMap.NET.linkType.type">
            <remarks/>
        </member>
        <member name="P:GMap.NET.linkType.href">
            <remarks/>
        </member>
        <member name="T:GMap.NET.fixType">
            <remarks/>
        </member>
        <member name="F:GMap.NET.fixType.none">
            <remarks/>
        </member>
        <member name="F:GMap.NET.fixType.Item2d">
            <remarks/>
        </member>
        <member name="F:GMap.NET.fixType.Item3d">
            <remarks/>
        </member>
        <member name="F:GMap.NET.fixType.dgps">
            <remarks/>
        </member>
        <member name="F:GMap.NET.fixType.pps">
            <remarks/>
        </member>
        <member name="T:GMap.NET.extensionsType">
            <remarks/>
        </member>
        <member name="P:GMap.NET.extensionsType.Any">
            <remarks/>
        </member>
        <member name="T:GMap.NET.trkType">
            <remarks/>
        </member>
        <member name="P:GMap.NET.trkType.name">
            <remarks/>
        </member>
        <member name="P:GMap.NET.trkType.cmt">
            <remarks/>
        </member>
        <member name="P:GMap.NET.trkType.desc">
            <remarks/>
        </member>
        <member name="P:GMap.NET.trkType.src">
            <remarks/>
        </member>
        <member name="P:GMap.NET.trkType.link">
            <remarks/>
        </member>
        <member name="P:GMap.NET.trkType.number">
            <remarks/>
        </member>
        <member name="P:GMap.NET.trkType.type">
            <remarks/>
        </member>
        <member name="P:GMap.NET.trkType.extensions">
            <remarks/>
        </member>
        <member name="P:GMap.NET.trkType.trkseg">
            <remarks/>
        </member>
        <member name="T:GMap.NET.rteType">
            <remarks/>
        </member>
        <member name="P:GMap.NET.rteType.name">
            <remarks/>
        </member>
        <member name="P:GMap.NET.rteType.cmt">
            <remarks/>
        </member>
        <member name="P:GMap.NET.rteType.desc">
            <remarks/>
        </member>
        <member name="P:GMap.NET.rteType.src">
            <remarks/>
        </member>
        <member name="P:GMap.NET.rteType.link">
            <remarks/>
        </member>
        <member name="P:GMap.NET.rteType.number">
            <remarks/>
        </member>
        <member name="P:GMap.NET.rteType.type">
            <remarks/>
        </member>
        <member name="P:GMap.NET.rteType.extensions">
            <remarks/>
        </member>
        <member name="P:GMap.NET.rteType.rtept">
            <remarks/>
        </member>
        <member name="T:GMap.NET.boundsType">
            <remarks/>
        </member>
        <member name="P:GMap.NET.boundsType.minlat">
            <remarks/>
        </member>
        <member name="P:GMap.NET.boundsType.minlon">
            <remarks/>
        </member>
        <member name="P:GMap.NET.boundsType.maxlat">
            <remarks/>
        </member>
        <member name="P:GMap.NET.boundsType.maxlon">
            <remarks/>
        </member>
        <member name="T:GMap.NET.copyrightType">
            <remarks/>
        </member>
        <member name="P:GMap.NET.copyrightType.year">
            <remarks/>
        </member>
        <member name="P:GMap.NET.copyrightType.license">
            <remarks/>
        </member>
        <member name="P:GMap.NET.copyrightType.author">
            <remarks/>
        </member>
        <member name="T:GMap.NET.Internals.LoadTask">
            <summary>
            tile load task
            </summary>
        </member>
        <member name="T:GMap.NET.MapProviders.GoogleKoreaHybridMapProvider">
            <summary>
            GoogleKoreaHybridMap provider
            </summary>
        </member>
        <member name="T:GMap.NET.MapProviders.OviHybridMapProvider">
            <summary>
            OviHybridMap provider
            </summary>
        </member>
        <member name="T:GMap.NET.MapProviders.MapBenderWMSProvider">
            <summary>
            MapBender provider, WMS demo http://www.mapbender.org/
            </summary>
        </member>
        <member name="T:GMap.NET.MapProviders.ArcGIS_World_Shaded_Relief_MapProvider">
            <summary>
            ArcGIS_World_Shaded_Relief_Map provider, http://server.arcgisonline.com
            </summary>
        </member>
        <member name="T:GMap.NET.MapProviders.ArcGIS_World_Physical_MapProvider">
            <summary>
            ArcGIS_World_Physical_Map provider, http://server.arcgisonline.com
            </summary>
        </member>
        <member name="T:GMap.NET.MapProviders.OpenCycleLandscapeMapProvider">
            <summary>
            OpenCycleMap Landscape provider - http://www.opencyclemap.org
            </summary>
        </member>
        <member name="T:Org.Mentalis.Network.ProxySocket.Socks4Handler">
            <summary>
            Implements the SOCKS4[A] protocol.
            </summary>
        </member>
        <member name="T:Org.Mentalis.Network.ProxySocket.SocksHandler">
            <summary>
            Implements a specific version of the SOCKS protocol. This is an abstract class; it must be inherited.
            </summary>
        </member>
        <member name="M:Org.Mentalis.Network.ProxySocket.SocksHandler.#ctor(System.Net.Sockets.Socket,System.String)">
            <summary>
            Initilizes a new instance of the SocksHandler class.
            </summary>
            <param name="server">The socket connection with the proxy server.</param>
            <param name="user">The username to use when authenticating with the server.</param>
            <exception cref="T:System.ArgumentNullException"><c>server</c> -or- <c>user</c> is null.</exception>
        </member>
        <member name="M:Org.Mentalis.Network.ProxySocket.SocksHandler.PortToBytes(System.Int32)">
            <summary>
            Converts a port number to an array of bytes.
            </summary>
            <param name="port">The port to convert.</param>
            <returns>An array of two bytes that represents the specified port.</returns>
        </member>
        <member name="M:Org.Mentalis.Network.ProxySocket.SocksHandler.ReadBytes(System.Int32)">
            <summary>
            Reads a specified number of bytes from the Server socket.
            </summary>
            <param name="count">The number of bytes to return.</param>
            <returns>An array of bytes.</returns>
            <exception cref="T:System.ArgumentException">The number of bytes to read is invalid.</exception>
            <exception cref="T:System.Net.Sockets.SocketException">An operating system error occurs while accessing the Socket.</exception>
            <exception cref="T:System.ObjectDisposedException">The Socket has been closed.</exception>
        </member>
        <member name="F:Org.Mentalis.Network.ProxySocket.SocksHandler.m_Server">
            <summary>Holds the value of the Server property.</summary>
        </member>
        <member name="F:Org.Mentalis.Network.ProxySocket.SocksHandler.m_Username">
            <summary>Holds the value of the Username property.</summary>
        </member>
        <member name="F:Org.Mentalis.Network.ProxySocket.SocksHandler.m_AsyncResult">
            <summary>Holds the value of the AsyncResult property.</summary>
        </member>
        <member name="F:Org.Mentalis.Network.ProxySocket.SocksHandler.m_Buffer">
            <summary>Holds the value of the Buffer property.</summary>
        </member>
        <member name="F:Org.Mentalis.Network.ProxySocket.SocksHandler.m_Received">
            <summary>Holds the value of the Received property.</summary>
        </member>
        <member name="F:Org.Mentalis.Network.ProxySocket.SocksHandler.ProtocolComplete">
            <summary>Holds the address of the method to call when the SOCKS protocol has been completed.</summary>
        </member>
        <member name="M:Org.Mentalis.Network.ProxySocket.SocksHandler.Negotiate(System.String,System.Int32)">
            <summary>
            Starts negotiating with a SOCKS proxy server.
            </summary>
            <param name="host">The remote server to connect to.</param>
            <param name="port">The remote port to connect to.</param>
        </member>
        <member name="M:Org.Mentalis.Network.ProxySocket.SocksHandler.Negotiate(System.Net.IPEndPoint)">
            <summary>
            Starts negotiating with a SOCKS proxy server.
            </summary>
            <param name="remoteEP">The remote endpoint to connect to.</param>
        </member>
        <member name="M:Org.Mentalis.Network.ProxySocket.SocksHandler.BeginNegotiate(System.Net.IPEndPoint,Org.Mentalis.Network.ProxySocket.HandShakeComplete,System.Net.IPEndPoint)">
            <summary>
            Starts negotiating asynchronously with a SOCKS proxy server.
            </summary>
            <param name="remoteEP">An IPEndPoint that represents the remote device. </param>
            <param name="callback">The method to call when the connection has been established.</param>
            <param name="proxyEndPoint">The IPEndPoint of the SOCKS proxy server.</param>
            <returns>An IAsyncProxyResult that references the asynchronous connection.</returns>
        </member>
        <member name="M:Org.Mentalis.Network.ProxySocket.SocksHandler.BeginNegotiate(System.String,System.Int32,Org.Mentalis.Network.ProxySocket.HandShakeComplete,System.Net.IPEndPoint)">
            <summary>
            Starts negotiating asynchronously with a SOCKS proxy server.
            </summary>
            <param name="host">The remote server to connect to.</param>
            <param name="port">The remote port to connect to.</param>
            <param name="callback">The method to call when the connection has been established.</param>
            <param name="proxyEndPoint">The IPEndPoint of the SOCKS proxy server.</param>
            <returns>An IAsyncProxyResult that references the asynchronous connection.</returns>
        </member>
        <member name="P:Org.Mentalis.Network.ProxySocket.SocksHandler.Server">
            <summary>
            Gets or sets the socket connection with the proxy server.
            </summary>
            <value>A Socket object that represents the connection with the proxy server.</value>
            <exception cref="T:System.ArgumentNullException">The specified value is null.</exception>
        </member>
        <member name="P:Org.Mentalis.Network.ProxySocket.SocksHandler.Username">
            <summary>
            Gets or sets the username to use when authenticating with the proxy server.
            </summary>
            <value>A string that holds the username to use when authenticating with the proxy server.</value>
            <exception cref="T:System.ArgumentNullException">The specified value is null.</exception>
        </member>
        <member name="P:Org.Mentalis.Network.ProxySocket.SocksHandler.AsyncResult">
            <summary>
            Gets or sets the return value of the BeginConnect call.
            </summary>
            <value>An IAsyncProxyResult object that is the return value of the BeginConnect call.</value>
        </member>
        <member name="P:Org.Mentalis.Network.ProxySocket.SocksHandler.Buffer">
            <summary>
            Gets or sets a byte buffer.
            </summary>
            <value>An array of bytes.</value>
        </member>
        <member name="P:Org.Mentalis.Network.ProxySocket.SocksHandler.Received">
            <summary>
            Gets or sets the number of bytes that have been received from the remote proxy server.
            </summary>
            <value>An integer that holds the number of bytes that have been received from the remote proxy server.</value>
        </member>
        <member name="M:Org.Mentalis.Network.ProxySocket.Socks4Handler.#ctor(System.Net.Sockets.Socket,System.String)">
            <summary>
            Initilizes a new instance of the SocksHandler class.
            </summary>
            <param name="server">The socket connection with the proxy server.</param>
            <param name="user">The username to use when authenticating with the server.</param>
            <exception cref="T:System.ArgumentNullException"><c>server</c> -or- <c>user</c> is null.</exception>
        </member>
        <member name="M:Org.Mentalis.Network.ProxySocket.Socks4Handler.GetHostPortBytes(System.String,System.Int32)">
            <summary>
            Creates an array of bytes that has to be sent when the user wants to connect to a specific host/port combination.
            </summary>
            <param name="host">The host to connect to.</param>
            <param name="port">The port to connect to.</param>
            <returns>An array of bytes that has to be sent when the user wants to connect to a specific host/port combination.</returns>
            <remarks>Resolving the host name will be done at server side. Do note that some SOCKS4 servers do not implement this functionality.</remarks>
            <exception cref="T:System.ArgumentNullException"><c>host</c> is null.</exception>
            <exception cref="T:System.ArgumentException"><c>port</c> is invalid.</exception>
        </member>
        <member name="M:Org.Mentalis.Network.ProxySocket.Socks4Handler.GetEndPointBytes(System.Net.IPEndPoint)">
            <summary>
            Creates an array of bytes that has to be sent when the user wants to connect to a specific IPEndPoint.
            </summary>
            <param name="remoteEP">The IPEndPoint to connect to.</param>
            <returns>An array of bytes that has to be sent when the user wants to connect to a specific IPEndPoint.</returns>
            <exception cref="T:System.ArgumentNullException"><c>remoteEP</c> is null.</exception>
        </member>
        <member name="M:Org.Mentalis.Network.ProxySocket.Socks4Handler.Negotiate(System.String,System.Int32)">
            <summary>
            Starts negotiating with the SOCKS server.
            </summary>
            <param name="host">The host to connect to.</param>
            <param name="port">The port to connect to.</param>
            <exception cref="T:System.ArgumentNullException"><c>host</c> is null.</exception>
            <exception cref="T:System.ArgumentException"><c>port</c> is invalid.</exception>
            <exception cref="T:Org.Mentalis.Network.ProxySocket.ProxyException">The proxy rejected the request.</exception>
            <exception cref="T:System.Net.Sockets.SocketException">An operating system error occurs while accessing the Socket.</exception>
            <exception cref="T:System.ObjectDisposedException">The Socket has been closed.</exception>
        </member>
        <member name="M:Org.Mentalis.Network.ProxySocket.Socks4Handler.Negotiate(System.Net.IPEndPoint)">
            <summary>
            Starts negotiating with the SOCKS server.
            </summary>
            <param name="remoteEP">The IPEndPoint to connect to.</param>
            <exception cref="T:System.ArgumentNullException"><c>remoteEP</c> is null.</exception>
            <exception cref="T:Org.Mentalis.Network.ProxySocket.ProxyException">The proxy rejected the request.</exception>
            <exception cref="T:System.Net.Sockets.SocketException">An operating system error occurs while accessing the Socket.</exception>
            <exception cref="T:System.ObjectDisposedException">The Socket has been closed.</exception>
        </member>
        <member name="M:Org.Mentalis.Network.ProxySocket.Socks4Handler.Negotiate(System.Byte[])">
            <summary>
            Starts negotiating with the SOCKS server.
            </summary>
            <param name="connect">The bytes to send when trying to authenticate.</param>
            <exception cref="T:System.ArgumentNullException"><c>connect</c> is null.</exception>
            <exception cref="T:System.ArgumentException"><c>connect</c> is too small.</exception>
            <exception cref="T:Org.Mentalis.Network.ProxySocket.ProxyException">The proxy rejected the request.</exception>
            <exception cref="T:System.Net.Sockets.SocketException">An operating system error occurs while accessing the Socket.</exception>
            <exception cref="T:System.ObjectDisposedException">The Socket has been closed.</exception>
        </member>
        <member name="M:Org.Mentalis.Network.ProxySocket.Socks4Handler.BeginNegotiate(System.String,System.Int32,Org.Mentalis.Network.ProxySocket.HandShakeComplete,System.Net.IPEndPoint)">
            <summary>
            Starts negotiating asynchronously with a SOCKS proxy server.
            </summary>
            <param name="host">The remote server to connect to.</param>
            <param name="port">The remote port to connect to.</param>
            <param name="callback">The method to call when the connection has been established.</param>
            <param name="proxyEndPoint">The IPEndPoint of the SOCKS proxy server.</param>
            <returns>An IAsyncProxyResult that references the asynchronous connection.</returns>
        </member>
        <member name="M:Org.Mentalis.Network.ProxySocket.Socks4Handler.BeginNegotiate(System.Net.IPEndPoint,Org.Mentalis.Network.ProxySocket.HandShakeComplete,System.Net.IPEndPoint)">
            <summary>
            Starts negotiating asynchronously with a SOCKS proxy server.
            </summary>
            <param name="remoteEP">An IPEndPoint that represents the remote device.</param>
            <param name="callback">The method to call when the connection has been established.</param>
            <param name="proxyEndPoint">The IPEndPoint of the SOCKS proxy server.</param>
            <returns>An IAsyncProxyResult that references the asynchronous connection.</returns>
        </member>
        <member name="M:Org.Mentalis.Network.ProxySocket.Socks4Handler.OnConnect(System.IAsyncResult)">
            <summary>
            Called when the Socket is connected to the remote proxy server.
            </summary>
            <param name="ar">Stores state information for this asynchronous operation as well as any user-defined data.</param>
        </member>
        <member name="M:Org.Mentalis.Network.ProxySocket.Socks4Handler.OnSent(System.IAsyncResult)">
            <summary>
            Called when the Socket has sent the handshake data.
            </summary>
            <param name="ar">Stores state information for this asynchronous operation as well as any user-defined data.</param>
        </member>
        <member name="M:Org.Mentalis.Network.ProxySocket.Socks4Handler.OnReceive(System.IAsyncResult)">
            <summary>
            Called when the Socket has received a reply from the remote proxy server.
            </summary>
            <param name="ar">Stores state information for this asynchronous operation as well as any user-defined data.</param>
        </member>
        <member name="M:GMap.NET.Extensions.GetValue``1(System.Runtime.Serialization.SerializationInfo,System.String)">
            <summary>
            Retrieves a value from the SerializationInfo of the given type.
            </summary>
            <typeparam name="T">The Type that we are attempting to de-serialize.</typeparam>
            <param name="info">The SerializationInfo.</param>
            <param name="key">The key of the value we wish to retrieve.</param>
            <returns>The value if found, otherwise null.</returns>
        </member>
        <member name="M:GMap.NET.Extensions.GetValue``1(System.Runtime.Serialization.SerializationInfo,System.String,``0)">
            <summary>
            Retrieves a value from the SerializationInfo of the given type.
            </summary>
            <typeparam name="T">The Type that we are attempting to de-serialize.</typeparam>
            <param name="info">The SerializationInfo.</param>
            <param name="key">The key of the value we wish to retrieve.</param>
            <param name="defaultValue">The default value if the de-serialized value was null.</param>
            <returns>The value if found, otherwise the default value.</returns>
        </member>
        <member name="M:GMap.NET.Extensions.GetStruct``1(System.Runtime.Serialization.SerializationInfo,System.String,``0)">
            <summary>
            Retrieves a value from the SerializationInfo of the given type for structs.
            </summary>
            <typeparam name="T">The Type that we are attempting to de-serialize.</typeparam>
            <param name="info">The SerializationInfo.</param>
            <param name="key">The key of the value we wish to retrieve.</param>
            <param name="defaultValue">The default value if the de-serialized value was null.</param>
            <returns>The value if found, otherwise the default value.</returns>
        </member>
        <member name="M:GMap.NET.Extensions.GetStruct``1(System.Runtime.Serialization.SerializationInfo,System.String,System.Nullable{``0})">
            <summary>
            Retrieves a value from the SerializationInfo of the given type for structs.
            </summary>
            <typeparam name="T">The Type that we are attempting to de-serialize.</typeparam>
            <param name="info">The SerializationInfo.</param>
            <param name="key">The key of the value we wish to retrieve.</param>
            <param name="defaultValue">The default value if the de-serialized value was null.</param>
            <returns>The value if found, otherwise the default value.</returns>
        </member>
        <member name="T:GMap.NET.MapProviders.GoogleSatelliteMapProvider">
            <summary>
            GoogleSatelliteMap provider
            </summary>
        </member>
        <member name="T:GMap.NET.MapProviders.LithuaniaMapProvider">
            <summary>
            LithuaniaMap provider, http://www.maps.lt/map/
            </summary>
        </member>
        <member name="T:Org.Mentalis.Network.ProxySocket.HandShakeComplete">
            <summary>
            References the callback method to be called when the protocol negotiation is completed.
            </summary>
        </member>
        <member name="T:Org.Mentalis.Network.ProxySocket.Authentication.AuthMethod">
            <summary>
            Implements a SOCKS authentication scheme.
            </summary>
            <remarks>This is an abstract class; it must be inherited.</remarks>
        </member>
        <member name="M:Org.Mentalis.Network.ProxySocket.Authentication.AuthMethod.#ctor(System.Net.Sockets.Socket)">
            <summary>
            Initializes an AuthMethod instance.
            </summary>
            <param name="server">The socket connection with the proxy server.</param>
        </member>
        <member name="M:Org.Mentalis.Network.ProxySocket.Authentication.AuthMethod.Authenticate">
            <summary>
            Authenticates the user.
            </summary>
            <exception cref="T:Org.Mentalis.Network.ProxySocket.ProxyException">Authentication with the proxy server failed.</exception>
            <exception cref="T:System.Net.ProtocolViolationException">The proxy server uses an invalid protocol.</exception>
            <exception cref="T:System.Net.Sockets.SocketException">An operating system error occurs while accessing the Socket.</exception>
            <exception cref="T:System.ObjectDisposedException">The Socket has been closed.</exception>
        </member>
        <member name="M:Org.Mentalis.Network.ProxySocket.Authentication.AuthMethod.BeginAuthenticate(Org.Mentalis.Network.ProxySocket.HandShakeComplete)">
            <summary>
            Authenticates the user asynchronously.
            </summary>
            <param name="callback">The method to call when the authentication is complete.</param>
            <exception cref="T:Org.Mentalis.Network.ProxySocket.ProxyException">Authentication with the proxy server failed.</exception>
            <exception cref="T:System.Net.ProtocolViolationException">The proxy server uses an invalid protocol.</exception>
            <exception cref="T:System.Net.Sockets.SocketException">An operating system error occurs while accessing the Socket.</exception>
            <exception cref="T:System.ObjectDisposedException">The Socket has been closed.</exception>
        </member>
        <member name="F:Org.Mentalis.Network.ProxySocket.Authentication.AuthMethod.m_Buffer">
            <summary>Holds the value of the Buffer property.</summary>
        </member>
        <member name="F:Org.Mentalis.Network.ProxySocket.Authentication.AuthMethod.m_Server">
            <summary>Holds the value of the Server property.</summary>
        </member>
        <member name="F:Org.Mentalis.Network.ProxySocket.Authentication.AuthMethod.CallBack">
            <summary>Holds the address of the method to call when the proxy has authenticated the client.</summary>
        </member>
        <member name="F:Org.Mentalis.Network.ProxySocket.Authentication.AuthMethod.m_Received">
            <summary>Holds the value of the Received property.</summary>
        </member>
        <member name="P:Org.Mentalis.Network.ProxySocket.Authentication.AuthMethod.Server">
            <summary>
            Gets or sets the socket connection with the proxy server.
            </summary>
            <value>The socket connection with the proxy server.</value>
        </member>
        <member name="P:Org.Mentalis.Network.ProxySocket.Authentication.AuthMethod.Buffer">
            <summary>
            Gets or sets a byt array that can be used to store data.
            </summary>
            <value>A byte array to store data.</value>
        </member>
        <member name="P:Org.Mentalis.Network.ProxySocket.Authentication.AuthMethod.Received">
            <summary>
            Gets or sets the number of bytes that have been received from the remote proxy server.
            </summary>
            <value>An integer that holds the number of bytes that have been received from the remote proxy server.</value>
        </member>
        <member name="T:GMap.NET.Internals.CacheQueueItem">
            <summary>
            cache queue item
            </summary>
        </member>
        <member name="T:GMap.NET.MapProviders.OpenCycleMapProvider">
            <summary>
            OpenCycleMap provider - http://www.opencyclemap.org
            </summary>
        </member>
        <member name="T:GMap.NET.MapProviders.GoogleHybridMapProvider">
            <summary>
            GoogleHybridMap provider
            </summary>
        </member>
        <member name="T:GMap.NET.MapProviders.YandexHybridMapProvider">
            <summary>
            YandexHybridMap provider
            </summary>
        </member>
        <member name="T:GMap.NET.MapProviders.BingHybridMapProvider">
            <summary>
            BingHybridMap provider
            </summary>
        </member>
        <member name="F:GMap.NET.MapProviders.BingMapProviderBase.ClientKey">
            <summary>
            Bing Maps Customer Identification, more info here
            http://msdn.microsoft.com/en-us/library/bb924353.aspx
            </summary>
        </member>
        <member name="M:GMap.NET.MapProviders.BingMapProviderBase.TileXYToQuadKey(System.Int64,System.Int64,System.Int32)">
            <summary>
            Converts tile XY coordinates into a QuadKey at a specified level of detail.
            </summary>
            <param name="tileX">Tile X coordinate.</param>
            <param name="tileY">Tile Y coordinate.</param>
            <param name="levelOfDetail">Level of detail, from 1 (lowest detail)
            to 23 (highest detail).</param>
            <returns>A string containing the QuadKey.</returns>
        </member>
        <member name="M:GMap.NET.MapProviders.BingMapProviderBase.QuadKeyToTileXY(System.String,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Converts a QuadKey into tile XY coordinates.
            </summary>
            <param name="quadKey">QuadKey of the tile.</param>
            <param name="tileX">Output parameter receiving the tile X coordinate.</param>
            <param name="tileY">Output parameter receiving the tile Y coordinate.</param>
            <param name="levelOfDetail">Output parameter receiving the level of detail.</param>
        </member>
        <member name="T:GMap.NET.GeoCoderStatusCode">
            <summary>
            GeoCoder StatusCode
            </summary>
        </member>
        <member name="F:GMap.NET.GeoCoderStatusCode.Unknow">
            <summary>
            unknow response
            </summary>
        </member>
        <member name="F:GMap.NET.GeoCoderStatusCode.G_GEO_SUCCESS">
            <summary>
            No errors occurred; the address was successfully parsed and its geocode has been returned.
            </summary>
        </member>
        <member name="F:GMap.NET.GeoCoderStatusCode.G_GEO_BAD_REQUEST">
            <summary>
            A directions request could not be successfully parsed.
            For example, the request may have been rejected if it contained more than the maximum number of waypoints allowed.
            </summary>  
        </member>
        <member name="F:GMap.NET.GeoCoderStatusCode.G_GEO_SERVER_ERROR">
            <summary>
            A geocoding or directions request could not be successfully processed, yet the exact reason for the failure is not known.
            </summary>
        </member>
        <member name="F:GMap.NET.GeoCoderStatusCode.G_GEO_MISSING_QUERY">
            <summary>
            The HTTP q parameter was either missing or had no value.
            For geocoding requests, this means that an empty address was specified as input. For directions requests, this means that no query was specified in the input.
            </summary>
        </member>
        <member name="F:GMap.NET.GeoCoderStatusCode.G_GEO_MISSING_ADDRESS">
            <summary>
            Synonym for G_GEO_MISSING_QUERY.
            </summary>
        </member>
        <member name="F:GMap.NET.GeoCoderStatusCode.G_GEO_UNKNOWN_ADDRESS">
            <summary>
             No corresponding geographic location could be found for the specified address.
             This may be due to the fact that the address is relatively new, or it may be incorrect.
            </summary>
        </member>
        <member name="F:GMap.NET.GeoCoderStatusCode.G_GEO_UNAVAILABLE_ADDRESS">
            <summary>
            The geocode for the given address or the route for the given directions query cannot be returned due to legal or contractual reasons.
            </summary>
        </member>
        <member name="F:GMap.NET.GeoCoderStatusCode.G_GEO_UNKNOWN_DIRECTIONS">
            <summary>
            The GDirections object could not compute directions between the points mentioned in the query.
            This is usually because there is no route available between the two points, or because we do not have data for routing in that region.
            </summary>
        </member>
        <member name="F:GMap.NET.GeoCoderStatusCode.G_GEO_BAD_KEY">
            <summary>
            The given key is either invalid or does not match the domain for which it was given.
            </summary>
        </member>
        <member name="F:GMap.NET.GeoCoderStatusCode.G_GEO_TOO_MANY_QUERIES">
            <summary>
            The given key has gone over the requests limit in the 24 hour period or has submitted too many requests in too short a period of time.
            If you're sending multiple requests in parallel or in a tight loop, use a timer or pause in your code to make sure you don't send the requests too quickly.
            </summary>
        </member>
        <member name="F:GMap.NET.GeoCoderStatusCode.ExceptionInCode">
            <summary>
            indicates that exception occured during execution
            </summary>
        </member>
        <member name="T:GMap.NET.DirectionsStatusCode">
            <summary>
            Direction StatusCode
            </summary>
        </member>
        <member name="F:GMap.NET.DirectionsStatusCode.OK">
            <summary>
            indicates the response contains a valid result.
            </summary>
        </member>
        <member name="F:GMap.NET.DirectionsStatusCode.NOT_FOUND">
            <summary>
            indicates at least one of the locations specified in the requests's origin, destination, or waypoints could not be geocoded.
            </summary>
        </member>
        <member name="F:GMap.NET.DirectionsStatusCode.ZERO_RESULTS">
            <summary>
            indicates no route could be found between the origin and destination.
            </summary>
        </member>
        <member name="F:GMap.NET.DirectionsStatusCode.MAX_WAYPOINTS_EXCEEDED">
            <summary>
             indicates that too many waypointss were provided in the request The maximum allowed waypoints is 8, plus the origin, and destination.
            </summary>
        </member>
        <member name="F:GMap.NET.DirectionsStatusCode.INVALID_REQUEST">
            <summary>
            indicates that the provided request was invalid.
            </summary>
        </member>
        <member name="F:GMap.NET.DirectionsStatusCode.OVER_QUERY_LIMIT">
            <summary>
            indicates the service has received too many requests from your application within the allowed time period.
            </summary>
        </member>
        <member name="F:GMap.NET.DirectionsStatusCode.REQUEST_DENIED">
            <summary>
            indicates that the service denied use of the directions service by your application.
            </summary>
        </member>
        <member name="F:GMap.NET.DirectionsStatusCode.UNKNOWN_ERROR">
            <summary>
            indicates a directions request could not be processed due to a server error. The request may succeed if you try again.
            </summary>
        </member>
        <member name="F:GMap.NET.DirectionsStatusCode.ExceptionInCode">
            <summary>
            indicates that exception occured during execution
            </summary>
        </member>
        <member name="T:GMap.NET.MapProviders.GoogleChinaHybridMapProvider">
            <summary>
            GoogleChinaHybridMap provider
            </summary>
        </member>
        <member name="T:GMap.NET.MapProviders.Lithuania3dMapProvider">
            <summary>
            Lithuania3dMap (2.5d) provider
            </summary>
        </member>
        <member name="T:GMap.NET.MapProviders.LithuaniaOrtoFotoMapProvider">
            <summary>
            LithuaniaOrtoFotoMap provider
            </summary>
        </member>
        <member name="T:GMap.NET.MapProviders.LatviaMapProvider">
            <summary>
            LatviaMap provider, http://www.ikarte.lv/
            </summary>
        </member>
        <member name="T:GMap.NET.MapProviders.CzechHistoryMapProvider">
            <summary>
            CzechHistoryMap provider, http://www.mapy.cz/
            </summary>
        </member>
        <member name="T:GMap.NET.MapProviders.ArcGIS_Imagery_World_2D_MapProvider">
            <summary>
            ArcGIS_Imagery_World_2D_Map provider, http://server.arcgisonline.com
            </summary>
        </member>
        <member name="T:GMap.NET.RectLatLng">
            <summary>
            the rect of coordinates
            </summary>
        </member>
        <member name="P:GMap.NET.RectLatLng.IsEmpty">
            <summary>
            returns true if coordinates wasn't assigned
            </summary>
        </member>
        <member name="T:GMap.NET.MapProviders.GoogleChinaMapProvider">
            <summary>
            GoogleChinaMap provider
            </summary>
        </member>
        <member name="T:GMap.NET.MapProviders.OviMapProvider">
            <summary>
            OviMap provider
            </summary>
        </member>
        <member name="T:GMap.NET.MapProviders.OpenStreet4UMapProvider">
            <summary>
            OpenStreet4UMap provider
            http://www.4umaps.eu
            
            4UMaps are topographic outdoor maps based on OpenStreetmap data.
            The map contains everything you need for any kind of back country activity like hiking,
            mountain biking, cycling, climbing etc. 4UMaps has elevation lines, hill shading,
            peak height and name, streets, ways, tracks and trails, as well as springs, supermarkets,
            restaurants, hotels, shelters etc.
            </summary>
        </member>
        <member name="T:GMap.NET.MapProviders.CzechSatelliteMapProvider">
            <summary>
            CzechSatelliteMap provider, http://www.mapy.cz/
            </summary>
        </member>
        <member name="T:GMap.NET.MapProviders.ArcGIS_ShadedRelief_World_2D_MapProvider">
            <summary>
            ArcGIS_ShadedRelief_World_2D_Map provider, http://server.arcgisonline.com
            </summary>
        </member>
        <member name="T:GMap.NET.MapProviders.BingSatelliteMapProvider">
            <summary>
            BingSatelliteMapProvider provider
            </summary>
        </member>
        <member name="T:GMap.NET.GMaps">
            <summary>
            maps manager
            </summary>
        </member>
        <member name="F:GMap.NET.GMaps.Mode">
            <summary>
            tile access mode
            </summary>
        </member>
        <member name="F:GMap.NET.GMaps.UseRouteCache">
            <summary>
            is map ussing cache for routing
            </summary>
        </member>
        <member name="F:GMap.NET.GMaps.UseGeocoderCache">
            <summary>
            is map using cache for geocoder
            </summary>
        </member>
        <member name="F:GMap.NET.GMaps.UseDirectionsCache">
            <summary>
            is map using cache for directions
            </summary>
        </member>
        <member name="F:GMap.NET.GMaps.UsePlacemarkCache">
            <summary>
            is map using cache for placemarks
            </summary>
        </member>
        <member name="F:GMap.NET.GMaps.UseUrlCache">
            <summary>
            is map ussing cache for other url
            </summary>
        </member>
        <member name="F:GMap.NET.GMaps.UseMemoryCache">
            <summary>
            is map using memory cache for tiles
            </summary>
        </member>
        <member name="F:GMap.NET.GMaps.MemoryCache">
            <summary>
            MemoryCache provider
            </summary>
        </member>
        <member name="F:GMap.NET.GMaps.ShuffleTilesOnLoad">
            <summary>
            load tiles in random sequence
            </summary>
        </member>
        <member name="F:GMap.NET.GMaps.tileCacheQueue">
            <summary>
            tile queue to cache
            </summary>
        </member>
        <member name="F:GMap.NET.GMaps.CacheEngine">
            <summary>
            cache worker
            </summary>
        </member>
        <member name="M:GMap.NET.GMaps.SQLitePing">
            <summary>
            triggers dynamic sqlite loading, 
            call this before you use sqlite for other reasons than caching maps
            </summary>
        </member>
        <member name="M:GMap.NET.GMaps.ExportToGMDB(System.String)">
            <summary>
            exports current map cache to GMDB file
            if file exsist only new records will be added
            otherwise file will be created and all data exported
            </summary>
            <param name="file"></param>
            <returns></returns>
        </member>
        <member name="M:GMap.NET.GMaps.ImportFromGMDB(System.String)">
            <summary>
            imports GMDB file to current map cache
            only new records will be added
            </summary>
            <param name="file"></param>
            <returns></returns>
        </member>
        <member name="M:GMap.NET.GMaps.OptimizeMapDb(System.String)">
            <summary>
            optimizes map database, *.gmdb
            </summary>
            <param name="file">database file name or null to optimize current user db</param>
            <returns></returns>
        </member>
        <member name="M:GMap.NET.GMaps.EnqueueCacheTask(GMap.NET.Internals.CacheQueueItem)">
            <summary>
            enqueueens tile to cache
            </summary>
            <param name="task"></param>
        </member>
        <member name="M:GMap.NET.GMaps.CancelTileCaching">
            <summary>
            immediately stops background tile caching, call it if you want fast exit the process
            </summary>
        </member>
        <member name="M:GMap.NET.GMaps.CacheEngineLoop">
            <summary>
            live for cache ;}
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:GMap.NET.GMaps.ExportGPX(System.Collections.Generic.IEnumerable{System.Collections.Generic.List{GMap.NET.GpsLog}},System.String)">
            <summary>
            exports gps data to gpx file
            </summary>
            <param name="log">gps data</param>
            <param name="gpxFile">file to export</param>
            <returns>true if success</returns>
        </member>
        <member name="M:GMap.NET.GMaps.GetImageFrom(GMap.NET.MapProviders.GMapProvider,GMap.NET.GPoint,System.Int32,System.Exception@)">
            <summary>
            gets image from tile server
            </summary>
            <param name="provider"></param>
            <param name="pos"></param>
            <param name="zoom"></param>
            <returns></returns>
        </member>
        <member name="M:GMap.NET.GMaps.EnableTileHost(System.Int32)">
            <summary>
            turns on tile host
            </summary>
            <param name="port"></param>
        </member>
        <member name="M:GMap.NET.GMaps.DisableTileHost">
            <summary>
            turns off tile host
            </summary>
            <param name="port"></param>
        </member>
        <member name="P:GMap.NET.GMaps.PrimaryCache">
            <summary>
            primary cache provider, by default: ultra fast SQLite!
            </summary>
        </member>
        <member name="P:GMap.NET.GMaps.SecondaryCache">
            <summary>
            secondary cache provider, by default: none,
            use it if you have server in your local network
            </summary>
        </member>
        <member name="P:GMap.NET.GMaps.IsRunningOnMono">
            <summary>
            return true if running on mono
            </summary>
            <returns></returns>
        </member>
        <member name="P:GMap.NET.GMaps.CacheOnIdleRead">
            <summary>
            delays writing tiles to cache while performing reads
            </summary>
        </member>
        <member name="P:GMap.NET.GMaps.BoostCacheEngine">
            <summary>
            disables delay between saving tiles into database/cache
            </summary>
        </member>
        <member name="T:GMap.NET.Projections.PlateCarreeProjection">
            <summary>
            Plate Carrée (literally, “plane square”) projection
            PROJCS["WGS 84 / World Equidistant Cylindrical",GEOGCS["GCS_WGS_1984",DATUM["D_WGS_1984",SPHEROID["WGS_1984",6378137,298.257223563]],PRIMEM["Greenwich",0],UNIT["Degree",0.017453292519943295]],UNIT["Meter",1]]
            </summary>
        </member>
        <member name="T:GMap.NET.MapProviders.OpenStreetMapQuestProvider">
            <summary>
            OpenStreetMapQuest provider - http://wiki.openstreetmap.org/wiki/MapQuest
            </summary>
        </member>
        <member name="T:GMap.NET.MapProviders.WikiMapiaMapProvider">
            <summary>
            WikiMapiaMap provider, http://wikimapia.org/
            </summary>
        </member>
        <member name="T:Org.Mentalis.Network.ProxySocket.Authentication.AuthNone">
            <summary>
            This class implements the 'No Authentication' scheme.
            </summary>
        </member>
        <member name="M:Org.Mentalis.Network.ProxySocket.Authentication.AuthNone.#ctor(System.Net.Sockets.Socket)">
            <summary>
            Initializes an AuthNone instance.
            </summary>
            <param name="server">The socket connection with the proxy server.</param>
        </member>
        <member name="M:Org.Mentalis.Network.ProxySocket.Authentication.AuthNone.Authenticate">
            <summary>
            Authenticates the user.
            </summary>
        </member>
        <member name="M:Org.Mentalis.Network.ProxySocket.Authentication.AuthNone.BeginAuthenticate(Org.Mentalis.Network.ProxySocket.HandShakeComplete)">
            <summary>
            Authenticates the user asynchronously.
            </summary>
            <param name="callback">The method to call when the authentication is complete.</param>
            <remarks>This method immediately calls the callback method.</remarks>
        </member>
        <member name="T:GMap.NET.Internals.Cache">
            <summary>
            cache system for tiles, geocoding, etc...
            </summary>
        </member>
        <member name="F:GMap.NET.Internals.Cache.ImageCache">
            <summary>
            abstract image cache
            </summary>
        </member>
        <member name="F:GMap.NET.Internals.Cache.ImageCacheSecond">
            <summary>
            second level abstract image cache
            </summary>
        </member>
        <member name="P:GMap.NET.Internals.Cache.CacheLocation">
            <summary>
            local cache location
            </summary>
        </member>
        <member name="T:GMap.NET.Internals.FastReaderWriterLock">
            <summary>
            custom ReaderWriterLock
            in Vista and later uses integrated Slim Reader/Writer (SRW) Lock
            http://msdn.microsoft.com/en-us/library/aa904937(VS.85).aspx
            http://msdn.microsoft.com/en-us/magazine/cc163405.aspx#S2
            </summary>
        </member>
        <member name="T:GMap.NET.MapProviders.YahooMapProvider">
            <summary>
            YahooMap provider
            </summary>
        </member>
        <member name="T:GMap.NET.MapProviders.GoogleMapProvider">
            <summary>
            GoogleMap provider
            </summary>
        </member>
        <member name="T:GMap.NET.MapProviders.YandexSatelliteMapProvider">
            <summary>
            YandexSatelliteMap provider
            </summary>
        </member>
        <member name="T:GMap.NET.MapProviders.ArcGIS_World_Street_MapProvider">
            <summary>
            ArcGIS_World_Street_Map provider, http://server.arcgisonline.com
            </summary>
        </member>
        <member name="T:GMap.NET.Placemark">
            <summary>
            represents place info
            </summary>
        </member>
        <member name="F:GMap.NET.Placemark.Accuracy">
            <summary>
            the accuracy of address
            </summary>
        </member>
        <member name="P:GMap.NET.Placemark.Address">
            <summary>
            the address
            </summary>
        </member>
        <member name="T:GMap.NET.GRect">
            <summary>
            the rect
            </summary>
        </member>
        <member name="T:GMap.NET.CacheProviders.SQLitePureImageCache">
            <summary>
            ultra fast cache system for tiles
            </summary>
        </member>
        <member name="M:GMap.NET.CacheProviders.SQLitePureImageCache.CheckPreAllocation">
            <summary>
            pre-allocate 32MB free space 'ahead' if needed,
            decreases fragmentation
            </summary>
        </member>
        <member name="P:GMap.NET.CacheProviders.SQLitePureImageCache.CacheLocation">
            <summary>
            local cache location
            </summary>
        </member>
        <member name="T:GMap.NET.MapProviders.GoogleTerrainMapProvider">
            <summary>
            GoogleTerrainMap provider
            </summary>
        </member>
        <member name="T:GMap.NET.MapProviders.GoogleKoreaSatelliteMapProvider">
            <summary>
            GoogleKoreaSatelliteMap provider
            </summary>
        </member>
        <member name="T:GMap.NET.MapProviders.NearSatelliteMapProvider">
            <summary>
            NearSatelliteMap provider - http://www.nearmap.com/
            </summary>
        </member>
        <member name="T:GMap.NET.MapProviders.OviSatelliteMapProvider">
            <summary>
            OviSatelliteMap provider
            </summary>
        </member>
        <member name="T:GMap.NET.MapProviders.BingMapProvider">
            <summary>
            BingMapProvider provider
            </summary>
        </member>
        <member name="T:GMap.NET.MapProviders.ArcGIS_DarbAE_Q2_2011_NAVTQ_Eng_V5_MapProvider">
            <summary>
            ArcGIS_DarbAE_Q2_2011_NAVTQ_Eng_V5_Map provider, 
            http://www.darb.ae/ArcGIS/rest/services/BaseMaps/Q2_2011_NAVTQ_Eng_V5/MapServer
            </summary>
        </member>
        <member name="T:Org.Mentalis.Network.ProxySocket.Authentication.AuthUserPass">
            <summary>
            This class implements the 'username/password authentication' scheme.
            </summary>
        </member>
        <member name="M:Org.Mentalis.Network.ProxySocket.Authentication.AuthUserPass.#ctor(System.Net.Sockets.Socket,System.String,System.String)">
            <summary>
            Initializes a new AuthUserPass instance.
            </summary>
            <param name="server">The socket connection with the proxy server.</param>
            <param name="user">The username to use.</param>
            <param name="pass">The password to use.</param>
            <exception cref="T:System.ArgumentNullException"><c>user</c> -or- <c>pass</c> is null.</exception>
        </member>
        <member name="M:Org.Mentalis.Network.ProxySocket.Authentication.AuthUserPass.GetAuthenticationBytes">
            <summary>
            Creates an array of bytes that has to be sent if the user wants to authenticate with the username/password authentication scheme.
            </summary>
            <returns>An array of bytes that has to be sent if the user wants to authenticate with the username/password authentication scheme.</returns>
        </member>
        <member name="M:Org.Mentalis.Network.ProxySocket.Authentication.AuthUserPass.Authenticate">
            <summary>
            Starts the authentication process.
            </summary>
        </member>
        <member name="M:Org.Mentalis.Network.ProxySocket.Authentication.AuthUserPass.BeginAuthenticate(Org.Mentalis.Network.ProxySocket.HandShakeComplete)">
            <summary>
            Starts the asynchronous authentication process.
            </summary>
            <param name="callback">The method to call when the authentication is complete.</param>
        </member>
        <member name="M:Org.Mentalis.Network.ProxySocket.Authentication.AuthUserPass.OnSent(System.IAsyncResult)">
            <summary>
            Called when the authentication bytes have been sent.
            </summary>
            <param name="ar">Stores state information for this asynchronous operation as well as any user-defined data.</param>
        </member>
        <member name="M:Org.Mentalis.Network.ProxySocket.Authentication.AuthUserPass.OnReceive(System.IAsyncResult)">
            <summary>
            Called when the socket received an authentication reply.
            </summary>
            <param name="ar">Stores state information for this asynchronous operation as well as any user-defined data.</param>
        </member>
        <member name="F:Org.Mentalis.Network.ProxySocket.Authentication.AuthUserPass.m_Username">
            <summary>Holds the value of the Username property.</summary>
        </member>
        <member name="F:Org.Mentalis.Network.ProxySocket.Authentication.AuthUserPass.m_Password">
            <summary>Holds the value of the Password property.</summary>
        </member>
        <member name="P:Org.Mentalis.Network.ProxySocket.Authentication.AuthUserPass.Username">
            <summary>
            Gets or sets the username to use when authenticating with the proxy server.
            </summary>
            <value>The username to use when authenticating with the proxy server.</value>
            <exception cref="T:System.ArgumentNullException">The specified value is null.</exception>
        </member>
        <member name="P:Org.Mentalis.Network.ProxySocket.Authentication.AuthUserPass.Password">
            <summary>
            Gets or sets the password to use when authenticating with the proxy server.
            </summary>
            <value>The password to use when authenticating with the proxy server.</value>
            <exception cref="T:System.ArgumentNullException">The specified value is null.</exception>
        </member>
        <member name="T:GMap.NET.GSize">
            <summary>
            the size
            </summary>
        </member>
        <member name="T:GMap.NET.MapRoute">
            <summary>
            represents route of map
            </summary>
        </member>
        <member name="F:GMap.NET.MapRoute.Points">
            <summary>
            points of route
            </summary>
        </member>
        <member name="F:GMap.NET.MapRoute.Name">
            <summary>
            route info
            </summary>
        </member>
        <member name="F:GMap.NET.MapRoute.Tag">
            <summary>
            custom object
            </summary>
        </member>
        <member name="M:GMap.NET.MapRoute.Clear">
            <summary>
            clears points and sets tag and name to null
            </summary>
        </member>
        <member name="M:GMap.NET.MapRoute.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with the data needed to serialize the target object.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> to populate with data.</param>
            <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext"/>) for this serialization.</param>
            <exception cref="T:System.Security.SecurityException">
            The caller does not have the required permission.
            </exception>
        </member>
        <member name="M:GMap.NET.MapRoute.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:GMap.NET.MapRoute"/> class.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:GMap.NET.MapRoute.OnDeserialization(System.Object)">
            <summary>
            Runs when the entire object graph has been de-serialized.
            </summary>
            <param name="sender">The object that initiated the callback. The functionality for this parameter is not currently implemented.</param>
        </member>
        <member name="P:GMap.NET.MapRoute.From">
            <summary>
            route start point
            </summary>
        </member>
        <member name="P:GMap.NET.MapRoute.To">
            <summary>
            route end point
            </summary>
        </member>
        <member name="P:GMap.NET.MapRoute.Distance">
            <summary>
            route distance (in km)
            </summary>
        </member>
        <member name="T:GMap.NET.Projections.LKS94Projection">
            <summary>
            GEOGCS[\"WGS 84\",DATUM[\"WGS_1984\",SPHEROID[\"WGS 84\",6378137,298.257223563,AUTHORITY[\"EPSG\",\"7030\"]],AUTHORITY[\"EPSG\",\"6326\"]],PRIMEM[\"Greenwich\",0,AUTHORITY[\"EPSG\",\"8901\"]],UNIT[\"degree\",0.01745329251994328,AUTHORITY[\"EPSG\",\"9122\"]],AUTHORITY[\"EPSG\",\"4326\"]]
            PROJCS["LKS94 / Lithuania TM",GEOGCS["LKS94",DATUM["Lithuania_1994_ETRS89",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],TOWGS84[0,0,0,0,0,0,0],AUTHORITY["EPSG","6126"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.01745329251994328,AUTHORITY["EPSG","9122"]],AUTHORITY["EPSG","4669"]],UNIT["metre",1,AUTHORITY["EPSG","9001"]],PROJECTION["Transverse_Mercator"],PARAMETER["latitude_of_origin",0],PARAMETER["central_meridian",24],PARAMETER["scale_factor",0.9998],PARAMETER["false_easting",500000],PARAMETER["false_northing",0],AUTHORITY["EPSG","3346"],AXIS["Y",EAST],AXIS["X",NORTH]]
            </summary>
        </member>
        <member name="F:GMap.NET.GDirections.Summary">
            <summary>
            contains a short textual description for the route, suitable for naming and disambiguating the route from alternatives.
            </summary>
        </member>
        <member name="F:GMap.NET.GDirections.Duration">
            <summary>
            contains a human-readable representation of the duration.
            </summary>
        </member>
        <member name="F:GMap.NET.GDirections.DurationValue">
            <summary>
            contains a value of the duration.
            </summary>
        </member>
        <member name="F:GMap.NET.GDirections.Distance">
            <summary>
            contains a human-readable representation of the distance, displayed in units as used at the origin
            (or as overridden within the units parameter in the request), in the language specified in the request.
            (For example, miles and feet will be used for any origin within the United States.)
            </summary>
        </member>
        <member name="F:GMap.NET.GDirections.DistanceValue">
            <summary>
            contains a value of the distance.
            </summary>
        </member>
        <member name="F:GMap.NET.GDirections.StartLocation">
            <summary>
            contains the latitude/longitude coordinates of the origin of this leg. Because the Directions API
            calculates directions between locations by using the nearest transportation option (usually a road)
            at the start and end points, start_location may be different than the provided origin of this leg if,
            for example, a road is not near the origin.
            </summary>
        </member>
        <member name="F:GMap.NET.GDirections.EndLocation">
            <summary>
            contains the latitude/longitude coordinates of the given destination of this leg. Because the Directions
            API calculates directions between locations by using the nearest transportation option (usually a road)
            at the start and end points, end_location may be different than the provided destination of this leg if,
            for example, a road is not near the destination.
            </summary>
        </member>
        <member name="F:GMap.NET.GDirections.StartAddress">
            <summary>
            contains the human-readable address (typically a street address) reflecting the start_location of this leg.
            </summary>
        </member>
        <member name="F:GMap.NET.GDirections.EndAddress">
            <summary>
            contains the human-readable address (typically a street address) reflecting the end_location of this leg.
            </summary>
        </member>
        <member name="F:GMap.NET.GDirections.Copyrights">
            <summary>
            contains the copyrights text to be displayed for this route. You must handle and display this information yourself.
            </summary>
        </member>
        <member name="F:GMap.NET.GDirections.Steps">
            <summary>
            contains an array of steps denoting information about each separate step of the leg of the journey.
            </summary>
        </member>
        <member name="F:GMap.NET.GDirections.Route">
            <summary>
            contains all points of the route
            </summary>
        </member>
        <member name="F:GMap.NET.GDirectionStep.StartLocation">
            <summary>
            contains the location of the starting point of this step, as a single set of lat and lng fields.
            </summary>
        </member>
        <member name="F:GMap.NET.GDirectionStep.EndLocation">
            <summary>
            contains the location of the ending point of this step, as a single set of lat and lng fields.
            </summary>
        </member>
        <member name="F:GMap.NET.GDirectionStep.Duration">
            <summary>
             contains the typical time required to perform the step, until the next step. This field may be undefined if the duration is unknown.
            </summary>
        </member>
        <member name="F:GMap.NET.GDirectionStep.Distance">
            <summary>
            contains the distance covered by this step until the next step. This field may be undefined if the distance is unknown.
            </summary>
        </member>
        <member name="F:GMap.NET.GDirectionStep.HtmlInstructions">
            <summary>
            contains formatted instructions for this step, presented as an HTML text string.
            </summary>
        </member>
        <member name="F:GMap.NET.GDirectionStep.Points">
            <summary>
            points of the step
            </summary>
        </member>
        <member name="T:GMap.NET.MapProviders.OpenSeaMapHybridProvider">
            <summary>
            OpenSeaMapHybrid provider - http://openseamap.org
            </summary>
        </member>
        <member name="T:GMap.NET.MapProviders.NearHybridMapProvider">
            <summary>
            NearHybridMap provider - http://www.nearmap.com/
            </summary>
        </member>
        <member name="T:GMap.NET.MapProviders.CzechHybridMapProvider">
            <summary>
            CzechHybridMap provider, http://www.mapy.cz/
            </summary>
        </member>
        <member name="T:GMap.NET.MapProviders.ArcGIS_World_Topo_MapProvider">
            <summary>
            ArcGIS_World_Topo_Map provider, http://server.arcgisonline.com
            </summary>
        </member>
        <member name="T:GMap.NET.MapProviders.ArcGIS_StreetMap_World_2D_MapProvider">
            <summary>
            ArcGIS_StreetMap_World_2D_Map provider, http://server.arcgisonline.com
            </summary>
        </member>
        <member name="T:GMap.NET.RenderMode">
            <summary>
            types of map rendering
            </summary>
        </member>
        <member name="F:GMap.NET.RenderMode.GDI_PLUS">
            <summary>
            gdi+ should work anywhere on Windows Forms
            </summary>
        </member>
        <member name="F:GMap.NET.RenderMode.WPF">
            <summary>
            only on Windows Presentation Foundation
            </summary>
        </member>
        <member name="T:GMap.NET.MouseWheelZoomType">
            <summary>
            map zooming type
            </summary>
        </member>
        <member name="F:GMap.NET.MouseWheelZoomType.MousePositionAndCenter">
            <summary>
            zooms map to current mouse position and makes it map center
            </summary>
        </member>
        <member name="F:GMap.NET.MouseWheelZoomType.MousePositionWithoutCenter">
            <summary>
            zooms to current mouse position, but doesn't make it map center,
            google/bing style ;}
            </summary>
        </member>
        <member name="F:GMap.NET.MouseWheelZoomType.ViewCenter">
            <summary>
            zooms map to current view center
            </summary>
        </member>
        <member name="T:GMap.NET.MapProviders.GMapProviders">
            <summary>
            providers that are already build in
            </summary>
        </member>
        <member name="P:GMap.NET.MapProviders.GMapProviders.List">
            <summary>
            get all instances of the supported providers
            </summary>
        </member>
        <member name="T:GMap.NET.MapProviders.EmptyProvider">
            <summary>
            represents empty provider
            </summary>
        </member>
        <member name="T:GMap.NET.MapProviders.OviTerrainMapProvider">
            <summary>
            OviTerrainMap provider
            </summary>
        </member>
        <member name="T:GMap.NET.Internals.Stuff">
            <summary>
            etc functions...
            </summary>
        </member>
        <member name="T:GMap.NET.Internals.Tile">
            <summary>
            represent tile
            </summary>
        </member>
        <member name="T:GMap.NET.Projections.LKS92Projection">
            <summary>
            GEOGCS[\"WGS 84\",DATUM[\"WGS_1984\",SPHEROID[\"WGS 84\",6378137,298.257223563,AUTHORITY[\"EPSG\",\"7030\"]],AUTHORITY[\"EPSG\",\"6326\"]],PRIMEM[\"Greenwich\",0,AUTHORITY[\"EPSG\",\"8901\"]],UNIT[\"degree\",0.01745329251994328,AUTHORITY[\"EPSG\",\"9122\"]],AUTHORITY[\"EPSG\",\"4326\"]]
            PROJCS["LKS92 / Latvia TM",GEOGCS["LKS92",DATUM["D_Latvia_1992",SPHEROID["GRS_1980",6378137,298.257222101]],PRIMEM["Greenwich",0],UNIT["Degree",0.017453292519943295]],PROJECTION["Transverse_Mercator"],PARAMETER["latitude_of_origin",0],PARAMETER["central_meridian",24],PARAMETER["scale_factor",0.9996],PARAMETER["false_easting",500000],PARAMETER["false_northing",-6000000],UNIT["Meter",1]]
            </summary>
        </member>
        <member name="T:GMap.NET.MapProviders.YahooSatelliteMapProvider">
            <summary>
            YahooSatelliteMap provider
            </summary>
        </member>
        <member name="T:GMap.NET.MapProviders.YahooHybridMapProvider">
            <summary>
            YahooHybridMap provider
            </summary>
        </member>
        <member name="T:GMap.NET.MapProviders.CzechTuristMapProvider">
            <summary>
            CzechTuristMap provider, http://www.mapy.cz/
            </summary>
        </member>
        <member name="T:GMap.NET.Internals.SocksHttpWebRequest">
            <summary>
            http://ditrans.blogspot.com/2009/03/making-witty-work-with-socks-proxy.html
            </summary>
        </member>
        <member name="T:GMap.NET.Internals.TileMatrix">
            <summary>
            matrix for tiles
            </summary>
        </member>
        <member name="T:GMap.NET.AccessMode">
            <summary>
            tile access mode
            </summary>
        </member>
        <member name="F:GMap.NET.AccessMode.ServerOnly">
            <summary>
            access only server
            </summary>
        </member>
        <member name="F:GMap.NET.AccessMode.ServerAndCache">
            <summary>
            access first server and caches localy
            </summary>
        </member>
        <member name="F:GMap.NET.AccessMode.CacheOnly">
            <summary>
            access only cache
            </summary>
        </member>
        <member name="T:GMap.NET.Projections.PlateCarreeProjectionDarbAe">
             <summary>
             Plate Carrée (literally, “plane square”) projection
             PROJCS["WGS 84 / World Equidistant Cylindrical",GEOGCS["GCS_WGS_1984",DATUM["D_WGS_1984",SPHEROID["WGS_1984",6378137,298.257223563]],PRIMEM["Greenwich",0],UNIT["Degree",0.017453292519943295]],UNIT["Meter",1]]
             
            "spatialReference": 
            {"wkid":4326},"singleFusedMapCache":true,"tileInfo":  
            {"rows":256,"cols":256,"dpi":96,"format":"PNG8","compressionQuality":0,   
            "origin":{"x":-400,"y":400},"spatialReference":{"wkid":4326},"lods": 
            
            [{"level":0,"resolution":0.0118973050291514,"scale":5000000},
            {"level":1,"resolution":0.0059486525145757,"scale":2500000}, 
            {"level":2,"resolution":0.00297432625728785,"scale":1250000}, 
            {"level":3,"resolution":0.00118973050291514,"scale":500000}, 
            {"level":4,"resolution":0.00059486525145757,"scale":250000}, 
            {"level":5,"resolution":0.000356919150874542,"scale":150000},
            {"level":6,"resolution":0.000178459575437271,"scale":75000}, 
            {"level":7,"resolution":0.000118973050291514,"scale":50000}, 
            {"level":8,"resolution":5.9486525145757E-05,"scale":25000},
            {"level":9,"resolution":3.56919150874542E-05,"scale":15000},
            {"level":10,"resolution":1.90356880466422E-05,"scale":8000}, 
            {"level":11,"resolution":9.51784402332112E-06,"scale":4000}, 
            {"level":12,"resolution":4.75892201166056E-06,"scale":2000}]},
            
            "initialExtent":    
            {"xmin":42.1125196069871,"ymin":18.6650706214551,"xmax":65.698643558112 
            4,"ymax":29.4472987133981,"spatialReference":{"wkid":4326}},
            
            "fullExtent":   
            {"xmin":41.522866508209,"ymin":18.7071563263201,"xmax":66.2882966568906 
            ,"ymax":29.4052130085331,"spatialReference":{"wkid":4326}},
            
            "units":"esriDecimalDegrees"
             </summary>
        </member>
        <member name="T:GMap.NET.MapProviders.GoogleKoreaMapProvider">
            <summary>
            GoogleKoreaMap provider
            </summary>
        </member>
        <member name="T:GMap.NET.MapProviders.YandexMapProvider">
            <summary>
            YandexMap provider
            </summary>
        </member>
        <member name="T:GMap.NET.MapProviders.LithuaniaOrtoFotoOldMapProvider">
            <summary>
            LithuaniaOrtoFotoNewMap, from 2005 data, provider
            </summary>
        </member>
        <member name="M:GMap.NET.MapProviders.CloudMadeMapProviderBase.GetRoute(System.String,System.String,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            NotImplemented
            </summary>
            <param name="start"></param>
            <param name="end"></param>
            <param name="avoidHighways"></param>
            <param name="walkingMode"></param>
            <param name="Zoom"></param>
            <returns></returns>
        </member>
        <member name="M:GMap.NET.MapProviders.CloudMadeMapProviderBase.GetDirections(GMap.NET.GDirections@,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            NotImplemented
            </summary>
            <param name="direction"></param>
            <param name="start"></param>
            <param name="end"></param>
            <param name="avoidHighways"></param>
            <param name="avoidTolls"></param>
            <param name="walkingMode"></param>
            <param name="sensor"></param>
            <param name="metric"></param>
            <returns></returns>
        </member>
        <member name="M:GMap.NET.MapProviders.CloudMadeMapProviderBase.GetDirections(GMap.NET.DirectionsStatusCode@,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            NotImplemented
            </summary>
            <param name="status"></param>
            <param name="start"></param>
            <param name="end"></param>
            <param name="avoidHighways"></param>
            <param name="avoidTolls"></param>
            <param name="walkingMode"></param>
            <param name="sensor"></param>
            <param name="metric"></param>
            <returns></returns>
        </member>
        <member name="M:GMap.NET.MapProviders.CloudMadeMapProviderBase.GetDirections(GMap.NET.DirectionsStatusCode@,GMap.NET.PointLatLng,GMap.NET.PointLatLng,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            NotImplemented
            </summary>
            <param name="status"></param>
            <param name="start"></param>
            <param name="end"></param>
            <param name="avoidHighways"></param>
            <param name="avoidTolls"></param>
            <param name="walkingMode"></param>
            <param name="sensor"></param>
            <param name="metric"></param>
            <returns></returns>
        </member>
        <member name="M:GMap.NET.MapProviders.CloudMadeMapProviderBase.GetDirections(GMap.NET.GDirections@,GMap.NET.PointLatLng,System.Collections.Generic.IEnumerable{GMap.NET.PointLatLng},System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            NotImplemented
            </summary>
            <param name="direction"></param>
            <param name="start"></param>
            <param name="wayPoints"></param>
            <param name="avoidHighways"></param>
            <param name="avoidTolls"></param>
            <param name="walkingMode"></param>
            <param name="sensor"></param>
            <param name="metric"></param>
            <returns></returns>
        </member>
        <member name="M:GMap.NET.MapProviders.CloudMadeMapProviderBase.GetDirections(GMap.NET.GDirections@,System.String,System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            NotImplemented
            </summary>
            <param name="direction"></param>
            <param name="start"></param>
            <param name="wayPoints"></param>
            <param name="avoidHighways"></param>
            <param name="avoidTolls"></param>
            <param name="walkingMode"></param>
            <param name="sensor"></param>
            <param name="metric"></param>
            <returns></returns>
        </member>
        <member name="T:GMap.NET.MapProviders.CloudMadeMapProvider">
            <summary>
            CloudMadeMap demo provider, http://maps.cloudmade.com/
            </summary>
        </member>
        <member name="T:Org.Mentalis.Network.ProxySocket.Socks5Handler">
            <summary>
            Implements the SOCKS5 protocol.
            </summary>
        </member>
        <member name="M:Org.Mentalis.Network.ProxySocket.Socks5Handler.#ctor(System.Net.Sockets.Socket)">
            <summary>
            Initiliazes a new Socks5Handler instance.
            </summary>
            <param name="server">The socket connection with the proxy server.</param>
            <exception cref="T:System.ArgumentNullException"><c>server</c>  is null.</exception>
        </member>
        <member name="M:Org.Mentalis.Network.ProxySocket.Socks5Handler.#ctor(System.Net.Sockets.Socket,System.String)">
            <summary>
            Initiliazes a new Socks5Handler instance.
            </summary>
            <param name="server">The socket connection with the proxy server.</param>
            <param name="user">The username to use.</param>
            <exception cref="T:System.ArgumentNullException"><c>server</c> -or- <c>user</c> is null.</exception>
        </member>
        <member name="M:Org.Mentalis.Network.ProxySocket.Socks5Handler.#ctor(System.Net.Sockets.Socket,System.String,System.String)">
            <summary>
            Initiliazes a new Socks5Handler instance.
            </summary>
            <param name="server">The socket connection with the proxy server.</param>
            <param name="user">The username to use.</param>
            <param name="pass">The password to use.</param>
            <exception cref="T:System.ArgumentNullException"><c>server</c> -or- <c>user</c> -or- <c>pass</c> is null.</exception>
        </member>
        <member name="M:Org.Mentalis.Network.ProxySocket.Socks5Handler.Authenticate">
            <summary>
            Starts the synchronous authentication process.
            </summary>
            <exception cref="T:Org.Mentalis.Network.ProxySocket.ProxyException">Authentication with the proxy server failed.</exception>
            <exception cref="T:System.Net.ProtocolViolationException">The proxy server uses an invalid protocol.</exception>
            <exception cref="T:System.Net.Sockets.SocketException">An operating system error occurs while accessing the Socket.</exception>
            <exception cref="T:System.ObjectDisposedException">The Socket has been closed.</exception>
        </member>
        <member name="M:Org.Mentalis.Network.ProxySocket.Socks5Handler.GetHostPortBytes(System.String,System.Int32)">
            <summary>
            Creates an array of bytes that has to be sent when the user wants to connect to a specific host/port combination.
            </summary>
            <param name="host">The host to connect to.</param>
            <param name="port">The port to connect to.</param>
            <returns>An array of bytes that has to be sent when the user wants to connect to a specific host/port combination.</returns>
            <exception cref="T:System.ArgumentNullException"><c>host</c> is null.</exception>
            <exception cref="T:System.ArgumentException"><c>port</c> or <c>host</c> is invalid.</exception>
        </member>
        <member name="M:Org.Mentalis.Network.ProxySocket.Socks5Handler.GetEndPointBytes(System.Net.IPEndPoint)">
            <summary>
            Creates an array of bytes that has to be sent when the user wants to connect to a specific IPEndPoint.
            </summary>
            <param name="remoteEP">The IPEndPoint to connect to.</param>
            <returns>An array of bytes that has to be sent when the user wants to connect to a specific IPEndPoint.</returns>
            <exception cref="T:System.ArgumentNullException"><c>remoteEP</c> is null.</exception>
        </member>
        <member name="M:Org.Mentalis.Network.ProxySocket.Socks5Handler.Negotiate(System.String,System.Int32)">
            <summary>
            Starts negotiating with the SOCKS server.
            </summary>
            <param name="host">The host to connect to.</param>
            <param name="port">The port to connect to.</param>
            <exception cref="T:System.ArgumentNullException"><c>host</c> is null.</exception>
            <exception cref="T:System.ArgumentException"><c>port</c> is invalid.</exception>
            <exception cref="T:Org.Mentalis.Network.ProxySocket.ProxyException">The proxy rejected the request.</exception>
            <exception cref="T:System.Net.Sockets.SocketException">An operating system error occurs while accessing the Socket.</exception>
            <exception cref="T:System.ObjectDisposedException">The Socket has been closed.</exception>
            <exception cref="T:System.Net.ProtocolViolationException">The proxy server uses an invalid protocol.</exception>
        </member>
        <member name="M:Org.Mentalis.Network.ProxySocket.Socks5Handler.Negotiate(System.Net.IPEndPoint)">
            <summary>
            Starts negotiating with the SOCKS server.
            </summary>
            <param name="remoteEP">The IPEndPoint to connect to.</param>
            <exception cref="T:System.ArgumentNullException"><c>remoteEP</c> is null.</exception>
            <exception cref="T:Org.Mentalis.Network.ProxySocket.ProxyException">The proxy rejected the request.</exception>
            <exception cref="T:System.Net.Sockets.SocketException">An operating system error occurs while accessing the Socket.</exception>
            <exception cref="T:System.ObjectDisposedException">The Socket has been closed.</exception>
            <exception cref="T:System.Net.ProtocolViolationException">The proxy server uses an invalid protocol.</exception>
        </member>
        <member name="M:Org.Mentalis.Network.ProxySocket.Socks5Handler.Negotiate(System.Byte[])">
            <summary>
            Starts negotiating with the SOCKS server.
            </summary>
            <param name="connect">The bytes to send when trying to authenticate.</param>
            <exception cref="T:System.ArgumentNullException"><c>connect</c> is null.</exception>
            <exception cref="T:System.ArgumentException"><c>connect</c> is too small.</exception>
            <exception cref="T:Org.Mentalis.Network.ProxySocket.ProxyException">The proxy rejected the request.</exception>
            <exception cref="T:System.Net.Sockets.SocketException">An operating system error occurs while accessing the Socket.</exception>
            <exception cref="T:System.ObjectDisposedException">The Socket has been closed.</exception>
            <exception cref="T:System.Net.ProtocolViolationException">The proxy server uses an invalid protocol.</exception>
        </member>
        <member name="M:Org.Mentalis.Network.ProxySocket.Socks5Handler.BeginNegotiate(System.String,System.Int32,Org.Mentalis.Network.ProxySocket.HandShakeComplete,System.Net.IPEndPoint)">
            <summary>
            Starts negotiating asynchronously with the SOCKS server. 
            </summary>
            <param name="host">The host to connect to.</param>
            <param name="port">The port to connect to.</param>
            <param name="callback">The method to call when the negotiation is complete.</param>
            <param name="proxyEndPoint">The IPEndPoint of the SOCKS proxy server.</param>
            <returns>An IAsyncProxyResult that references the asynchronous connection.</returns>
        </member>
        <member name="M:Org.Mentalis.Network.ProxySocket.Socks5Handler.BeginNegotiate(System.Net.IPEndPoint,Org.Mentalis.Network.ProxySocket.HandShakeComplete,System.Net.IPEndPoint)">
            <summary>
            Starts negotiating asynchronously with the SOCKS server. 
            </summary>
            <param name="remoteEP">An IPEndPoint that represents the remote device.</param>
            <param name="callback">The method to call when the negotiation is complete.</param>
            <param name="proxyEndPoint">The IPEndPoint of the SOCKS proxy server.</param>
            <returns>An IAsyncProxyResult that references the asynchronous connection.</returns>
        </member>
        <member name="M:Org.Mentalis.Network.ProxySocket.Socks5Handler.OnConnect(System.IAsyncResult)">
            <summary>
            Called when the socket is connected to the remote server.
            </summary>
            <param name="ar">Stores state information for this asynchronous operation as well as any user-defined data.</param>
        </member>
        <member name="M:Org.Mentalis.Network.ProxySocket.Socks5Handler.OnAuthSent(System.IAsyncResult)">
            <summary>
            Called when the authentication bytes have been sent.
            </summary>
            <param name="ar">Stores state information for this asynchronous operation as well as any user-defined data.</param>
        </member>
        <member name="M:Org.Mentalis.Network.ProxySocket.Socks5Handler.OnAuthReceive(System.IAsyncResult)">
            <summary>
            Called when an authentication reply has been received.
            </summary>
            <param name="ar">Stores state information for this asynchronous operation as well as any user-defined data.</param>
        </member>
        <member name="M:Org.Mentalis.Network.ProxySocket.Socks5Handler.OnAuthenticated(System.Exception)">
            <summary>
            Called when the socket has been successfully authenticated with the server.
            </summary>
            <param name="e">The exception that has occured while authenticating, or <em>null</em> if no error occured.</param>
        </member>
        <member name="M:Org.Mentalis.Network.ProxySocket.Socks5Handler.OnSent(System.IAsyncResult)">
            <summary>
            Called when the connection request has been sent.
            </summary>
            <param name="ar">Stores state information for this asynchronous operation as well as any user-defined data.</param>
        </member>
        <member name="M:Org.Mentalis.Network.ProxySocket.Socks5Handler.OnReceive(System.IAsyncResult)">
            <summary>
            Called when a connection reply has been received.
            </summary>
            <param name="ar">Stores state information for this asynchronous operation as well as any user-defined data.</param>
        </member>
        <member name="M:Org.Mentalis.Network.ProxySocket.Socks5Handler.ProcessReply(System.Byte[])">
            <summary>
            Processes the received reply.
            </summary>
            <param name="buffer">The received reply</param>
            <exception cref="T:System.Net.ProtocolViolationException">The received reply is invalid.</exception>
        </member>
        <member name="M:Org.Mentalis.Network.ProxySocket.Socks5Handler.OnReadLast(System.IAsyncResult)">
            <summary>
            Called when the last bytes are read from the socket.
            </summary>
            <param name="ar">Stores state information for this asynchronous operation as well as any user-defined data.</param>
        </member>
        <member name="F:Org.Mentalis.Network.ProxySocket.Socks5Handler.m_Password">
            <summary>Holds the value of the Password property.</summary>
        </member>
        <member name="F:Org.Mentalis.Network.ProxySocket.Socks5Handler.m_HandShake">
            <summary>Holds the value of the HandShake property.</summary>
        </member>
        <member name="P:Org.Mentalis.Network.ProxySocket.Socks5Handler.Password">
            <summary>
            Gets or sets the password to use when authenticating with the SOCKS5 server.
            </summary>
            <value>The password to use when authenticating with the SOCKS5 server.</value>
        </member>
        <member name="P:Org.Mentalis.Network.ProxySocket.Socks5Handler.HandShake">
            <summary>
            Gets or sets the bytes to use when sending a connect request to the proxy server.
            </summary>
            <value>The array of bytes to use when sending a connect request to the proxy server.</value>
        </member>
        <member name="T:Org.Mentalis.Network.ProxySocket.IAsyncProxyResult">
            <summary>
            A class that implements the IAsyncResult interface. Objects from this class are returned by the BeginConnect method of the ProxySocket class.
            </summary>
        </member>
        <member name="M:Org.Mentalis.Network.ProxySocket.IAsyncProxyResult.Init(System.Object)">
            <summary>Initializes the internal variables of this object</summary>
            <param name="stateObject">An object that contains state information for this request.</param>
        </member>
        <member name="M:Org.Mentalis.Network.ProxySocket.IAsyncProxyResult.Reset">
            <summary>Initializes the internal variables of this object</summary>
        </member>
        <member name="F:Org.Mentalis.Network.ProxySocket.IAsyncProxyResult.m_Completed">
            <summary>Used internally to represent the state of the asynchronous request</summary>
        </member>
        <member name="F:Org.Mentalis.Network.ProxySocket.IAsyncProxyResult.m_StateObject">
            <summary>Holds the value of the StateObject property.</summary>
        </member>
        <member name="F:Org.Mentalis.Network.ProxySocket.IAsyncProxyResult.m_WaitHandle">
            <summary>Holds the value of the WaitHandle property.</summary>
        </member>
        <member name="P:Org.Mentalis.Network.ProxySocket.IAsyncProxyResult.IsCompleted">
            <summary>Gets a value that indicates whether the server has completed processing the call. It is illegal for the server to use any client supplied resources outside of the agreed upon sharing semantics after it sets the IsCompleted property to "true". Thus, it is safe for the client to destroy the resources after IsCompleted property returns "true".</summary>
            <value>A boolean that indicates whether the server has completed processing the call.</value>
        </member>
        <member name="P:Org.Mentalis.Network.ProxySocket.IAsyncProxyResult.CompletedSynchronously">
            <summary>Gets a value that indicates whether the BeginXXXX call has been completed synchronously. If this is detected in the AsyncCallback delegate, it is probable that the thread that called BeginInvoke is the current thread.</summary>
            <value>Returns false.</value>
        </member>
        <member name="P:Org.Mentalis.Network.ProxySocket.IAsyncProxyResult.AsyncState">
            <summary>Gets an object that was passed as the state parameter of the BeginXXXX method call.</summary>
            <value>The object that was passed as the state parameter of the BeginXXXX method call.</value>
        </member>
        <member name="P:Org.Mentalis.Network.ProxySocket.IAsyncProxyResult.AsyncWaitHandle">
             <summary>
             The AsyncWaitHandle property returns the WaitHandle that can use to perform a WaitHandle.WaitOne or WaitAny or WaitAll. The object which implements IAsyncResult need not derive from the System.WaitHandle classes directly. The WaitHandle wraps its underlying synchronization primitive and should be signaled after the call is completed. This enables the client to wait for the call to complete instead polling. The Runtime supplies a number of waitable objects that mirror Win32 synchronization primitives e.g. ManualResetEvent, AutoResetEvent and Mutex.
             WaitHandle supplies methods that support waiting for such synchronization objects to become signaled with "any" or "all" semantics i.e. WaitHandle.WaitOne, WaitAny and WaitAll. Such methods are context aware to avoid deadlocks. The AsyncWaitHandle can be allocated eagerly or on demand. It is the choice of the IAsyncResult implementer.
            </summary>
             <value>The WaitHandle associated with this asynchronous result.</value>
        </member>
        <member name="T:GMap.NET.Internals.DrawTile">
            <summary>
            struct for drawing tile
            </summary>
        </member>
    </members>
</doc>
