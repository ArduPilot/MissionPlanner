<graphs>

 <graph name='TECS/Speed Demand vs Speed'>
  <description>shows demanded speed vs speed</description>
  <expression>TECS.sp TECS.sp_dem</expression>
 </graph>

 <graph name='Sensors/Lidar/Rangefinder vs Baro'>
  <description></description>
  <expression>RANGEFINDER.distance GLOBAL_POSITION_INT.relative_alt*0.001</expression>
 </graph>

 <graph name='Board/Power'>
  <description>Board VCC and servo voltage</description>
  <expression>POWER_STATUS.Vcc*0.001 POWER_STATUS.Vservo*0.001</expression>
 </graph>

 <graph name='Sensors/Accelerometer/Vibration'>
  <description>This shows the raw vibration values before filtering in the accelerometers. If you see values above 50 m/s/s then you should redo your vibration isolation system</description>
  <expression>VIBE[0].VibeX VIBE[0].VibeY VIBE[0].VibeZ</expression>
  <expression>VIBE.VibeX VIBE.VibeY VIBE.VibeZ</expression>
 </graph>

  <graph name='Sensors/Accelerometer/Vibration IMU2'>
  <description>This shows the raw vibration values before filtering in the accelerometers. If you see values above 50 m/s/s then you should redo your vibration isolation system</description>
  <expression>VIBE[1].VibeX VIBE[1].VibeY VIBE[1].VibeZ</expression>
 </graph>

  <graph name='Sensors/Accelerometer/Vibration IMU3'>
  <description>This shows the raw vibration values before filtering in the accelerometers. If you see values above 50 m/s/s then you should redo your vibration isolation system</description>
  <expression>VIBE[2].VibeX VIBE[2].VibeY VIBE[2].VibeZ</expression>
 </graph>
 
 <graph name='Sensors/Accelerometer/Clipping'>
  <description>This shows the clipping count for the accelerometers. A clipping event is when any axis of an accelerometer goes above 16g. You should only see clipping events if the vehicle hits a surface very hard, such as a crash or hard landing. If you see any clipping events (the clipping value rising) in flight then you should redo your vibration isolation system</description>
  <expression>VIBE[0].Clip VIBE[1].Clip VIBE[2].Clip</expression>
  <expression>VIBE[0].Clip VIBE[1].Clip</expression>
  <expression>VIBE[0].Clip</expression>
  <expression>VIBE.Clip0 VIBE.Clip1 VIBE.Clip2</expression>
 </graph>

 <graph name='Sensors/Lidar/Corrected'>
  <description></description>
  <expression>BARO.Alt RFND[0].Dist*(cos(radians(ATT.Roll))*cos(radians(ATT.Pitch)))</expression>
 </graph>

 <graph name='Sensors/Lidar/Corrected Baro'>
  <description></description>
  <expression>BARO.Alt/(cos(radians(ATT.Roll))*cos(radians(ATT.Pitch))) RFND.Dist1</expression>
  <expression>BARO.Alt/(cos(radians(ATT.Roll))*cos(radians(ATT.Pitch))) RFND[0].Dist</expression>
 </graph>

 <graph name='Sensors/Lidar/Corrected Distance'>
  <description></description>
  <expression>BARO.Alt RFND.Dist[0]*cos(radians(ATT.Roll))*cos(radians(ATT.Pitch))</expression>
  <expression>BARO.Alt RFND.Dist1*cos(radians(ATT.Roll))*cos(radians(ATT.Pitch))</expression>
 </graph>

 <graph name='Radio/RSSI_Distance'>
  <description></description>
  <expression>RADIO_STATUS.rssi RADIO_STATUS.noise RADIO_STATUS.remrssi RADIO_STATUS.remnoise distance_home(GPS_RAW_INT):2</expression>
 </graph>

 <graph name='Servos/Servos 5-8'>
  <description></description>
  <expression>RCOU.Ch5 RCOU.Ch6 RCOU.Ch7 RCOU.Ch8</expression>
  <expression>RCOU.C5 RCOU.C6 RCOU.C7 RCOU.C8</expression>
 </graph>

 <graph name='Servos/Servos 1-4'>
  <description></description>
  <expression>RCOU.Ch1 RCOU.Ch2 RCOU.Ch3 RCOU.Ch4</expression>
  <expression>RCOU.C1 RCOU.C2 RCOU.C3 RCOU.C4</expression>
 </graph>

 <graph name='Power/Current and Voltage'>
  <description></description>
  <expression>SYS_STATUS.voltage_battery*0.001 SYS_STATUS.current_battery*0.01</expression>
 </graph>

 <graph name='Servos/Servos 5-12'>
  <description></description>
  <expression>RCOU.Ch5 RCOU.Ch6 RCOU.Ch7 RCOU.Ch8 RCOU.Ch9 RCOU.Ch10 RCOU.Ch11 RCOU.Ch12</expression>
  <expression>RCOU.C5 RCOU.C6 RCOU.C7 RCOU.C8 RCOU.C9 RCOU.C10 RCOU.C11 RCOU.C12</expression>
 </graph>

 <graph name='Servos/OctaQuad'>
  <description></description>
  <expression>RCOU.Ch5 RCOU.Ch6 RCOU.Ch7 RCOU.Ch8 RCOU.Ch9 RCOU.Ch10 RCOU.Ch11 RCOU.Ch12</expression>
  <expression>RCOU.C5 RCOU.C6 RCOU.C7 RCOU.C8 RCOU.C9 RCOU.C10 RCOU.C11 RCOU.C12</expression>
 </graph>

 <graph name='Quadplane/Climb Rate'>
  <description></description>
  <expression>QTUN.CRt QTUN.DCRt BARO.Alt:2</expression>
 </graph>

 <graph name='Quadplane/Velocity XY'>
  <description></description>
  <expression>QTUN.DVx QTUN.DVy NKF1[0].VN NKF1[0].VE</expression>
  <expression>QTUN.DVx QTUN.DVy NKF1.VN NKF1.VE</expression>
 </graph>

 <graph name='Quadplane/Leonard'>
  <description></description>
  <expression>QTUN.DVx QTUN.DVy NKF1[0].VN NKF1[0].VE ATT.DesPitch:2 ATT.Pitch:2</expression>
  <expression>QTUN.DVx QTUN.DVy NKF1.VN NKF1.VE ATT.DesPitch:2 ATT.Pitch:2</expression>
 </graph>

 <graph name='Quadplane/Landing'>
  <description></description>
  <expression>QTUN.DVx QTUN.DVy NKF1[0].VN NKF1[0].VE ATT.DesPitch ATT.Pitch NTUN.WpDist:2 BARO.Alt:2</expression>
  <expression>QTUN.DVx QTUN.DVy NKF1.VN NKF1.VE ATT.DesPitch ATT.Pitch NTUN.WpDist:2 BARO.Alt:2</expression>
 </graph>

 <graph name='Replay/Roll'>
  <description></description>
  <expression>SIM.Roll ATT.Roll NKF1.Roll NKF1[1].Roll</expression>
  <expression>SIM.Roll ATT.Roll NKF1.Roll NKF6.Roll EKF1.Roll</expression>
 </graph>

 <graph name='Replay/Pitch'>
  <description></description>
  <expression>SIM.Pitch ATT.Pitch NKF1[0].Pitch NKF1[1].Pitch</expression>
  <expression>SIM.Pitch ATT.Pitch NKF1.Pitch NKF6.Pitch EKF1.Pitch</expression>
 </graph>

 <graph name='Replay/Yaw'>
  <description></description>
  <expression>SIM.Yaw ATT.Yaw NKF1[0].Yaw NKF1[1].Yaw</expression>
  <expression>SIM.Yaw ATT.Yaw NKF1.Yaw NKF6.Yaw EKF1.Yaw</expression>
 </graph>

 <graph name='PM/Perf'>
  <description></description>
  <expression>PM.MaxT PM.NLon:2</expression>
 </graph>

 <graph name='PM/LogDrop'>
  <description></description>
  <expression>PM.MaxT PM.NLon:2 PM.LogDrop:2</expression>
 </graph>

 <graph name='Copter/Controller RMS'>
  <description></description>
  <expression>CTRL.RMSRoll CTRL.RMSPitch CTRL.RMSYaw</expression>
  <expression>CTRL.RMSRollP CTRL.RMSRollD CTRL.RMSPitchP CTRL.RMSPitchD CTRL.RMSYaw</expression>
 </graph>

 <graph name='Radio/Projected Distance'>
  <description></description>
  <expression>lowpass(pow(2,(RADIO_STATUS.rssi-RADIO_STATUS.noise)*0.5/6)*distance_home(GPS_RAW_INT),"r1",0.99) lowpass(pow(2,(RADIO_STATUS.remrssi-RADIO_STATUS.remnoise)*0.5/6)*distance_home(GPS_RAW_INT),"r2",0.99)</expression>
 </graph>

 <graph name='Rover/Steering'>
  <description></description>
  <expression>STER.Achieved STER.Demanded</expression>
 </graph>

 <graph name='Servos/OctaQuad-CCW'>
  <description></description>
  <expression>RCOU.Ch5 RCOU.Ch7 RCOU.Ch9 RCOU.Ch11</expression>
  <expression>RCOU.C5 RCOU.C7 RCOU.C9 RCOU.C11</expression>
 </graph>

 <graph name='Servos/OctaQuad-CW'>
  <description></description>
  <expression>RCOU.Ch6 RCOU.Ch8 RCOU.Ch10 RCOU.Ch12</expression>
  <expression>RCOU.C6 RCOU.C8 RCOU.C10 RCOU.C12</expression>
 </graph>

 <graph name='Copter/RateOutputs'>
  <description></description>
  <expression>RATE.ROut RATE.POut RATE.YOut RATE.AOut</expression>
 </graph>

 <graph name='Sensors/Gyroscope/Gyro 1'>
  <description></description>
  <expression>degrees(IMU[0].GyrX) degrees(IMU[0].GyrY) degrees(IMU[0].GyrZ)</expression>
  <expression>degrees(IMU.GyrX) degrees(IMU.GyrY) degrees(IMU.GyrZ)</expression>
 </graph>

 <graph name='Sensors/Gyroscope/Gyro 2'>
  <description></description>
  <expression>degrees(IMU[1].GyrX) degrees(IMU[1].GyrY) degrees(IMU[1].GyrZ)</expression>
  <expression>degrees(IMU2.GyrX) degrees(IMU2.GyrY) degrees(IMU2.GyrZ)</expression>
 </graph>

 <graph name='Sensors/Gyroscope/Gyro 3'>
  <description></description>
  <expression>degrees(IMU[2].GyrX) degrees(IMU[2].GyrY) degrees(IMU[2].GyrZ)</expression>
  <expression>degrees(IMU3.GyrX) degrees(IMU3.GyrY) degrees(IMU3.GyrZ)</expression>
 </graph>
 
 <graph name='Servos/OctaQuad-FRONT'>
  <description></description>
  <expression>RCOU.C5 RCOU.C6 RCOU.C9 RCOU.C10</expression>
 </graph>

 <graph name='Servos/OctaQuad-REAR'>
  <description></description>
  <expression>RCOU.C7 RCOU.C8 RCOU.C11 RCOU.C12</expression>
 </graph>

 <graph name='Servos/OctaQuad-Front-Rear'>
  <description></description>
  <expression>RCOU.C5+RCOU.C6+RCOU.C9+RCOU.C10 RCOU.C7+RCOU.C8+RCOU.C11+RCOU.C12</expression>
 </graph>

 <graph name='RADIO/RSSI_Distance'>
  <description></description>
  <expression>RAD.RSSI RAD.Noise RAD.RemRSSI RAD.RemNoise distance_home(GPS):2</expression>
 </graph>

 <graph name='Radio/RSSI_Noise'>
  <description></description>
  <expression>RAD.RSSI RAD.Noise RAD.RemRSSI RAD.RemNoise</expression>
 </graph>

 <graph name='Flow/FlowAGL vs Terrain'>
  <description></description>
  <expression>lowpass(max((GPS.Spd/(OF.flowY-OF.bodyY)),0)*cos(radians(ATT.Roll))*cos(radians(ATT.Pitch)),"flowheight",0.95) TERR.CHeight</expression>
 </graph>

 <graph name='Servos/TiltTri'>
  <description></description>
  <expression>RCOU.C5 RCOU.C6 RCOU.C8 RCOU.C11 RCOU.C12</expression>
 </graph>

 <graph name='Flow/FlowHeight'>
  <description></description>
  <expression>max(min(cos(radians(ATT.Roll))*cos(radians(ATT.Pitch))*GPS.Spd/lowpass(ROF.Fx-ROF.By,"r",0.95),100),0) BARO.Alt</expression>
 </graph>

 <graph name='Servos/OctaQuad CCW-CW'>
  <description></description>
  <expression>(RCOU.C5+RCOU.C7+RCOU.C9+RCOU.C11)/4 (RCOU.C6+RCOU.C8+RCOU.C10+RCOU.C12)/4</expression>
 </graph>

 <graph name='Servos/OctaQuad-CCW-CW'>
  <description></description>
  <expression>0.25*(SERVO_OUTPUT_RAW.servo5_raw+SERVO_OUTPUT_RAW.servo7_raw+SERVO_OUTPUT_RAW.servo9_raw+SERVO_OUTPUT_RAW.servo11_raw) 0.25*(SERVO_OUTPUT_RAW.servo6_raw+SERVO_OUTPUT_RAW.servo8_raw+SERVO_OUTPUT_RAW.servo10_raw+SERVO_OUTPUT_RAW.servo12_raw)</expression>
 </graph>

 <graph name='Servos/OctaQuad-Front-Back'>
  <description></description>
  <expression>0.25*(SERVO_OUTPUT_RAW.servo5_raw+SERVO_OUTPUT_RAW.servo6_raw+SERVO_OUTPUT_RAW.servo9_raw+SERVO_OUTPUT_RAW.servo10_raw) 0.25*(SERVO_OUTPUT_RAW.servo7_raw+SERVO_OUTPUT_RAW.servo8_raw+SERVO_OUTPUT_RAW.servo11_raw+SERVO_OUTPUT_RAW.servo12_raw)</expression>
 </graph>

 <graph name='OBC/Link Status'>
  <description></description>
  <expression>link_up(GPS_RAW_INT,0) link_up(GPS_RAW_INT,1) link_up(GPS_RAW_INT,2) link_up(GPS_RAW_INT,3) GLOBAL_POSITION_INT.relative_alt*0.001:2</expression>
 </graph>

 <graph name='Link/Heartbeat-outages'>
  <description></description>
  <expression>diff(HEARTBEAT._timestamp,"t")</expression>
 </graph>

 <graph name='Link/TimeLag'>
  <description></description>
  <expression>SYSTEM_TIME._timestamp-SYSTEM_TIME.time_unix_usec*1.0e-6</expression>
 </graph>

 <graph name='ADAP/K1H'>
  <description></description>
  <expression>ADAP.K1H</expression>
 </graph>

 <graph name='Sensors/Compass Compare 1-2'>
  <description></description>
  <expression>MAG[0].MagX MAG[0].MagY MAG[0].MagZ MAG[1].MagX MAG[1].MagY MAG[1].MagZ</expression>
  <expression>MAG.MagX MAG.MagY MAG.MagZ MAG2.MagX MAG2.MagY MAG2.MagZ</expression>
 </graph>

 <graph name='Sensors/Wind Speed'>
  <description></description>
  <expression>sqrt(NKF2[0].VWE**2+NKF2[0].VWN**2)</expression>
  <expression>sqrt(NKF2.VWE**2+NKF2.VWN**2)</expression>
 </graph>

 <graph name='TECS/Height'>
  <description></description>
  <expression>TECS.h TECS.hdem BARO.Alt</expression>
 </graph>

 <graph name='TECS/Speed'>
  <description></description>
  <expression>TECS.sp TECS.spdem</expression>
 </graph>

 <graph name='Sensors/GPS Time Jitter'>
  <description></description>
  <expression>diff(GPS.TimeUS,"t")*1.0e-6 diff(GPS.GMS,"gt")*1.0e-3</expression>
 </graph>

 <graph name='EKF/PositionInnov1'>
  <description></description>
  <expression>NKF3[0].IPN NKF3[0].IPE</expression>
  <expression>NKF3.IPN NKF3.IPE</expression>
 </graph>

 <graph name='Copter/PIDR Desired vs Achieved'>
  <description></description>
  <expression>degrees(PIDR.Des) degrees(IMU.GyrX)</expression>
 </graph>

 <graph name='Vibe/AccZ'>
  <description></description>
  <expression>ACC1.AccZ IMU.AccZ</expression>
 </graph>

 <graph name='Vibe/AccY'>
  <description></description>
  <expression>ACC1.AccY IMU.AccY</expression>
 </graph>

 <graph name='Flow/FlowX'>
  <description></description>
  <expression>OF.flowX OF.bodyX IMU.GyrX</expression>
 </graph>

 <graph name='Flow/FlowY'>
  <description></description>
  <expression>OF.flowY OF.bodyY IMU.GyrY</expression>
 </graph>

 <graph name='Flow/Velocity vs GPS'>
  <description></description>
  <expression>sqrt((OF.flowX-OF.bodyX)**2+(OF.flowY-OF.bodyY)**2)*RFND.Dist1*cos(radians(ATT.Roll))*cos(radians(ATT.Pitch)) GPS.Spd BARO.Alt:2</expression>
  <expression>sqrt((OF.flowX-OF.bodyX)**2+(OF.flowY-OF.bodyY)**2)*RFND[0].Dist*cos(radians(ATT.Roll))*cos(radians(ATT.Pitch)) GPS.Spd BARO.Alt:2</expression>
 </graph>

 <graph name='Sensors/Accelerometer/Vibration'>
  <description></description>
  <expression>VIBRATION.vibration_x VIBRATION.vibration_y VIBRATION.vibration_z</expression>
 </graph>

 <graph name='EKF/GPS Vel NE'>
  <description></description>
  <expression>GPS.Spd*sin(radians(GPS.GCrs)) NKF1[0].VE GPS.Spd*cos(radians(GPS.GCrs)) NKF1[0].VN</expression>
  <expression>GPS.Spd*sin(radians(GPS.GCrs)) NKF1.VE GPS.Spd*cos(radians(GPS.GCrs)) NKF1.VN</expression>
 </graph>

 <graph name='Flow/Flow vel vs EKF'>
  <description></description>
  <expression>NKF1[0].VN NKF1[0].VE flow_vel_ef(OF,RFND,ATT).x flow_vel_ef(OF,RFND,ATT).y</expression>
  <expression>NKF1.VN NKF1.VE flow_vel_ef(OF,RFND,ATT).x flow_vel_ef(OF,RFND,ATT).y</expression>
 </graph>

 <graph name='Flow/GPS vel body'>
  <description></description>
  <expression>gps_vel_body(GPS,ATT).x (OF.flowY-OF.bodyY)*RFND.Dist1 gps_vel_body(GPS,ATT).y (OF.flowX-OF.bodyX)*RFND.Dist1*-1</expression>
  <expression>gps_vel_body(GPS,ATT).x (OF.flowY-OF.bodyY)*RFND[0].Dist gps_vel_body(GPS,ATT).y (OF.flowX-OF.bodyX)*RFND[0].Dist*-1</expression>
 </graph>

 <graph name='EKF/EKF3 Accel Offsets'>
  <description></description>
  <expression>XKF2.AX XKF2.AY XKF2.AZ</expression>
 </graph>

 <graph name='Quadplane/PID Tuning/PIQP'>
  <description></description>
  <expression>PIQP.FF PIQP.P PIQP.I PIQP.D</expression>
 </graph>

 <graph name='Quadplane/PID Tuning/PIQR'>
  <description></description>
  <expression>PIQR.FF PIQR.P PIQR.I PIQR.D</expression>
 </graph>

 <graph name='Quadplane/PID Tuning/PIQY'>
  <description></description>
  <expression>PIQY.FF PIQY.P PIQY.I PIQY.D</expression>
 </graph>

 <graph name='Quadplane/PID Tuning/PIQA'>
  <description></description>
  <expression>PIQA.P PIQA.I PIQA.D</expression>
 </graph>

 <graph name='Plane/PID Tuning/PIDR'>
  <description></description>
  <expression>PIDR.FF PIDR.P PIDR.I PIDR.D</expression>
 </graph>

 <graph name='Plane/PID Tuning/PIDP'>
  <description></description>
  <expression>PIDP.FF PIDP.P PIDP.I PIDP.D</expression>
 </graph>

 <graph name='Plane/PID Tuning/PIDS'>
  <description></description>
  <expression>PIDS.P PIDS.I PIDS.D</expression>
 </graph>

</graphs>
