{"category": 2, "response_fields": [{"type": {"category": 0, "kind": 1, "full_name": "saturated uint8", "cast_mode": 0, "value_range": [0, 255], "bitlen": 8}, "name": "error"}, {"type": {"full_name": "saturated uint8[<=127]", "category": 1, "value_type": {"category": 0, "kind": 1, "full_name": "saturated uint8", "cast_mode": 0, "value_range": [0, 255], "bitlen": 8}, "mode": 1, "max_size": 127}, "name": "optional_error_message"}], "kind": 0, "request_fields": [{"type": {"category": 0, "kind": 1, "full_name": "saturated uint8", "cast_mode": 0, "value_range": [0, 255], "bitlen": 8}, "name": "source_node_id"}, {"type": {"category": 2, "kind": 1, "get_min_bitlen": {}, "default_dtid": null, "get_max_bitlen": {}, "union": false, "fields": [{"type": {"full_name": "saturated uint8[<=200]", "category": 1, "value_type": {"category": 0, "kind": 1, "full_name": "saturated uint8", "cast_mode": 0, "value_range": [0, 255], "bitlen": 8}, "mode": 1, "max_size": 200}, "name": "path"}], "_data_type_signature": null, "version": null, "source_text": "#\n# Nested type.\n#\n# File system path in UTF8.\n#\n# The only valid separator is forward slash.\n#\n\nuint8 SEPARATOR = '/'\n\nuint8[<=200] path\n", "full_name": "uavcan.protocol.file.Path", "source_file": "C:\\Users\\michael\\Source\\Repos\\MissionPlanner\\ExtLibs\\UAVCAN\\dsdl\\uavcan\\protocol\\file\\Path.uavcan", "constants": [{"init_expression": "'/'", "type": {"category": 0, "kind": 1, "full_name": "saturated uint8", "cast_mode": 0, "value_range": [0, 255], "bitlen": 8}, "name": "SEPARATOR", "value": 47, "string_value": "47"}]}, "name": "image_file_remote_path"}], "default_dtid": 40, "request_constants": [], "get_min_bitlen_response": {}, "get_max_bitlen_response": {}, "request_union": false, "get_max_bitlen_request": {}, "_data_type_signature": null, "get_min_bitlen_request": {}, "version": null, "source_text": "#\n# This service initiates firmware update on a remote node.\n#\n# The node that is being updated (slave) will retrieve the firmware image file 'image_file_remote_path' from the node\n# 'source_node_id' using the file read service, then it will update the firmware and reboot.\n#\n# The slave can explicitly reject this request if it is not possible to update the firmware at the moment\n# (e.g. if the node is busy).\n#\n# If the slave node accepts this request, the initiator will get a response immediately, before the update process\n# actually begins.\n#\n# While the firmware is being updated, the slave should set its mode (uavcan.protocol.NodeStatus.mode) to\n# MODE_SOFTWARE_UPDATE.\n#\n\nuint8 source_node_id         # If this field is zero, the caller's Node ID will be used instead.\nPath image_file_remote_path\n\n---\n\n#\n# Other error codes may be added in the future.\n#\nuint8 ERROR_OK               = 0\nuint8 ERROR_INVALID_MODE     = 1    # Cannot perform the update in the current operating mode or state.\nuint8 ERROR_IN_PROGRESS      = 2    # Firmware update is already in progess, and the slave doesn't want to restart.\nuint8 ERROR_UNKNOWN          = 255\nuint8 error\n\nuint8[<128] optional_error_message   # Detailed description of the error.\n", "full_name": "uavcan.protocol.file.BeginFirmwareUpdate", "source_file": "C:\\Users\\michael\\Source\\Repos\\MissionPlanner\\ExtLibs\\UAVCAN\\dsdl\\uavcan\\protocol\\file\\40.BeginFirmwareUpdate.uavcan", "response_union": false, "response_constants": [{"init_expression": "0", "type": {"category": 0, "kind": 1, "full_name": "saturated uint8", "cast_mode": 0, "value_range": [0, 255], "bitlen": 8}, "name": "ERROR_OK", "value": 0, "string_value": "0"}, {"init_expression": "1", "type": {"category": 0, "kind": 1, "full_name": "saturated uint8", "cast_mode": 0, "value_range": [0, 255], "bitlen": 8}, "name": "ERROR_INVALID_MODE", "value": 1, "string_value": "1"}, {"init_expression": "2", "type": {"category": 0, "kind": 1, "full_name": "saturated uint8", "cast_mode": 0, "value_range": [0, 255], "bitlen": 8}, "name": "ERROR_IN_PROGRESS", "value": 2, "string_value": "2"}, {"init_expression": "255", "type": {"category": 0, "kind": 1, "full_name": "saturated uint8", "cast_mode": 0, "value_range": [0, 255], "bitlen": 8}, "name": "ERROR_UNKNOWN", "value": 255, "string_value": "255"}]}