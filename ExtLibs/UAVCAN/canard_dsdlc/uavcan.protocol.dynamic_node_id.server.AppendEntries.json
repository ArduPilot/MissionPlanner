{"category": 2, "response_fields": [{"type": {"category": 0, "kind": 1, "full_name": "saturated uint32", "cast_mode": 0, "value_range": [0, 4294967295], "bitlen": 32}, "name": "term"}, {"type": {"category": 0, "kind": 0, "full_name": "saturated bool", "cast_mode": 0, "value_range": [0, 1], "bitlen": 1}, "name": "success"}], "kind": 0, "request_fields": [{"type": {"category": 0, "kind": 1, "full_name": "saturated uint32", "cast_mode": 0, "value_range": [0, 4294967295], "bitlen": 32}, "name": "term"}, {"type": {"category": 0, "kind": 1, "full_name": "saturated uint32", "cast_mode": 0, "value_range": [0, 4294967295], "bitlen": 32}, "name": "prev_log_term"}, {"type": {"category": 0, "kind": 1, "full_name": "saturated uint8", "cast_mode": 0, "value_range": [0, 255], "bitlen": 8}, "name": "prev_log_index"}, {"type": {"category": 0, "kind": 1, "full_name": "saturated uint8", "cast_mode": 0, "value_range": [0, 255], "bitlen": 8}, "name": "leader_commit"}, {"type": {"full_name": "uavcan.protocol.dynamic_node_id.server.Entry[<=1]", "category": 1, "value_type": {"category": 2, "kind": 1, "get_min_bitlen": {}, "default_dtid": null, "get_max_bitlen": {}, "union": false, "fields": [{"type": {"category": 0, "kind": 1, "full_name": "saturated uint32", "cast_mode": 0, "value_range": [0, 4294967295], "bitlen": 32}, "name": "term"}, {"type": {"full_name": "saturated uint8[16]", "category": 1, "value_type": {"category": 0, "kind": 1, "full_name": "saturated uint8", "cast_mode": 0, "value_range": [0, 255], "bitlen": 8}, "mode": 0, "max_size": 16}, "name": "unique_id"}, {"type": {"bitlen": 1, "category": 3, "full_name": "void1"}, "name": null}, {"type": {"category": 0, "kind": 1, "full_name": "saturated uint7", "cast_mode": 0, "value_range": [0, 127], "bitlen": 7}, "name": "node_id"}], "_data_type_signature": null, "version": null, "source_text": "#\n# THIS DEFINITION IS SUBJECT TO CHANGE.\n#\n# One dynamic node ID allocation entry.\n# This type is a part of the Raft consensus algorithm.\n# Please refer to the specification for details.\n#\n\nuint32 term             # Refer to the Raft paper for explanation.\n\nuint8[16] unique_id     # Unique ID of this allocation.\n\nvoid1\nuint7 node_id           # Node ID of this allocation.\n", "full_name": "uavcan.protocol.dynamic_node_id.server.Entry", "source_file": "C:\\Users\\michael\\Source\\Repos\\MissionPlanner\\ExtLibs\\UAVCAN\\dsdl\\uavcan\\protocol\\dynamic_node_id\\server\\Entry.uavcan", "constants": []}, "mode": 1, "max_size": 1}, "name": "entries"}], "default_dtid": 30, "request_constants": [{"init_expression": "2000", "type": {"category": 0, "kind": 1, "full_name": "saturated uint16", "cast_mode": 0, "value_range": [0, 65535], "bitlen": 16}, "name": "DEFAULT_MIN_ELECTION_TIMEOUT_MS", "value": 2000, "string_value": "2000"}, {"init_expression": "4000", "type": {"category": 0, "kind": 1, "full_name": "saturated uint16", "cast_mode": 0, "value_range": [0, 65535], "bitlen": 16}, "name": "DEFAULT_MAX_ELECTION_TIMEOUT_MS", "value": 4000, "string_value": "4000"}], "get_min_bitlen_response": {}, "get_max_bitlen_response": {}, "request_union": false, "get_max_bitlen_request": {}, "_data_type_signature": null, "get_min_bitlen_request": {}, "version": null, "source_text": "#\n# THIS DEFINITION IS SUBJECT TO CHANGE.\n#\n# This type is a part of the Raft consensus algorithm.\n# Please refer to the specification for details.\n#\n\n#\n# Given min election timeout and cluster size, the maximum recommended request interval can be derived as follows:\n#\n#   max recommended request interval = (min election timeout) / 2 requests / (cluster size - 1)\n#\n# The equation assumes that the Leader requests one Follower at a time, so that there's at most one pending call\n# at any moment. Such behavior is optimal as it creates uniform bus load, but it is actually implementation-specific.\n# Obviously, request interval can be lower than that if needed, but higher values are not recommended as they may\n# cause Followers to initiate premature elections in case of intensive frame losses or delays.\n#\n# Real timeout is randomized in the range (MIN, MAX], according to the Raft paper.\n#\nuint16 DEFAULT_MIN_ELECTION_TIMEOUT_MS = 2000\nuint16 DEFAULT_MAX_ELECTION_TIMEOUT_MS = 4000\n\n#\n# Refer to the Raft paper for explanation.\n#\nuint32 term\nuint32 prev_log_term\nuint8 prev_log_index\nuint8 leader_commit\n\n#\n# Worst-case replication time per Follower can be computed as:\n#\n#   worst replication time = (127 log entries) * (2 trips of next_index) * (request interval per Follower)\n#\nEntry[<=1] entries\n\n---\n\n#\n# Refer to the Raft paper for explanation.\n#\nuint32 term\nbool success\n", "full_name": "uavcan.protocol.dynamic_node_id.server.AppendEntries", "source_file": "C:\\Users\\michael\\Source\\Repos\\MissionPlanner\\ExtLibs\\UAVCAN\\dsdl\\uavcan\\protocol\\dynamic_node_id\\server\\30.AppendEntries.uavcan", "response_union": false, "response_constants": []}