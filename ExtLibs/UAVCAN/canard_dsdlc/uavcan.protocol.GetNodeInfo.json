{"category": 2, "response_fields": [{"type": {"category": 2, "kind": 1, "get_min_bitlen": {}, "default_dtid": 341, "get_max_bitlen": {}, "union": false, "fields": [{"type": {"category": 0, "kind": 1, "full_name": "saturated uint32", "cast_mode": 0, "value_range": [0, 4294967295], "bitlen": 32}, "name": "uptime_sec"}, {"type": {"category": 0, "kind": 1, "full_name": "saturated uint2", "cast_mode": 0, "value_range": [0, 3], "bitlen": 2}, "name": "health"}, {"type": {"category": 0, "kind": 1, "full_name": "saturated uint3", "cast_mode": 0, "value_range": [0, 7], "bitlen": 3}, "name": "mode"}, {"type": {"category": 0, "kind": 1, "full_name": "saturated uint3", "cast_mode": 0, "value_range": [0, 7], "bitlen": 3}, "name": "sub_mode"}, {"type": {"category": 0, "kind": 1, "full_name": "saturated uint16", "cast_mode": 0, "value_range": [0, 65535], "bitlen": 16}, "name": "vendor_specific_status_code"}], "_data_type_signature": null, "version": null, "source_text": "#\n# Abstract node status information.\n#\n# Any UAVCAN node is required to publish this message periodically.\n#\n\n#\n# Publication period may vary within these limits.\n# It is NOT recommended to change it at run time.\n#\nuint16 MAX_BROADCASTING_PERIOD_MS = 1000\nuint16 MIN_BROADCASTING_PERIOD_MS = 2\n\n#\n# If a node fails to publish this message in this amount of time, it should be considered offline.\n#\nuint16 OFFLINE_TIMEOUT_MS = 3000\n\n#\n# Uptime counter should never overflow.\n# Other nodes may detect that a remote node has restarted when this value goes backwards.\n#\nuint32 uptime_sec\n\n#\n# Abstract node health.\n#\nuint2 HEALTH_OK         = 0     # The node is functioning properly.\nuint2 HEALTH_WARNING    = 1     # A critical parameter went out of range or the node encountered a minor failure.\nuint2 HEALTH_ERROR      = 2     # The node encountered a major failure.\nuint2 HEALTH_CRITICAL   = 3     # The node suffered a fatal malfunction.\nuint2 health\n\n#\n# Current mode.\n#\n# Mode OFFLINE can be actually reported by the node to explicitly inform other network\n# participants that the sending node is about to shutdown. In this case other nodes will not\n# have to wait OFFLINE_TIMEOUT_MS before they detect that the node is no longer available.\n#\n# Reserved values can be used in future revisions of the specification.\n#\nuint3 MODE_OPERATIONAL      = 0         # Normal operating mode.\nuint3 MODE_INITIALIZATION   = 1         # Initialization is in progress; this mode is entered immediately after startup.\nuint3 MODE_MAINTENANCE      = 2         # E.g. calibration, the bootloader is running, etc.\nuint3 MODE_SOFTWARE_UPDATE  = 3         # New software/firmware is being loaded.\nuint3 MODE_OFFLINE          = 7         # The node is no longer available.\nuint3 mode\n\n#\n# Not used currently, keep zero when publishing, ignore when receiving.\n#\nuint3 sub_mode\n\n#\n# Optional, vendor-specific node status code, e.g. a fault code or a status bitmask.\n#\nuint16 vendor_specific_status_code\n", "full_name": "uavcan.protocol.NodeStatus", "source_file": "C:\\Users\\michael\\Source\\Repos\\MissionPlanner\\ExtLibs\\UAVCAN\\dsdl\\uavcan\\protocol\\341.NodeStatus.uavcan", "constants": [{"init_expression": "1000", "type": {"category": 0, "kind": 1, "full_name": "saturated uint16", "cast_mode": 0, "value_range": [0, 65535], "bitlen": 16}, "name": "MAX_BROADCASTING_PERIOD_MS", "value": 1000, "string_value": "1000"}, {"init_expression": "2", "type": {"category": 0, "kind": 1, "full_name": "saturated uint16", "cast_mode": 0, "value_range": [0, 65535], "bitlen": 16}, "name": "MIN_BROADCASTING_PERIOD_MS", "value": 2, "string_value": "2"}, {"init_expression": "3000", "type": {"category": 0, "kind": 1, "full_name": "saturated uint16", "cast_mode": 0, "value_range": [0, 65535], "bitlen": 16}, "name": "OFFLINE_TIMEOUT_MS", "value": 3000, "string_value": "3000"}, {"init_expression": "0", "type": {"category": 0, "kind": 1, "full_name": "saturated uint2", "cast_mode": 0, "value_range": [0, 3], "bitlen": 2}, "name": "HEALTH_OK", "value": 0, "string_value": "0"}, {"init_expression": "1", "type": {"category": 0, "kind": 1, "full_name": "saturated uint2", "cast_mode": 0, "value_range": [0, 3], "bitlen": 2}, "name": "HEALTH_WARNING", "value": 1, "string_value": "1"}, {"init_expression": "2", "type": {"category": 0, "kind": 1, "full_name": "saturated uint2", "cast_mode": 0, "value_range": [0, 3], "bitlen": 2}, "name": "HEALTH_ERROR", "value": 2, "string_value": "2"}, {"init_expression": "3", "type": {"category": 0, "kind": 1, "full_name": "saturated uint2", "cast_mode": 0, "value_range": [0, 3], "bitlen": 2}, "name": "HEALTH_CRITICAL", "value": 3, "string_value": "3"}, {"init_expression": "0", "type": {"category": 0, "kind": 1, "full_name": "saturated uint3", "cast_mode": 0, "value_range": [0, 7], "bitlen": 3}, "name": "MODE_OPERATIONAL", "value": 0, "string_value": "0"}, {"init_expression": "1", "type": {"category": 0, "kind": 1, "full_name": "saturated uint3", "cast_mode": 0, "value_range": [0, 7], "bitlen": 3}, "name": "MODE_INITIALIZATION", "value": 1, "string_value": "1"}, {"init_expression": "2", "type": {"category": 0, "kind": 1, "full_name": "saturated uint3", "cast_mode": 0, "value_range": [0, 7], "bitlen": 3}, "name": "MODE_MAINTENANCE", "value": 2, "string_value": "2"}, {"init_expression": "3", "type": {"category": 0, "kind": 1, "full_name": "saturated uint3", "cast_mode": 0, "value_range": [0, 7], "bitlen": 3}, "name": "MODE_SOFTWARE_UPDATE", "value": 3, "string_value": "3"}, {"init_expression": "7", "type": {"category": 0, "kind": 1, "full_name": "saturated uint3", "cast_mode": 0, "value_range": [0, 7], "bitlen": 3}, "name": "MODE_OFFLINE", "value": 7, "string_value": "7"}]}, "name": "status"}, {"type": {"category": 2, "kind": 1, "get_min_bitlen": {}, "default_dtid": null, "get_max_bitlen": {}, "union": false, "fields": [{"type": {"category": 0, "kind": 1, "full_name": "saturated uint8", "cast_mode": 0, "value_range": [0, 255], "bitlen": 8}, "name": "major"}, {"type": {"category": 0, "kind": 1, "full_name": "saturated uint8", "cast_mode": 0, "value_range": [0, 255], "bitlen": 8}, "name": "minor"}, {"type": {"category": 0, "kind": 1, "full_name": "saturated uint8", "cast_mode": 0, "value_range": [0, 255], "bitlen": 8}, "name": "optional_field_flags"}, {"type": {"category": 0, "kind": 1, "full_name": "saturated uint32", "cast_mode": 0, "value_range": [0, 4294967295], "bitlen": 32}, "name": "vcs_commit"}, {"type": {"category": 0, "kind": 1, "full_name": "saturated uint64", "cast_mode": 0, "value_range": [0, 18446744073709551615], "bitlen": 64}, "name": "image_crc"}], "_data_type_signature": null, "version": null, "source_text": "#\n# Nested type.\n# Generic software version information.\n#\n\n#\n# Primary version numbers.\n# If both fields are set to zero, the version is considered unknown.\n#\nuint8 major\nuint8 minor\n\n#\n# This mask indicates which optional fields (see below) are set.\n#\nuint8 OPTIONAL_FIELD_FLAG_VCS_COMMIT = 1\nuint8 OPTIONAL_FIELD_FLAG_IMAGE_CRC  = 2\nuint8 optional_field_flags\n\n#\n# VCS commit hash or revision number, e.g. git short commit hash. Optional.\n#\nuint32 vcs_commit\n\n#\n# The value of an arbitrary hash function applied to the firmware image.\n# This field is used to detect whether the firmware running on the node is EXACTLY THE SAME\n# as a certain specific revision. This field provides the absolute identity guarantee, unlike\n# the version fields above, which can be the same for different builds of the firmware.\n#\n# The exact hash function and the methods of its application are implementation defined.\n# However, implementations are recommended to adhere to the following guidelines,\n# fully or partially:\n#\n#   - The hash function should be CRC-64-WE, the same that is used for computing DSDL signatures.\n#\n#   - The hash function should be applied to the entire application image padded to 8 bytes.\n#\n#   - If the computed image CRC is stored within the firmware image itself, the value of\n#     the hash function becomes ill-defined, because it becomes recursively dependent on itself.\n#     In order to circumvent this issue, while computing or checking the CRC, its value stored\n#     within the image should be zeroed out.\n#\nuint64 image_crc\n", "full_name": "uavcan.protocol.SoftwareVersion", "source_file": "C:\\Users\\michael\\Source\\Repos\\MissionPlanner\\ExtLibs\\UAVCAN\\dsdl\\uavcan\\protocol\\SoftwareVersion.uavcan", "constants": [{"init_expression": "1", "type": {"category": 0, "kind": 1, "full_name": "saturated uint8", "cast_mode": 0, "value_range": [0, 255], "bitlen": 8}, "name": "OPTIONAL_FIELD_FLAG_VCS_COMMIT", "value": 1, "string_value": "1"}, {"init_expression": "2", "type": {"category": 0, "kind": 1, "full_name": "saturated uint8", "cast_mode": 0, "value_range": [0, 255], "bitlen": 8}, "name": "OPTIONAL_FIELD_FLAG_IMAGE_CRC", "value": 2, "string_value": "2"}]}, "name": "software_version"}, {"type": {"category": 2, "kind": 1, "get_min_bitlen": {}, "default_dtid": null, "get_max_bitlen": {}, "union": false, "fields": [{"type": {"category": 0, "kind": 1, "full_name": "saturated uint8", "cast_mode": 0, "value_range": [0, 255], "bitlen": 8}, "name": "major"}, {"type": {"category": 0, "kind": 1, "full_name": "saturated uint8", "cast_mode": 0, "value_range": [0, 255], "bitlen": 8}, "name": "minor"}, {"type": {"full_name": "saturated uint8[16]", "category": 1, "value_type": {"category": 0, "kind": 1, "full_name": "saturated uint8", "cast_mode": 0, "value_range": [0, 255], "bitlen": 8}, "mode": 0, "max_size": 16}, "name": "unique_id"}, {"type": {"full_name": "saturated uint8[<=255]", "category": 1, "value_type": {"category": 0, "kind": 1, "full_name": "saturated uint8", "cast_mode": 0, "value_range": [0, 255], "bitlen": 8}, "mode": 1, "max_size": 255}, "name": "certificate_of_authenticity"}], "_data_type_signature": null, "version": null, "source_text": "#\n# Nested type.\n# Generic hardware version information.\n# These values should remain unchanged for the device's lifetime.\n#\n\n#\n# Hardware version code.\n#\nuint8 major\nuint8 minor\n\n#\n# Unique ID is a 128 bit long sequence that is globally unique for each node.\n# All zeros is not a valid UID.\n# If filled with zeros, assume that the value is undefined.\n#\nuint8[16] unique_id\n\n#\n# Certificate of authenticity (COA) of the hardware, 255 bytes max.\n#\nuint8[<=255] certificate_of_authenticity\n", "full_name": "uavcan.protocol.HardwareVersion", "source_file": "C:\\Users\\michael\\Source\\Repos\\MissionPlanner\\ExtLibs\\UAVCAN\\dsdl\\uavcan\\protocol\\HardwareVersion.uavcan", "constants": []}, "name": "hardware_version"}, {"type": {"full_name": "saturated uint8[<=80]", "category": 1, "value_type": {"category": 0, "kind": 1, "full_name": "saturated uint8", "cast_mode": 0, "value_range": [0, 255], "bitlen": 8}, "mode": 1, "max_size": 80}, "name": "name"}], "kind": 0, "request_fields": [], "default_dtid": 1, "request_constants": [], "get_min_bitlen_response": {}, "get_max_bitlen_response": {}, "request_union": false, "get_max_bitlen_request": {}, "_data_type_signature": null, "get_min_bitlen_request": {}, "version": null, "source_text": "#\n# Full node info request.\n# Note that all fields of the response section are byte-aligned.\n#\n\n---\n\n#\n# Current node status\n#\nNodeStatus status\n\n#\n# Version information shall not be changed while the node is running.\n#\nSoftwareVersion software_version\nHardwareVersion hardware_version\n\n#\n# Human readable non-empty ASCII node name.\n# Node name shall not be changed while the node is running.\n# Empty string is not a valid node name.\n# Allowed characters are: a-z (lowercase ASCII letters) 0-9 (decimal digits) . (dot) - (dash) _ (underscore).\n# Node name is a reversed internet domain name (like Java packages), e.g. \"com.manufacturer.project.product\".\n#\nuint8[<=80] name\n", "full_name": "uavcan.protocol.GetNodeInfo", "source_file": "C:\\Users\\michael\\Source\\Repos\\MissionPlanner\\ExtLibs\\UAVCAN\\dsdl\\uavcan\\protocol\\1.GetNodeInfo.uavcan", "response_union": false, "response_constants": []}