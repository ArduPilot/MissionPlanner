{"category": 2, "response_fields": [{"type": {"category": 2, "kind": 1, "get_min_bitlen": {}, "default_dtid": null, "get_max_bitlen": {}, "union": false, "fields": [{"type": {"category": 0, "kind": 2, "full_name": "saturated int16", "cast_mode": 0, "value_range": [-32768, 32767], "bitlen": 16}, "name": "value"}], "_data_type_signature": null, "version": null, "source_text": "#\n# Nested type.\n# File operation result code.\n#\n\nint16 OK                = 0\nint16 UNKNOWN_ERROR     = 32767\n\nint16 NOT_FOUND         = 2\nint16 IO_ERROR          = 5\nint16 ACCESS_DENIED     = 13\nint16 IS_DIRECTORY      = 21 # I.e. attempt to read/write on a path that points to a directory\nint16 INVALID_VALUE     = 22 # E.g. file name is not valid for the target file system\nint16 FILE_TOO_LARGE    = 27\nint16 OUT_OF_SPACE      = 28\nint16 NOT_IMPLEMENTED   = 38\n\nint16 value\n", "full_name": "uavcan.protocol.file.Error", "source_file": "C:\\Users\\michael\\Source\\Repos\\MissionPlanner\\ExtLibs\\UAVCAN\\dsdl\\uavcan\\protocol\\file\\Error.uavcan", "constants": [{"init_expression": "0", "type": {"category": 0, "kind": 2, "full_name": "saturated int16", "cast_mode": 0, "value_range": [-32768, 32767], "bitlen": 16}, "name": "OK", "value": 0, "string_value": "0"}, {"init_expression": "32767", "type": {"category": 0, "kind": 2, "full_name": "saturated int16", "cast_mode": 0, "value_range": [-32768, 32767], "bitlen": 16}, "name": "UNKNOWN_ERROR", "value": 32767, "string_value": "32767"}, {"init_expression": "2", "type": {"category": 0, "kind": 2, "full_name": "saturated int16", "cast_mode": 0, "value_range": [-32768, 32767], "bitlen": 16}, "name": "NOT_FOUND", "value": 2, "string_value": "2"}, {"init_expression": "5", "type": {"category": 0, "kind": 2, "full_name": "saturated int16", "cast_mode": 0, "value_range": [-32768, 32767], "bitlen": 16}, "name": "IO_ERROR", "value": 5, "string_value": "5"}, {"init_expression": "13", "type": {"category": 0, "kind": 2, "full_name": "saturated int16", "cast_mode": 0, "value_range": [-32768, 32767], "bitlen": 16}, "name": "ACCESS_DENIED", "value": 13, "string_value": "13"}, {"init_expression": "21", "type": {"category": 0, "kind": 2, "full_name": "saturated int16", "cast_mode": 0, "value_range": [-32768, 32767], "bitlen": 16}, "name": "IS_DIRECTORY", "value": 21, "string_value": "21"}, {"init_expression": "22", "type": {"category": 0, "kind": 2, "full_name": "saturated int16", "cast_mode": 0, "value_range": [-32768, 32767], "bitlen": 16}, "name": "INVALID_VALUE", "value": 22, "string_value": "22"}, {"init_expression": "27", "type": {"category": 0, "kind": 2, "full_name": "saturated int16", "cast_mode": 0, "value_range": [-32768, 32767], "bitlen": 16}, "name": "FILE_TOO_LARGE", "value": 27, "string_value": "27"}, {"init_expression": "28", "type": {"category": 0, "kind": 2, "full_name": "saturated int16", "cast_mode": 0, "value_range": [-32768, 32767], "bitlen": 16}, "name": "OUT_OF_SPACE", "value": 28, "string_value": "28"}, {"init_expression": "38", "type": {"category": 0, "kind": 2, "full_name": "saturated int16", "cast_mode": 0, "value_range": [-32768, 32767], "bitlen": 16}, "name": "NOT_IMPLEMENTED", "value": 38, "string_value": "38"}]}, "name": "error"}, {"type": {"category": 2, "kind": 1, "get_min_bitlen": {}, "default_dtid": null, "get_max_bitlen": {}, "union": false, "fields": [{"type": {"category": 0, "kind": 1, "full_name": "saturated uint8", "cast_mode": 0, "value_range": [0, 255], "bitlen": 8}, "name": "flags"}], "_data_type_signature": null, "version": null, "source_text": "#\n# Nested type.\n# Represents the type of the file system entry (e.g. file or directory).\n# If such entry does not exist, 'flags' must be set to zero.\n#\n\nuint8 FLAG_FILE      = 1        # Excludes FLAG_DIRECTORY\nuint8 FLAG_DIRECTORY = 2        # Excludes FLAG_FILE\nuint8 FLAG_SYMLINK   = 4        # Link target is either FLAG_FILE or FLAG_DIRECTORY\nuint8 FLAG_READABLE  = 8\nuint8 FLAG_WRITEABLE = 16\n\nuint8 flags\n", "full_name": "uavcan.protocol.file.EntryType", "source_file": "C:\\Users\\michael\\Source\\Repos\\MissionPlanner\\ExtLibs\\UAVCAN\\dsdl\\uavcan\\protocol\\file\\EntryType.uavcan", "constants": [{"init_expression": "1", "type": {"category": 0, "kind": 1, "full_name": "saturated uint8", "cast_mode": 0, "value_range": [0, 255], "bitlen": 8}, "name": "FLAG_FILE", "value": 1, "string_value": "1"}, {"init_expression": "2", "type": {"category": 0, "kind": 1, "full_name": "saturated uint8", "cast_mode": 0, "value_range": [0, 255], "bitlen": 8}, "name": "FLAG_DIRECTORY", "value": 2, "string_value": "2"}, {"init_expression": "4", "type": {"category": 0, "kind": 1, "full_name": "saturated uint8", "cast_mode": 0, "value_range": [0, 255], "bitlen": 8}, "name": "FLAG_SYMLINK", "value": 4, "string_value": "4"}, {"init_expression": "8", "type": {"category": 0, "kind": 1, "full_name": "saturated uint8", "cast_mode": 0, "value_range": [0, 255], "bitlen": 8}, "name": "FLAG_READABLE", "value": 8, "string_value": "8"}, {"init_expression": "16", "type": {"category": 0, "kind": 1, "full_name": "saturated uint8", "cast_mode": 0, "value_range": [0, 255], "bitlen": 8}, "name": "FLAG_WRITEABLE", "value": 16, "string_value": "16"}]}, "name": "entry_type"}, {"type": {"category": 2, "kind": 1, "get_min_bitlen": {}, "default_dtid": null, "get_max_bitlen": {}, "union": false, "fields": [{"type": {"full_name": "saturated uint8[<=200]", "category": 1, "value_type": {"category": 0, "kind": 1, "full_name": "saturated uint8", "cast_mode": 0, "value_range": [0, 255], "bitlen": 8}, "mode": 1, "max_size": 200}, "name": "path"}], "_data_type_signature": null, "version": null, "source_text": "#\n# Nested type.\n#\n# File system path in UTF8.\n#\n# The only valid separator is forward slash.\n#\n\nuint8 SEPARATOR = '/'\n\nuint8[<=200] path\n", "full_name": "uavcan.protocol.file.Path", "source_file": "C:\\Users\\michael\\Source\\Repos\\MissionPlanner\\ExtLibs\\UAVCAN\\dsdl\\uavcan\\protocol\\file\\Path.uavcan", "constants": [{"init_expression": "'/'", "type": {"category": 0, "kind": 1, "full_name": "saturated uint8", "cast_mode": 0, "value_range": [0, 255], "bitlen": 8}, "name": "SEPARATOR", "value": 47, "string_value": "47"}]}, "name": "entry_full_path"}], "kind": 0, "request_fields": [{"type": {"category": 0, "kind": 1, "full_name": "saturated uint32", "cast_mode": 0, "value_range": [0, 4294967295], "bitlen": 32}, "name": "entry_index"}, {"type": {"category": 2, "kind": 1, "get_min_bitlen": {}, "default_dtid": null, "get_max_bitlen": {}, "union": false, "fields": [{"type": {"full_name": "saturated uint8[<=200]", "category": 1, "value_type": {"category": 0, "kind": 1, "full_name": "saturated uint8", "cast_mode": 0, "value_range": [0, 255], "bitlen": 8}, "mode": 1, "max_size": 200}, "name": "path"}], "_data_type_signature": null, "version": null, "source_text": "#\n# Nested type.\n#\n# File system path in UTF8.\n#\n# The only valid separator is forward slash.\n#\n\nuint8 SEPARATOR = '/'\n\nuint8[<=200] path\n", "full_name": "uavcan.protocol.file.Path", "source_file": "C:\\Users\\michael\\Source\\Repos\\MissionPlanner\\ExtLibs\\UAVCAN\\dsdl\\uavcan\\protocol\\file\\Path.uavcan", "constants": [{"init_expression": "'/'", "type": {"category": 0, "kind": 1, "full_name": "saturated uint8", "cast_mode": 0, "value_range": [0, 255], "bitlen": 8}, "name": "SEPARATOR", "value": 47, "string_value": "47"}]}, "name": "directory_path"}], "default_dtid": 46, "request_constants": [], "get_min_bitlen_response": {}, "get_max_bitlen_response": {}, "request_union": false, "get_max_bitlen_request": {}, "_data_type_signature": null, "get_min_bitlen_request": {}, "version": null, "source_text": "#\n# This service can be used to retrieve remote directory listing, one entry per request.\n#\n# The client should query each entry independently, iterating 'entry_index' from 0 until the last entry is passed,\n# in which case the server will report that there is no such entry (via the fields 'entry_type' and 'error').\n#\n# The entry_index shall be applied to the ordered list of directory entries (e.g. alphabetically ordered). The exact\n# sorting criteria does not matter as long as it provides the same ordering for subsequent service calls.\n#\n\nuint32 entry_index\n\nPath directory_path\n\n---\n\nError error\n\nEntryType entry_type\n\nPath entry_full_path  # Ignored/Empty if such entry does not exist.\n", "full_name": "uavcan.protocol.file.GetDirectoryEntryInfo", "source_file": "C:\\Users\\michael\\Source\\Repos\\MissionPlanner\\ExtLibs\\UAVCAN\\dsdl\\uavcan\\protocol\\file\\46.GetDirectoryEntryInfo.uavcan", "response_union": false, "response_constants": []}