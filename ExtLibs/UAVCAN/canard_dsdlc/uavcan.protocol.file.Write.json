{"category": 2, "response_fields": [{"type": {"category": 2, "kind": 1, "get_min_bitlen": {}, "default_dtid": null, "get_max_bitlen": {}, "union": false, "fields": [{"type": {"category": 0, "kind": 2, "full_name": "saturated int16", "cast_mode": 0, "value_range": [-32768, 32767], "bitlen": 16}, "name": "value"}], "_data_type_signature": null, "version": null, "source_text": "#\n# Nested type.\n# File operation result code.\n#\n\nint16 OK                = 0\nint16 UNKNOWN_ERROR     = 32767\n\nint16 NOT_FOUND         = 2\nint16 IO_ERROR          = 5\nint16 ACCESS_DENIED     = 13\nint16 IS_DIRECTORY      = 21 # I.e. attempt to read/write on a path that points to a directory\nint16 INVALID_VALUE     = 22 # E.g. file name is not valid for the target file system\nint16 FILE_TOO_LARGE    = 27\nint16 OUT_OF_SPACE      = 28\nint16 NOT_IMPLEMENTED   = 38\n\nint16 value\n", "full_name": "uavcan.protocol.file.Error", "source_file": "C:\\Users\\michael\\Source\\Repos\\MissionPlanner\\ExtLibs\\UAVCAN\\dsdl\\uavcan\\protocol\\file\\Error.uavcan", "constants": [{"init_expression": "0", "type": {"category": 0, "kind": 2, "full_name": "saturated int16", "cast_mode": 0, "value_range": [-32768, 32767], "bitlen": 16}, "name": "OK", "value": 0, "string_value": "0"}, {"init_expression": "32767", "type": {"category": 0, "kind": 2, "full_name": "saturated int16", "cast_mode": 0, "value_range": [-32768, 32767], "bitlen": 16}, "name": "UNKNOWN_ERROR", "value": 32767, "string_value": "32767"}, {"init_expression": "2", "type": {"category": 0, "kind": 2, "full_name": "saturated int16", "cast_mode": 0, "value_range": [-32768, 32767], "bitlen": 16}, "name": "NOT_FOUND", "value": 2, "string_value": "2"}, {"init_expression": "5", "type": {"category": 0, "kind": 2, "full_name": "saturated int16", "cast_mode": 0, "value_range": [-32768, 32767], "bitlen": 16}, "name": "IO_ERROR", "value": 5, "string_value": "5"}, {"init_expression": "13", "type": {"category": 0, "kind": 2, "full_name": "saturated int16", "cast_mode": 0, "value_range": [-32768, 32767], "bitlen": 16}, "name": "ACCESS_DENIED", "value": 13, "string_value": "13"}, {"init_expression": "21", "type": {"category": 0, "kind": 2, "full_name": "saturated int16", "cast_mode": 0, "value_range": [-32768, 32767], "bitlen": 16}, "name": "IS_DIRECTORY", "value": 21, "string_value": "21"}, {"init_expression": "22", "type": {"category": 0, "kind": 2, "full_name": "saturated int16", "cast_mode": 0, "value_range": [-32768, 32767], "bitlen": 16}, "name": "INVALID_VALUE", "value": 22, "string_value": "22"}, {"init_expression": "27", "type": {"category": 0, "kind": 2, "full_name": "saturated int16", "cast_mode": 0, "value_range": [-32768, 32767], "bitlen": 16}, "name": "FILE_TOO_LARGE", "value": 27, "string_value": "27"}, {"init_expression": "28", "type": {"category": 0, "kind": 2, "full_name": "saturated int16", "cast_mode": 0, "value_range": [-32768, 32767], "bitlen": 16}, "name": "OUT_OF_SPACE", "value": 28, "string_value": "28"}, {"init_expression": "38", "type": {"category": 0, "kind": 2, "full_name": "saturated int16", "cast_mode": 0, "value_range": [-32768, 32767], "bitlen": 16}, "name": "NOT_IMPLEMENTED", "value": 38, "string_value": "38"}]}, "name": "error"}], "kind": 0, "request_fields": [{"type": {"category": 0, "kind": 1, "full_name": "saturated uint40", "cast_mode": 0, "value_range": [0, 1099511627775], "bitlen": 40}, "name": "offset"}, {"type": {"category": 2, "kind": 1, "get_min_bitlen": {}, "default_dtid": null, "get_max_bitlen": {}, "union": false, "fields": [{"type": {"full_name": "saturated uint8[<=200]", "category": 1, "value_type": {"category": 0, "kind": 1, "full_name": "saturated uint8", "cast_mode": 0, "value_range": [0, 255], "bitlen": 8}, "mode": 1, "max_size": 200}, "name": "path"}], "_data_type_signature": null, "version": null, "source_text": "#\n# Nested type.\n#\n# File system path in UTF8.\n#\n# The only valid separator is forward slash.\n#\n\nuint8 SEPARATOR = '/'\n\nuint8[<=200] path\n", "full_name": "uavcan.protocol.file.Path", "source_file": "C:\\Users\\michael\\Source\\Repos\\MissionPlanner\\ExtLibs\\UAVCAN\\dsdl\\uavcan\\protocol\\file\\Path.uavcan", "constants": [{"init_expression": "'/'", "type": {"category": 0, "kind": 1, "full_name": "saturated uint8", "cast_mode": 0, "value_range": [0, 255], "bitlen": 8}, "name": "SEPARATOR", "value": 47, "string_value": "47"}]}, "name": "path"}, {"type": {"full_name": "saturated uint8[<=192]", "category": 1, "value_type": {"category": 0, "kind": 1, "full_name": "saturated uint8", "cast_mode": 0, "value_range": [0, 255], "bitlen": 8}, "mode": 1, "max_size": 192}, "name": "data"}], "default_dtid": 49, "request_constants": [], "get_min_bitlen_response": {}, "get_max_bitlen_response": {}, "request_union": false, "get_max_bitlen_request": {}, "_data_type_signature": null, "get_min_bitlen_request": {}, "version": null, "source_text": "#\n# Write into a remote file.\n# The server shall place the contents of the field 'data' into the file pointed by 'path' at the offset specified by\n# the field 'offset'.\n#\n# When writing a file, the client should repeatedly call this service with data while advancing offset until the file\n# is written completely. When write is complete, the client shall call the service one last time, with the offset\n# set to the size of the file and with the data field empty, which will signal the server that the write operation is\n# complete.\n#\n# When the write operation is complete, the server shall truncate the resulting file past the specified offset.\n#\n# Server implementation advice:\n# It is recommended to implement proper handling of concurrent writes to the same file from different clients, for\n# example by means of creating a staging area for uncompleted writes (like FTP servers do).\n#\n\nuint40 offset\n\nPath path\n\nuint8[<=192] data\n\n---\n\nError error\n", "full_name": "uavcan.protocol.file.Write", "source_file": "C:\\Users\\michael\\Source\\Repos\\MissionPlanner\\ExtLibs\\UAVCAN\\dsdl\\uavcan\\protocol\\file\\49.Write.uavcan", "response_union": false, "response_constants": []}