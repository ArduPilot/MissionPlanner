<graphs>
  <graph name="Speed/Ground vs Air Speed">
    <expression>VFR_HUD.groundspeed VFR_HUD.airspeed</expression>
    <expression>GPS.Spd ARSP.Airspeed</expression>
    <description>
      This shows the ground speed of the vehicle versus its air speed
    </description>
  </graph>

  <graph name="Speed/Ground Speed">
    <expression>VFR_HUD.groundspeed</expression>
    <expression>GPS.Spd</expression>
    <description>
      This shows the ground speed of the vehicle
    </description>
  </graph>
  
  <graph name='Attitude/Roll and Pitch'>
    <description>Roll and Pitch</description>
    <expression>degrees(ATTITUDE.roll) degrees(ATTITUDE.pitch)</expression>
    <expression>ATT.Roll ATT.Pitch</expression>
  </graph>

  <graph name='Attitude/RP Comparison'>
    <description>Roll and pitch comparison between primary and secondary attitude estimator</description>
    <expression>degrees(ATTITUDE.roll) degrees(ATTITUDE.pitch) degrees(AHRS2.roll) degrees(AHRS2.pitch)</expression>
    <expression>ATT.Roll ATT.Pitch AHR2.Roll AHR2.Pitch</expression>
  </graph>
  
  <graph name='Attitude/Attitude Control'>
  <description>Desired versus achieved roll and pitch. This shows you how well the attitude controller are for your aircraft. In a well tuned aircraft the desired and achieved roll and pitch should match to within a couple of degrees for any portion of the flight where stabilisation is enabled.</description>
    <expression>NAV_CONTROLLER_OUTPUT.nav_roll NAV_CONTROLLER_OUTPUT.nav_pitch degrees(ATTITUDE.roll) degrees(ATTITUDE.pitch)</expression>
    <expression>ATT.DesRoll ATT.Roll ATT.DesPitch ATT.Pitch</expression>
    <expression>CTUN.NavRoll CTUN.Roll CTUN.NavPitch CTUN.Pitch</expression>
  </graph>

  <graph name='Sensors/Accelerometer/Accelerometers'>
    <description>Accelerometer Output</description>
    <expression>RAW_IMU.xacc*9.81*0.001 RAW_IMU.yacc*9.81*0.001 RAW_IMU.zacc*9.81*0.001 gravity(RAW_IMU)</expression>
    <expression>IMU.AccX IMU.AccY IMU.AccZ sqrt(IMU.AccX**2+IMU.AccY**2+IMU.AccZ**2)</expression>
  </graph>

  <graph name='Sensors/Accelerometer/Accelerometer(2)'>
    <description>Accelerometer Two Output</description>
    <expression>SCALED_IMU2.xacc*9.81*0.001 SCALED_IMU2.yacc*9.81*0.001 SCALED_IMU2.zacc*9.81*0.001</expression>
    <expression>IMU2.AccX IMU2.AccY IMU2.AccZ sqrt(IMU2.AccX**2+IMU2.AccY**2+IMU2.AccZ**2)</expression>
  </graph>

  <graph name='Sensors/Accelerometer/Accelerometer(3)'>
    <description>Accelerometer Three Output</description>
    <expression>SCALED_IMU3.xacc*9.81*0.001 SCALED_IMU3.yacc*9.81*0.001 SCALED_IMU3.zacc*9.81*0.001</expression>
    <expression>IMU3.AccX IMU3.AccY IMU3.AccZ sqrt(IMU3.AccX**2+IMU3.AccY**2+IMU3.AccZ**2)</expression>
  </graph>
  
  <graph name='Sensors/Accelerometer/Accelerometer Comparison'>
    <description>Accelerometer Comparison</description>
    <expression>
      RAW_IMU.xacc*9.81*0.001 RAW_IMU.yacc*9.81*0.001 RAW_IMU.zacc*9.81*0.001
      SCALED_IMU2.xacc*9.81*0.001 SCALED_IMU2.yacc*9.81*0.001 SCALED_IMU2.zacc*9.81*0.001
      SCALED_IMU3.xacc*9.81*0.001 SCALED_IMU3.yacc*9.81*0.001 SCALED_IMU3.zacc*9.81*0.001
    </expression>
    <expression>
      RAW_IMU.xacc*9.81*0.001 RAW_IMU.yacc*9.81*0.001 RAW_IMU.zacc*9.81*0.001
      SCALED_IMU2.xacc*9.81*0.001 SCALED_IMU2.yacc*9.81*0.001 SCALED_IMU2.zacc*9.81*0.001
    </expression>
    <expression>IMU.AccX IMU.AccY IMU.AccZ IMU2.AccX IMU2.AccY IMU2.AccZ IMU3.AccX IMU3.AccY IMU3.AccZ</expression>
    <expression>IMU.AccX IMU.AccY IMU.AccZ IMU2.AccX IMU2.AccY IMU2.AccZ</expression>
  </graph>

  <graph name='Sensors/Gyroscope/Gyros'>
    <description>Gyroscope Output</description>
    <expression>degrees(RAW_IMU.xgyro*0.001) degrees(RAW_IMU.ygyro*0.001) degrees(RAW_IMU.zgyro*0.001)</expression>
    <expression>IMU.GyrX IMU.GyrY IMU.GyrZ</expression>
  </graph>

  <graph name='Sensors/Gyroscope/Gyros(2)'>
    <description>Gyroscope Two Output</description>
    <expression>degrees(SCALED_IMU2.xgyro*0.001) degrees(SCALED_IMU2.ygyro*0.001) degrees(SCALED_IMU2.zgyro*0.001)</expression>
    <expression>IMU2.GyrX IMU2.GyrY IMU2.GyrZ</expression>
  </graph>

  <graph name='Sensors/Gyroscope/Gyros(3)'>
    <description>Gyroscope Three Output</description>
    <expression>degrees(SCALED_IMU3.xgyro*0.001) degrees(SCALED_IMU3.ygyro*0.001) degrees(SCALED_IMU3.zgyro*0.001)</expression>
    <expression>IMU3.GyrX IMU3.GyrY IMU3.GyrZ</expression>
  </graph>

  <graph name='Sensors/Gyroscope/Gyro Comparison'>
    <description>Gyroscope Comparison</description>
    <expression>
      degrees(RAW_IMU.xgyro*0.001) degrees(RAW_IMU.ygyro*0.001) degrees(RAW_IMU.zgyro*0.001)
      degrees(SCALED_IMU2.xgyro*0.001) degrees(SCALED_IMU2.ygyro*0.001) degrees(SCALED_IMU2.zgyro*0.001)
      degrees(SCALED_IMU3.xgyro*0.001) degrees(SCALED_IMU3.ygyro*0.001) degrees(SCALED_IMU3.zgyro*0.001)
    </expression>
    <expression>
      degrees(RAW_IMU.xgyro*0.001) degrees(RAW_IMU.ygyro*0.001) degrees(RAW_IMU.zgyro*0.001)
      degrees(SCALED_IMU2.xgyro*0.001) degrees(SCALED_IMU2.ygyro*0.001) degrees(SCALED_IMU2.zgyro*0.001)
    </expression>
    <expression>
      IMU.GyrX IMU.GyrY IMU.GyrZ
      IMU2.GyrX IMU2.GyrY IMU2.GyrZ
      IMU3.GyrX IMU3.GyrY IMU3.GyrZ
    </expression>
    <expression>
      IMU.GyrX IMU.GyrY IMU.GyrZ
      IMU2.GyrX IMU2.GyrY IMU2.GyrZ
    </expression>
  </graph>

  <graph name='Sensors/Barometer/Barometer'>
    <description>Barometer</description>
    <expression>altitude(SCALED_PRESSURE) SCALED_PRESSURE.temperature*0.01:2</expression>
    <expression>BARO.Alt BARO.Temp:2</expression>
  </graph>

  <graph name='Sensors/Barometer/Barometer(2)'>
    <description>Barometric Altitude</description>
    <expression>altitude(SCALED_PRESSURE2) SCALED_PRESSURE2.temperature*0.01:2</expression>
    <expression>BAR2.Alt BAR2.Temp:2</expression>
  </graph>

  <graph name='Sensors/Barometer/Barometer(3)'>
    <description>Barometric Altitude</description>
    <expression>altitude(SCALED_PRESSURE3) SCALED_PRESSURE3.temperature*0.01:2</expression>
    <expression>BAR3.Alt BAR3.Temp:2</expression>
  </graph>

  <graph name='Sensors/Barometer/Barometer Comparison'>
    <description>Barometer Comparison</description>
    <expression>
      altitude(SCALED_PRESSURE) SCALED_PRESSURE.temperature*0.01:2
      altitude(SCALED_PRESSURE2) SCALED_PRESSURE2.temperature*0.01:2
      altitude(SCALED_PRESSURE3) SCALED_PRESSURE3.temperature*0.01:2
    </expression>
    <expression>
      altitude(SCALED_PRESSURE) SCALED_PRESSURE.temperature*0.01:2
      altitude(SCALED_PRESSURE2) SCALED_PRESSURE2.temperature*0.01:2
    </expression>
    <expression>
      BARO.Alt BARO.Temp:2
      BAR2.Alt BAR2.Temp:2
      BAR3.Alt BAR3.Temp:2
    </expression>
    <expression>
      BARO.Alt BARO.Temp:2
      BAR2.Alt BAR2.Temp:2
    </expression>
  </graph>

  <graph name='Sensors/Barometer/Barometric Pressure'>
    <description>Barometric Pressure</description>
    <expression>SCALED_PRESSURE.press_abs</expression>
    <expression>BARO.Press</expression>
  </graph>

  <graph name='Sensors/Compass/Compass'>
    <description>Primary Compass</description>
    <expression>RAW_IMU.xmag RAW_IMU.ymag RAW_IMU.zmag mag_field(RAW_IMU)</expression>
    <expression>MAG.MagX MAG.MagY MAG.MagZ sqrt(MAG.MagX**2+MAG.MagY**2+MAG.MagZ**2)</expression>
  </graph>

  <graph name='Sensors/Compass/Compass(2)'>
    <description>Second Compass</description>
    <expression>SCALED_IMU2.xmag SCALED_IMU2.ymag SCALED_IMU2.zmag mag_field(SCALED_IMU2)</expression>
    <expression>MAG2.MagX MAG2.MagY MAG2.MagZ sqrt(MAG2.MagX**2+MAG2.MagY**2+MAG2.MagZ**2)</expression>
  </graph>

  <graph name='Sensors/Compass/Compass(3)'>
    <description>Third Compass</description>
    <expression>SCALED_IMU3.xmag SCALED_IMU3.ymag SCALED_IMU3.zmag mag_field(SCALED_IMU2)</expression>
    <expression>MAG3.MagX MAG3.MagY MAG3.MagZ sqrt(MAG3.MagX**2+MAG3.MagY**2+MAG3.MagZ**2)</expression>
  </graph>

  <graph name='Sensors/Compass/Compass vs Yaw'>
    <description>Primary Compass vs Yaw</description>
    <expression>mag_heading(RAW_IMU,ATTITUDE) degrees(ATTITUDE.yaw)</expression>
    <expression>mag_heading_df(MAG,ATT) ATT.Yaw</expression>
  </graph>

  <graph name='Servos/Servos 1-4'>
    <description>First 4 servo outputs</description>
    <expression>
      SERVO_OUTPUT_RAW.servo1_raw SERVO_OUTPUT_RAW.servo2_raw SERVO_OUTPUT_RAW.servo3_raw SERVO_OUTPUT_RAW.servo4_raw
    </expression>
    <expression>
      RCOU.Ch1 RCOU.Ch2 RCOU.Ch3 RCOU.Ch4
    </expression>
    <expression>
      RCOU.C1 RCOU.C2 RCOU.C3 RCOU.C4
    </expression>
  </graph>

  <graph name='Servos/Servos 1-8'>
    <description>First 8 servo outputs</description>
    <expression>
      SERVO_OUTPUT_RAW.servo1_raw SERVO_OUTPUT_RAW.servo2_raw SERVO_OUTPUT_RAW.servo3_raw SERVO_OUTPUT_RAW.servo4_raw
      SERVO_OUTPUT_RAW.servo5_raw SERVO_OUTPUT_RAW.servo6_raw SERVO_OUTPUT_RAW.servo7_raw SERVO_OUTPUT_RAW.servo8_raw
    </expression>
    <expression>
      RCOU.Ch1 RCOU.Ch2 RCOU.Ch3 RCOU.Ch4
      RCOU.Ch5 RCOU.Ch6 RCOU.Ch7 RCOU.Ch8
    </expression>
    <expression>
      RCOU.C1 RCOU.C2 RCOU.C3 RCOU.C4
      RCOU.C5 RCOU.C6 RCOU.C7 RCOU.C8
    </expression>
  </graph>

  <graph name='RC/RC Input 1-4'>
    <description>First 4 RC inputs</description>
    <expression>
      RC_CHANNELS.chan1_raw RC_CHANNELS.chan2_raw RC_CHANNELS.chan3_raw RC_CHANNELS.chan4_raw
    </expression>
    <expression>
      RC_CHANNELS_RAW.chan1_raw RC_CHANNELS_RAW.chan2_raw RC_CHANNELS_RAW.chan3_raw RC_CHANNELS_RAW.chan4_raw
    </expression>
    <expression>
      RCIN.C1 RCIN.C2 RCIN.C3 RCIN.C4
    </expression>
  </graph>

  <graph name='RC/RC Input 1-8'>
    <description>First 8 RC inputs</description>
    <expression>
      RC_CHANNELS.chan1_raw RC_CHANNELS.chan2_raw RC_CHANNELS.chan3_raw RC_CHANNELS.chan4_raw
      RC_CHANNELS.chan5_raw RC_CHANNELS.chan6_raw RC_CHANNELS.chan7_raw RC_CHANNELS.chan8_raw
    </expression>
    <expression>
      RC_CHANNELS_RAW.chan1_raw RC_CHANNELS_RAW.chan2_raw RC_CHANNELS_RAW.chan3_raw RC_CHANNELS_RAW.chan4_raw
      RC_CHANNELS_RAW.chan5_raw RC_CHANNELS_RAW.chan6_raw RC_CHANNELS_RAW.chan7_raw RC_CHANNELS_RAW.chan8_raw
    </expression>
    <expression>
      RCIN.C1 RCIN.C2 RCIN.C3 RCIN.C4
      RCIN.C5 RCIN.C6 RCIN.C7 RCIN.C8
    </expression>
  </graph>

 <graph name='Sensors/Lidar/Rangefinder vs Baro'>
  <description>Rangefinders vs Barometric Altitude</description>
  <expression>BARO.Alt RFND.Dist1 RFND.Dist2</expression>
 </graph>

 <graph name='Plane/PID Tuning/Pitch Controller'>
  <description>This shows how well the pitch controller is tracking the desired pitch rate.
For a well tuned aircraft PIDP.Des should match the smoothed IMU.GyrY value. 
If PIDP.I has a constant positive value then it means the aircraft is a bit tail heavy, and the integrator is learning the elevator offset needed to keep the aircraft level. If PIDP.I has a constant negative value then the aircraft is a bit nose heavy.
You should also check PIDP.D and look for signs of oscillation, in which case PTCH2SRV_D is too high.</description>
  <expression>PIDP.Des PIDP.P PIDP.I PIDP.D lowpass(degrees(IMU.GyrY),"gy",0.9)</expression>
 </graph>

 <graph name='Plane/PID Tuning/Roll Controller'>
  <description>This shows how well the roll controller is tracking the desired roll rate.
For a well tuned aircraft PIDR.Des should match the smoothed IMU.GyrX value. 
If PIDR.I has a constant positive value then it means the aircraft is trimmed to roll to the left side, and the integrator is learning the aileron offset needed to keep the aircraft level. If PIDR.I has a constant negative value then the aircraft is trimmed a bit to the right.</description>
  <expression>PIDR.Des PIDR.P PIDR.I PIDR.D lowpass(degrees(IMU.GyrX),"gx",0.9)</expression>
 </graph>

 <graph name='Sensors/Compass/Compare Predicted'>
  <description></description>
  <expression>MAG.MagX expected_mag(GPS,ATT).x MAG.MagY expected_mag(GPS,ATT).y MAG.MagZ expected_mag(GPS,ATT).z</expression>
 </graph>

 <graph name='Sensors/Compass/Compare Predicted2'>
  <description></description>
  <expression>MAG2.MagX expected_mag(GPS,ATT).x MAG2.MagY expected_mag(GPS,ATT).y MAG2.MagZ expected_mag(GPS,ATT).z</expression>
 </graph>

 <graph name='Sensors/Compass/Compare Predicted3'>
  <description></description>
  <expression>MAG3.MagX expected_mag(GPS,ATT).x MAG3.MagY expected_mag(GPS,ATT).y MAG3.MagZ expected_mag(GPS,ATT).z</expression>
 </graph>

 <graph name='Sensors/Compass/EarthField Error EK2 Lane1'>
  <description></description>
  <expression>earth_field_error(GPS,NKF2).x earth_field_error(GPS,NKF2).y earth_field_error(GPS,NKF2).z</expression>
 </graph>

 <graph name='Sensors/Compass/EarthField Error EK2 Lane2'>
  <description></description>
  <expression>earth_field_error(GPS,NKF7).x earth_field_error(GPS,NKF7).y earth_field_error(GPS,NKF7).z</expression>
 </graph>

 <graph name='Copter/PID/PIDP'>
  <description></description>
  <expression>PIDP.P PIDP.I PIDP.D</expression>
 </graph>

 <graph name='Copter/PID/PIDR'>
  <description></description>
  <expression>PIDR.P PIDR.I PIDR.D</expression>
 </graph>

 <graph name='Copter/PID/PIDY'>
  <description></description>
  <expression>PIDY.P PIDY.I PIDY.D</expression>
 </graph>

 <graph name='Copter/PID/PIDA'>
  <description></description>
  <expression>PIDA.P PIDA.I PIDA.D</expression>
 </graph>
 
</graphs>
