{"version":3,"file":"createTaskProcessorWorker.js","sources":["../../../../Source/Core/formatError.js","../../../../Source/WorkersES6/createTaskProcessorWorker.js"],"sourcesContent":["import defined from \"./defined.js\";\n\n/**\n * Formats an error object into a String.  If available, uses name, message, and stack\n * properties, otherwise, falls back on toString().\n *\n * @exports formatError\n *\n * @param {*} object The item to find in the array.\n * @returns {String} A string containing the formatted error.\n */\nfunction formatError(object) {\n  var result;\n\n  var name = object.name;\n  var message = object.message;\n  if (defined(name) && defined(message)) {\n    result = name + \": \" + message;\n  } else {\n    result = object.toString();\n  }\n\n  var stack = object.stack;\n  if (defined(stack)) {\n    result += \"\\n\" + stack;\n  }\n\n  return result;\n}\nexport default formatError;\n","import defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport formatError from \"../Core/formatError.js\";\nimport when from \"../ThirdParty/when.js\";\n\n// createXXXGeometry functions may return Geometry or a Promise that resolves to Geometry\n// if the function requires access to ApproximateTerrainHeights.\n// For fully synchronous functions, just wrapping the function call in a `when` Promise doesn't\n// handle errors correctly, hence try-catch\nfunction callAndWrap(workerFunction, parameters, transferableObjects) {\n  var resultOrPromise;\n  try {\n    resultOrPromise = workerFunction(parameters, transferableObjects);\n    return resultOrPromise; // errors handled by Promise\n  } catch (e) {\n    return when.reject(e);\n  }\n}\n\n/**\n * Creates an adapter function to allow a calculation function to operate as a Web Worker,\n * paired with TaskProcessor, to receive tasks and return results.\n *\n * @exports createTaskProcessorWorker\n *\n * @param {createTaskProcessorWorker~WorkerFunction} workerFunction The calculation function,\n *        which takes parameters and returns a result.\n * @returns {createTaskProcessorWorker~TaskProcessorWorkerFunction} A function that adapts the\n *          calculation function to work as a Web Worker onmessage listener with TaskProcessor.\n *\n *\n * @example\n * function doCalculation(parameters, transferableObjects) {\n *   // calculate some result using the inputs in parameters\n *   return result;\n * }\n *\n * return Cesium.createTaskProcessorWorker(doCalculation);\n * // the resulting function is compatible with TaskProcessor\n *\n * @see TaskProcessor\n * @see {@link http://www.w3.org/TR/workers/|Web Workers}\n * @see {@link http://www.w3.org/TR/html5/common-dom-interfaces.html#transferable-objects|Transferable objects}\n */\nfunction createTaskProcessorWorker(workerFunction) {\n  var postMessage;\n\n  return function (event) {\n    var data = event.data;\n\n    var transferableObjects = [];\n    var responseMessage = {\n      id: data.id,\n      result: undefined,\n      error: undefined,\n    };\n\n    return when(\n      callAndWrap(workerFunction, data.parameters, transferableObjects)\n    )\n      .then(function (result) {\n        responseMessage.result = result;\n      })\n      .otherwise(function (e) {\n        if (e instanceof Error) {\n          // Errors can't be posted in a message, copy the properties\n          responseMessage.error = {\n            name: e.name,\n            message: e.message,\n            stack: e.stack,\n          };\n        } else {\n          responseMessage.error = e;\n        }\n      })\n      .always(function () {\n        if (!defined(postMessage)) {\n          postMessage = defaultValue(self.webkitPostMessage, self.postMessage);\n        }\n\n        if (!data.canTransferArrayBuffer) {\n          transferableObjects.length = 0;\n        }\n\n        try {\n          postMessage(responseMessage, transferableObjects);\n        } catch (e) {\n          // something went wrong trying to post the message, post a simpler\n          // error that we can be sure will be cloneable\n          responseMessage.result = undefined;\n          responseMessage.error =\n            \"postMessage failed with error: \" +\n            formatError(e) +\n            \"\\n  with responseMessage: \" +\n            JSON.stringify(responseMessage);\n          postMessage(responseMessage);\n        }\n      });\n  };\n}\n\n/**\n * A function that performs a calculation in a Web Worker.\n * @callback createTaskProcessorWorker~WorkerFunction\n *\n * @param {Object} parameters Parameters to the calculation.\n * @param {Array} transferableObjects An array that should be filled with references to objects inside\n *        the result that should be transferred back to the main document instead of copied.\n * @returns {Object} The result of the calculation.\n *\n * @example\n * function calculate(parameters, transferableObjects) {\n *   // perform whatever calculation is necessary.\n *   var typedArray = new Float32Array(0);\n *\n *   // typed arrays are transferable\n *   transferableObjects.push(typedArray)\n *\n *   return {\n *      typedArray : typedArray\n *   };\n * }\n */\n\n/**\n * A Web Worker message event handler function that handles the interaction with TaskProcessor,\n * specifically, task ID management and posting a response message containing the result.\n * @callback createTaskProcessorWorker~TaskProcessorWorkerFunction\n *\n * @param {Object} event The onmessage event object.\n */\nexport default createTaskProcessorWorker;\n"],"names":["defined","when","defaultValue"],"mappings":"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"}